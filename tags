!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS	inc/fitz.h	131;"	d
AES_DECRYPT	inc/fitz.h	324;"	d
AES_ENCRYPT	inc/fitz.h	325;"	d
AFM_FontInfo	freetype/internal/t1types.h	/^  } AFM_FontInfoRec, *AFM_FontInfo;$/;"	t	typeref:struct:AFM_FontInfoRec_
AFM_FontInfoRec	freetype/internal/t1types.h	/^  } AFM_FontInfoRec, *AFM_FontInfo;$/;"	t	typeref:struct:AFM_FontInfoRec_
AFM_FontInfoRec_	freetype/internal/t1types.h	/^  typedef struct  AFM_FontInfoRec_$/;"	s
AFM_KernPair	freetype/internal/t1types.h	/^  } AFM_KernPairRec, *AFM_KernPair;$/;"	t	typeref:struct:AFM_KernPairRec_
AFM_KernPairRec	freetype/internal/t1types.h	/^  } AFM_KernPairRec, *AFM_KernPair;$/;"	t	typeref:struct:AFM_KernPairRec_
AFM_KernPairRec_	freetype/internal/t1types.h	/^  typedef struct  AFM_KernPairRec_$/;"	s
AFM_Parser	freetype/internal/psaux.h	/^  typedef struct AFM_ParserRec_*  AFM_Parser;$/;"	t	typeref:struct:AFM_ParserRec_
AFM_ParserRec	freetype/internal/psaux.h	/^  } AFM_ParserRec;$/;"	t	typeref:struct:AFM_ParserRec_
AFM_ParserRec_	freetype/internal/psaux.h	/^  typedef struct  AFM_ParserRec_$/;"	s
AFM_Parser_FuncsRec	freetype/internal/psaux.h	/^  } AFM_Parser_FuncsRec;$/;"	t	typeref:struct:AFM_Parser_FuncsRec_
AFM_Parser_FuncsRec_	freetype/internal/psaux.h	/^  typedef struct  AFM_Parser_FuncsRec_$/;"	s
AFM_Stream	freetype/internal/psaux.h	/^  typedef struct AFM_StreamRec_*  AFM_Stream;$/;"	t	typeref:struct:AFM_StreamRec_
AFM_TrackKern	freetype/internal/t1types.h	/^  } AFM_TrackKernRec, *AFM_TrackKern;$/;"	t	typeref:struct:AFM_TrackKernRec_
AFM_TrackKernRec	freetype/internal/t1types.h	/^  } AFM_TrackKernRec, *AFM_TrackKern;$/;"	t	typeref:struct:AFM_TrackKernRec_
AFM_TrackKernRec_	freetype/internal/t1types.h	/^  typedef struct  AFM_TrackKernRec_$/;"	s
AF_CONFIG_OPTION_CJK	freetype/config/ftoption.h	885;"	d
AF_CONFIG_OPTION_INDIC	freetype/config/ftoption.h	893;"	d
AF_CONFIG_OPTION_USE_WARPER	freetype/config/ftoption.h	908;"	d
ARROW	inc/mypdf.h	/^enum { ARROW, HAND, WAIT };$/;"	e	enum:__anon17
AUTOHINT_H_	freetype/internal/autohint.h	28;"	d
A_space	freetype/ftwinfnt.h	/^    FT_UShort  A_space;$/;"	m	struct:FT_WinFNT_HeaderRec_
Ascender	freetype/internal/t1types.h	/^    FT_Fixed       Ascender;$/;"	m	struct:AFM_FontInfoRec_
Ascender	freetype/tttables.h	/^    FT_Short   Ascender;$/;"	m	struct:TT_HoriHeader_
Ascender	freetype/tttables.h	/^    FT_Short   Ascender;$/;"	m	struct:TT_VertHeader_
BDF_PROPERTY_TYPE_ATOM	freetype/ftbdf.h	/^    BDF_PROPERTY_TYPE_ATOM     = 1,$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_CARDINAL	freetype/ftbdf.h	/^    BDF_PROPERTY_TYPE_CARDINAL = 3$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_INTEGER	freetype/ftbdf.h	/^    BDF_PROPERTY_TYPE_INTEGER  = 2,$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_NONE	freetype/ftbdf.h	/^    BDF_PROPERTY_TYPE_NONE     = 0,$/;"	e	enum:BDF_PropertyType_
BDF_Property	freetype/ftbdf.h	/^  typedef struct BDF_PropertyRec_*  BDF_Property;$/;"	t	typeref:struct:BDF_PropertyRec_
BDF_PropertyRec	freetype/ftbdf.h	/^  } BDF_PropertyRec;$/;"	t	typeref:struct:BDF_PropertyRec_
BDF_PropertyRec_	freetype/ftbdf.h	/^  typedef struct  BDF_PropertyRec_$/;"	s
BDF_PropertyType	freetype/ftbdf.h	/^  } BDF_PropertyType;$/;"	t	typeref:enum:BDF_PropertyType_
BDF_PropertyType_	freetype/ftbdf.h	/^  typedef enum  BDF_PropertyType_$/;"	g
B_space	freetype/ftwinfnt.h	/^    FT_UShort  B_space;$/;"	m	struct:FT_WinFNT_HeaderRec_
Bad	src/base_string.c	/^	Bad = Runeerror,$/;"	e	enum:__anon2	file:
Bit1	src/base_string.c	/^	Bit1 = 7,$/;"	e	enum:__anon2	file:
Bit2	src/base_string.c	/^	Bit2 = 5,$/;"	e	enum:__anon2	file:
Bit3	src/base_string.c	/^	Bit3 = 4,$/;"	e	enum:__anon2	file:
Bit4	src/base_string.c	/^	Bit4 = 3,$/;"	e	enum:__anon2	file:
Bit5	src/base_string.c	/^	Bit5 = 2,$/;"	e	enum:__anon2	file:
Bitx	src/base_string.c	/^	Bitx = 6,$/;"	e	enum:__anon2	file:
CC	Makefile	/^CC      = gcc$/;"	m
CFF_CONFIG_OPTION_DARKENING_PARAMETER_X1	freetype/config/ftoption.h	821;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_X2	freetype/config/ftoption.h	824;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_X3	freetype/config/ftoption.h	827;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_X4	freetype/config/ftoption.h	830;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y1	freetype/config/ftoption.h	822;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y2	freetype/config/ftoption.h	825;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y3	freetype/config/ftoption.h	828;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y4	freetype/config/ftoption.h	831;"	d
CFLAGS	Makefile	/^CFLAGS  = -g -Wall -lz -lfreetype$/;"	m
CID_Face	freetype/internal/t1types.h	/^  typedef struct CID_FaceRec_*  CID_Face;$/;"	t	typeref:struct:CID_FaceRec_
CID_FaceDict	freetype/t1tables.h	/^  typedef struct CID_FaceDictRec_*  CID_FaceDict;$/;"	t	typeref:struct:CID_FaceDictRec_
CID_FaceDictRec	freetype/t1tables.h	/^  } CID_FaceDictRec;$/;"	t	typeref:struct:CID_FaceDictRec_
CID_FaceDictRec_	freetype/t1tables.h	/^  typedef struct  CID_FaceDictRec_$/;"	s
CID_FaceInfo	freetype/t1tables.h	/^  typedef struct CID_FaceInfoRec_*  CID_FaceInfo;$/;"	t	typeref:struct:CID_FaceInfoRec_
CID_FaceInfoRec	freetype/t1tables.h	/^  } CID_FaceInfoRec;$/;"	t	typeref:struct:CID_FaceInfoRec_
CID_FaceInfoRec_	freetype/t1tables.h	/^  typedef struct  CID_FaceInfoRec_$/;"	s
CID_FaceRec	freetype/internal/t1types.h	/^  } CID_FaceRec;$/;"	t	typeref:struct:CID_FaceRec_
CID_FaceRec_	freetype/internal/t1types.h	/^  typedef struct  CID_FaceRec_$/;"	s
CID_FontDict	freetype/t1tables.h	/^  typedef CID_FaceDictRec  CID_FontDict;$/;"	t
CID_Info	freetype/t1tables.h	/^  typedef CID_FaceInfoRec  CID_Info;$/;"	t
CID_Subrs	freetype/internal/t1types.h	/^  } CID_SubrsRec, *CID_Subrs;$/;"	t	typeref:struct:CID_SubrsRec_
CID_SubrsRec	freetype/internal/t1types.h	/^  } CID_SubrsRec, *CID_Subrs;$/;"	t	typeref:struct:CID_SubrsRec_
CID_SubrsRec_	freetype/internal/t1types.h	/^  typedef struct  CID_SubrsRec_$/;"	s
CLAMP	inc/fitz.h	134;"	d
CNS	src/pdf_fontfile.c	/^enum { CNS, GB, Japan, Korea };$/;"	e	enum:__anon8	file:
CONST_FT_RFORK_RULE_ARRAY_BEGIN	freetype/internal/ftrfork.h	86;"	d
CONST_FT_RFORK_RULE_ARRAY_BEGIN	freetype/internal/ftrfork.h	96;"	d
CONST_FT_RFORK_RULE_ARRAY_END	freetype/internal/ftrfork.h	108;"	d
CONST_FT_RFORK_RULE_ARRAY_END	freetype/internal/ftrfork.h	91;"	d
CONST_FT_RFORK_RULE_ARRAY_ENTRY	freetype/internal/ftrfork.h	104;"	d
CONST_FT_RFORK_RULE_ARRAY_ENTRY	freetype/internal/ftrfork.h	88;"	d
C_space	freetype/ftwinfnt.h	/^    FT_UShort  C_space;$/;"	m	struct:FT_WinFNT_HeaderRec_
CapHeight	freetype/tttables.h	/^    FT_UShort  CapHeight;$/;"	m	struct:TT_PCLT_
CharacterComplement	freetype/tttables.h	/^    FT_Char    CharacterComplement[8];$/;"	m	struct:TT_PCLT_
CheckSum	freetype/internal/tttypes.h	/^    FT_ULong  CheckSum;      \/* uncompressed checksum     *\/$/;"	m	struct:WOFF_TableRec_
CheckSum	freetype/internal/tttypes.h	/^    FT_ULong  CheckSum;   \/*    table checksum *\/$/;"	m	struct:TT_TableRec_
CheckSum_Adjust	freetype/tttables.h	/^    FT_Long    CheckSum_Adjust;$/;"	m	struct:TT_Header_
CompLength	freetype/internal/tttypes.h	/^    FT_ULong  CompLength;    \/* compressed table length   *\/$/;"	m	struct:WOFF_TableRec_
Created	freetype/tttables.h	/^    FT_Long    Created [2];$/;"	m	struct:TT_Header_
DEBUG	src/mypdf.c	8;"	d	file:
Descender	freetype/internal/t1types.h	/^    FT_Fixed       Descender;$/;"	m	struct:AFM_FontInfoRec_
Descender	freetype/tttables.h	/^    FT_Short   Descender;$/;"	m	struct:TT_HoriHeader_
Descender	freetype/tttables.h	/^    FT_Short   Descender;$/;"	m	struct:TT_VertHeader_
ERROR	src/filt_faxd.c	/^	ERROR = -1,$/;"	e	enum:__anon4	file:
F2DOT14_TO_FIXED	freetype/internal/ftcalc.h	405;"	d
FALSE	freetype/internal/ftobjs.h	57;"	d
FD_ALLCAP	src/pdf_fontfile.c	/^	FD_ALLCAP = 1 << 16,$/;"	e	enum:__anon7	file:
FD_FIXED	src/pdf_fontfile.c	/^	FD_FIXED = 1 << 0,$/;"	e	enum:__anon7	file:
FD_FORCEBOLD	src/pdf_fontfile.c	/^	FD_FORCEBOLD = 1 << 18$/;"	e	enum:__anon7	file:
FD_ITALIC	src/pdf_fontfile.c	/^	FD_ITALIC = 1 << 6,$/;"	e	enum:__anon7	file:
FD_NONSYMBOLIC	src/pdf_fontfile.c	/^	FD_NONSYMBOLIC = 1 << 5,$/;"	e	enum:__anon7	file:
FD_SCRIPT	src/pdf_fontfile.c	/^	FD_SCRIPT = 1 << 3,$/;"	e	enum:__anon7	file:
FD_SERIF	src/pdf_fontfile.c	/^	FD_SERIF = 1 << 1,$/;"	e	enum:__anon7	file:
FD_SMALLCAP	src/pdf_fontfile.c	/^	FD_SMALLCAP = 1 << 17,$/;"	e	enum:__anon7	file:
FD_SYMBOLIC	src/pdf_fontfile.c	/^	FD_SYMBOLIC = 1 << 2,$/;"	e	enum:__anon7	file:
FIXED_TO_INT	freetype/internal/ftcalc.h	407;"	d
FLOAT_TO_FIXED	freetype/internal/ftcalc.h	406;"	d
FREETYPE_H_	freetype/freetype.h	20;"	d
FREETYPE_MAJOR	freetype/freetype.h	4443;"	d
FREETYPE_MINOR	freetype/freetype.h	4444;"	d
FREETYPE_PATCH	freetype/freetype.h	4445;"	d
FTADVANC_H_	freetype/ftadvanc.h	20;"	d
FTAUTOH_H_	freetype/ftautoh.h	20;"	d
FTBBOX_H_	freetype/ftbbox.h	31;"	d
FTBDF_H_	freetype/ftbdf.h	20;"	d
FTBITMAP_H_	freetype/ftbitmap.h	20;"	d
FTBZIP2_H_	freetype/ftbzip2.h	20;"	d
FTCACHE_H_	freetype/ftcache.h	20;"	d
FTCALC_H_	freetype/internal/ftcalc.h	20;"	d
FTCFFDRV_H_	freetype/ftcffdrv.h	20;"	d
FTCID_H_	freetype/ftcid.h	20;"	d
FTCONFIG_H_	freetype/config/ftconfig.h	39;"	d
FTC_CMapCache	freetype/ftcache.h	/^  typedef struct FTC_CMapCacheRec_*  FTC_CMapCache;$/;"	t	typeref:struct:FTC_CMapCacheRec_
FTC_FaceID	freetype/ftcache.h	/^  typedef FT_Pointer  FTC_FaceID;$/;"	t
FTC_Face_Requester	freetype/ftcache.h	/^  (*FTC_Face_Requester)( FTC_FaceID  face_id,$/;"	t
FTC_IMAGE_TYPE_COMPARE	freetype/ftcache.h	692;"	d
FTC_ImageCache	freetype/ftcache.h	/^  typedef struct FTC_ImageCacheRec_*  FTC_ImageCache;$/;"	t	typeref:struct:FTC_ImageCacheRec_
FTC_ImageType	freetype/ftcache.h	/^  typedef struct FTC_ImageTypeRec_*  FTC_ImageType;$/;"	t	typeref:struct:FTC_ImageTypeRec_
FTC_ImageTypeRec	freetype/ftcache.h	/^  } FTC_ImageTypeRec;$/;"	t	typeref:struct:FTC_ImageTypeRec_
FTC_ImageTypeRec_	freetype/ftcache.h	/^  typedef struct  FTC_ImageTypeRec_$/;"	s
FTC_Manager	freetype/ftcache.h	/^  typedef struct FTC_ManagerRec_*  FTC_Manager;$/;"	t	typeref:struct:FTC_ManagerRec_
FTC_Node	freetype/ftcache.h	/^  typedef struct FTC_NodeRec_*  FTC_Node;$/;"	t	typeref:struct:FTC_NodeRec_
FTC_SBit	freetype/ftcache.h	/^  typedef struct FTC_SBitRec_*  FTC_SBit;$/;"	t	typeref:struct:FTC_SBitRec_
FTC_SBitCache	freetype/ftcache.h	/^  typedef struct FTC_SBitCacheRec_*  FTC_SBitCache;$/;"	t	typeref:struct:FTC_SBitCacheRec_
FTC_SBitRec	freetype/ftcache.h	/^  } FTC_SBitRec;$/;"	t	typeref:struct:FTC_SBitRec_
FTC_SBitRec_	freetype/ftcache.h	/^  typedef struct  FTC_SBitRec_$/;"	s
FTC_Scaler	freetype/ftcache.h	/^  typedef struct FTC_ScalerRec_*  FTC_Scaler;$/;"	t	typeref:struct:FTC_ScalerRec_
FTC_ScalerRec	freetype/ftcache.h	/^  } FTC_ScalerRec;$/;"	t	typeref:struct:FTC_ScalerRec_
FTC_ScalerRec_	freetype/ftcache.h	/^  typedef struct  FTC_ScalerRec_$/;"	s
FTDEBUG_H_	freetype/internal/ftdebug.h	25;"	d
FTDRIVER_H_	freetype/internal/ftdriver.h	20;"	d
FTERRORS_H_	freetype/fterrors.h	112;"	d
FTFNTFMT_H_	freetype/ftfntfmt.h	20;"	d
FTGASP_H_	freetype/ftgasp.h	20;"	d
FTGLOADR_H_	freetype/internal/ftgloadr.h	20;"	d
FTGLYPH_H_	freetype/ftglyph.h	33;"	d
FTGXVAL_H_	freetype/ftgxval.h	29;"	d
FTGZIP_H_	freetype/ftgzip.h	20;"	d
FTHASH_H_	freetype/internal/fthash.h	43;"	d
FTHEADER_H_	freetype/config/ftheader.h	19;"	d
FTIMAGE_H_	freetype/ftimage.h	28;"	d
FTINCREM_H_	freetype/ftincrem.h	20;"	d
FTLCDFIL_H_	freetype/ftlcdfil.h	21;"	d
FTLIST_H_	freetype/ftlist.h	28;"	d
FTLZW_H_	freetype/ftlzw.h	20;"	d
FTMAC_H_	freetype/ftmac.h	29;"	d
FTMEMORY_H_	freetype/internal/ftmemory.h	20;"	d
FTMM_H_	freetype/ftmm.h	20;"	d
FTMODAPI_H_	freetype/ftmodapi.h	20;"	d
FTMODERR_H_	freetype/ftmoderr.h	95;"	d
FTOBJS_H_	freetype/internal/ftobjs.h	27;"	d
FTOPTION_H_	freetype/config/ftoption.h	20;"	d
FTOTVAL_H_	freetype/ftotval.h	31;"	d
FTOUTLN_H_	freetype/ftoutln.h	21;"	d
FTPCFDRV_H_	freetype/ftpcfdrv.h	20;"	d
FTPFR_H_	freetype/ftpfr.h	20;"	d
FTPIC_H_	freetype/internal/ftpic.h	27;"	d
FTRENDER_H_	freetype/ftrender.h	20;"	d
FTRFORK_H_	freetype/internal/ftrfork.h	25;"	d
FTRenderer_getCBox	freetype/ftrender.h	115;"	d
FTRenderer_render	freetype/ftrender.h	113;"	d
FTRenderer_setMode	freetype/ftrender.h	116;"	d
FTRenderer_transform	freetype/ftrender.h	114;"	d
FTSERV_H_	freetype/internal/ftserv.h	32;"	d
FTSIZES_H_	freetype/ftsizes.h	29;"	d
FTSNAMES_H_	freetype/ftsnames.h	23;"	d
FTSTDLIB_H_	freetype/config/ftstdlib.h	32;"	d
FTSTREAM_H_	freetype/internal/ftstream.h	20;"	d
FTSTROKE_H_	freetype/ftstroke.h	20;"	d
FTSYNTH_H_	freetype/ftsynth.h	45;"	d
FTSYSTEM_H_	freetype/ftsystem.h	20;"	d
FTTRIGON_H_	freetype/fttrigon.h	20;"	d
FTTTDRV_H_	freetype/ftttdrv.h	21;"	d
FTTYPES_H_	freetype/fttypes.h	20;"	d
FTVALID_H_	freetype/internal/ftvalid.h	20;"	d
FTWINFNT_H_	freetype/ftwinfnt.h	20;"	d
FT_ABS	freetype/internal/ftobjs.h	73;"	d
FT_ADVANCES_H	freetype/config/ftheader.h	807;"	d
FT_ADVANCE_FLAG_FAST_ONLY	freetype/ftadvanc.h	80;"	d
FT_ALLOC	freetype/internal/ftmemory.h	303;"	d
FT_ALLOC_MULT	freetype/internal/ftmemory.h	309;"	d
FT_ANGLE_2PI	freetype/fttrigon.h	76;"	d
FT_ANGLE_PI	freetype/fttrigon.h	64;"	d
FT_ANGLE_PI2	freetype/fttrigon.h	88;"	d
FT_ANGLE_PI4	freetype/fttrigon.h	100;"	d
FT_ARRAY_CHECK	freetype/internal/ftmemory.h	262;"	d
FT_ARRAY_COPY	freetype/internal/ftmemory.h	244;"	d
FT_ARRAY_MAX	freetype/internal/ftmemory.h	260;"	d
FT_ARRAY_MOVE	freetype/internal/ftmemory.h	249;"	d
FT_ARRAY_ZERO	freetype/internal/ftmemory.h	240;"	d
FT_ASSERT	freetype/internal/ftdebug.h	195;"	d
FT_ASSERT	freetype/internal/ftdebug.h	211;"	d
FT_ASSIGNP	freetype/internal/ftmemory.h	78;"	d
FT_ASSIGNP_INNER	freetype/internal/ftmemory.h	104;"	d
FT_ASSIGNP_INNER	freetype/internal/ftmemory.h	97;"	d
FT_AUTOHINTER_H	freetype/config/ftheader.h	328;"	d
FT_AUTOHINTER_SCRIPT_CJK	freetype/ftautoh.h	233;"	d
FT_AUTOHINTER_SCRIPT_INDIC	freetype/ftautoh.h	234;"	d
FT_AUTOHINTER_SCRIPT_LATIN	freetype/ftautoh.h	232;"	d
FT_AUTOHINTER_SCRIPT_NONE	freetype/ftautoh.h	231;"	d
FT_Alloc_Func	freetype/ftsystem.h	/^  (*FT_Alloc_Func)( FT_Memory  memory,$/;"	t
FT_Angle	freetype/fttrigon.h	/^  typedef FT_Fixed  FT_Angle;$/;"	t
FT_AutoHinter	freetype/internal/autohint.h	/^  typedef struct FT_AutoHinterRec_  *FT_AutoHinter;$/;"	t	typeref:struct:FT_AutoHinterRec_
FT_AutoHinter_GlobalDoneFunc	freetype/internal/autohint.h	/^  (*FT_AutoHinter_GlobalDoneFunc)( FT_AutoHinter  hinter,$/;"	t
FT_AutoHinter_GlobalGetFunc	freetype/internal/autohint.h	/^  (*FT_AutoHinter_GlobalGetFunc)( FT_AutoHinter  hinter,$/;"	t
FT_AutoHinter_GlobalResetFunc	freetype/internal/autohint.h	/^  (*FT_AutoHinter_GlobalResetFunc)( FT_AutoHinter  hinter,$/;"	t
FT_AutoHinter_GlyphLoadFunc	freetype/internal/autohint.h	/^  (*FT_AutoHinter_GlyphLoadFunc)( FT_AutoHinter  hinter,$/;"	t
FT_AutoHinter_Interface	freetype/internal/autohint.h	/^  } FT_AutoHinter_InterfaceRec, *FT_AutoHinter_Interface;$/;"	t	typeref:struct:FT_AutoHinter_InterfaceRec_
FT_AutoHinter_InterfaceRec	freetype/internal/autohint.h	/^  } FT_AutoHinter_InterfaceRec, *FT_AutoHinter_Interface;$/;"	t	typeref:struct:FT_AutoHinter_InterfaceRec_
FT_AutoHinter_InterfaceRec_	freetype/internal/autohint.h	/^  typedef struct  FT_AutoHinter_InterfaceRec_$/;"	s
FT_BASE	freetype/config/ftconfig.h	392;"	d
FT_BASE	freetype/config/ftconfig.h	394;"	d
FT_BASE_DEF	freetype/config/ftconfig.h	403;"	d
FT_BASE_DEF	freetype/config/ftconfig.h	405;"	d
FT_BBOX_H	freetype/config/ftheader.h	541;"	d
FT_BBox	freetype/ftimage.h	/^  } FT_BBox;$/;"	t	typeref:struct:FT_BBox_
FT_BBox_	freetype/ftimage.h	/^  typedef struct  FT_BBox_$/;"	s
FT_BDF_GetCharsetIdFunc	freetype/internal/services/svbdf.h	/^  (*FT_BDF_GetCharsetIdFunc)( FT_Face       face,$/;"	t
FT_BDF_GetPropertyFunc	freetype/internal/services/svbdf.h	/^  (*FT_BDF_GetPropertyFunc)( FT_Face           face,$/;"	t
FT_BDF_H	freetype/config/ftheader.h	436;"	d
FT_BEGIN_HEADER	freetype/config/ftheader.h	34;"	d
FT_BEGIN_HEADER	freetype/config/ftheader.h	36;"	d
FT_BEGIN_STMNT	freetype/config/ftconfig.h	352;"	d
FT_BITMAP_GLYPH	freetype/internal/ftobjs.h	719;"	d
FT_BITMAP_H	freetype/config/ftheader.h	528;"	d
FT_BOOL	freetype/fttypes.h	578;"	d
FT_BSB_Adjust_Func	freetype/internal/services/svmetric.h	/^  (*FT_BSB_Adjust_Func)( FT_Face  face,$/;"	t
FT_BYTE_	freetype/internal/ftstream.h	156;"	d
FT_BYTE_U16	freetype/internal/ftstream.h	164;"	d
FT_BYTE_U32	freetype/internal/ftstream.h	165;"	d
FT_BZIP2_H	freetype/config/ftheader.h	489;"	d
FT_Bitmap	freetype/ftimage.h	/^  } FT_Bitmap;$/;"	t	typeref:struct:FT_Bitmap_
FT_BitmapGlyph	freetype/ftglyph.h	/^  typedef struct FT_BitmapGlyphRec_*  FT_BitmapGlyph;$/;"	t	typeref:struct:FT_BitmapGlyphRec_
FT_BitmapGlyphRec	freetype/ftglyph.h	/^  } FT_BitmapGlyphRec;$/;"	t	typeref:struct:FT_BitmapGlyphRec_
FT_BitmapGlyphRec_	freetype/ftglyph.h	/^  typedef struct  FT_BitmapGlyphRec_$/;"	s
FT_Bitmap_	freetype/ftimage.h	/^  typedef struct  FT_Bitmap_$/;"	s
FT_Bitmap_LcdFilterFunc	freetype/internal/ftobjs.h	/^  typedef void  (*FT_Bitmap_LcdFilterFunc)( FT_Bitmap*      bitmap,$/;"	t
FT_Bitmap_Size	freetype/freetype.h	/^  } FT_Bitmap_Size;$/;"	t	typeref:struct:FT_Bitmap_Size_
FT_Bitmap_Size_	freetype/freetype.h	/^  typedef struct  FT_Bitmap_Size_$/;"	s
FT_Bool	freetype/fttypes.h	/^  typedef unsigned char  FT_Bool;$/;"	t
FT_Byte	freetype/fttypes.h	/^  typedef unsigned char  FT_Byte;$/;"	t
FT_Bytes	freetype/fttypes.h	/^  typedef const FT_Byte*  FT_Bytes;$/;"	t
FT_CACHE_CHARMAP_H	freetype/config/ftheader.h	611;"	d
FT_CACHE_H	freetype/config/ftheader.h	554;"	d
FT_CACHE_IMAGE_H	freetype/config/ftheader.h	574;"	d
FT_CACHE_INTERNAL_CACHE_H	freetype/config/ftheader.h	822;"	d
FT_CACHE_INTERNAL_GLYPH_H	freetype/config/ftheader.h	823;"	d
FT_CACHE_INTERNAL_IMAGE_H	freetype/config/ftheader.h	824;"	d
FT_CACHE_INTERNAL_MANAGER_H	freetype/config/ftheader.h	821;"	d
FT_CACHE_INTERNAL_MRU_H	freetype/config/ftheader.h	820;"	d
FT_CACHE_INTERNAL_SBITS_H	freetype/config/ftheader.h	825;"	d
FT_CACHE_MANAGER_H	freetype/config/ftheader.h	819;"	d
FT_CACHE_SMALL_BITMAPS_H	freetype/config/ftheader.h	595;"	d
FT_CALLBACK_DEF	freetype/config/ftconfig.h	468;"	d
FT_CALLBACK_DEF	freetype/config/ftconfig.h	470;"	d
FT_CALLBACK_TABLE	freetype/config/ftconfig.h	476;"	d
FT_CALLBACK_TABLE	freetype/config/ftconfig.h	479;"	d
FT_CALLBACK_TABLE_DEF	freetype/config/ftconfig.h	477;"	d
FT_CALLBACK_TABLE_DEF	freetype/config/ftconfig.h	480;"	d
FT_CFF_DRIVER_H	freetype/config/ftheader.h	341;"	d
FT_CFF_HINTING_ADOBE	freetype/ftcffdrv.h	175;"	d
FT_CFF_HINTING_FREETYPE	freetype/ftcffdrv.h	174;"	d
FT_CHAR_BIT	freetype/config/ftconfig.h	70;"	d
FT_CHAR_BIT	freetype/config/ftstdlib.h	61;"	d
FT_CID_GetCIDFromGlyphIndexFunc	freetype/internal/services/svcid.h	/^  (*FT_CID_GetCIDFromGlyphIndexFunc)( FT_Face   face,$/;"	t
FT_CID_GetIsInternallyCIDKeyedFunc	freetype/internal/services/svcid.h	/^  (*FT_CID_GetIsInternallyCIDKeyedFunc)( FT_Face   face,$/;"	t
FT_CID_GetRegistryOrderingSupplementFunc	freetype/internal/services/svcid.h	/^  (*FT_CID_GetRegistryOrderingSupplementFunc)( FT_Face       face,$/;"	t
FT_CID_H	freetype/config/ftheader.h	450;"	d
FT_CMAP	freetype/internal/ftobjs.h	142;"	d
FT_CMAP_ENCODING	freetype/internal/ftobjs.h	147;"	d
FT_CMAP_ENCODING_ID	freetype/internal/ftobjs.h	146;"	d
FT_CMAP_FACE	freetype/internal/ftobjs.h	148;"	d
FT_CMAP_PLATFORM_ID	freetype/internal/ftobjs.h	145;"	d
FT_CMap	freetype/internal/ftobjs.h	/^  typedef struct FT_CMapRec_*              FT_CMap;$/;"	t	typeref:struct:FT_CMapRec_
FT_CMapRec	freetype/internal/ftobjs.h	/^  } FT_CMapRec;$/;"	t	typeref:struct:FT_CMapRec_
FT_CMapRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_CMapRec_$/;"	s
FT_CMap_CharIndexFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_CharIndexFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_CharNextFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_CharNextFunc)( FT_CMap     cmap,$/;"	t
FT_CMap_CharVarIndexFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_CharVarIndexFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_CharVarIsDefaultFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_CharVarIsDefaultFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_CharVariantListFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_CharVariantListFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_Class	freetype/internal/ftobjs.h	/^  typedef const struct FT_CMap_ClassRec_*  FT_CMap_Class;$/;"	t	typeref:struct:FT_CMap_ClassRec_
FT_CMap_ClassRec	freetype/internal/ftobjs.h	/^  } FT_CMap_ClassRec;$/;"	t	typeref:struct:FT_CMap_ClassRec_
FT_CMap_ClassRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_CMap_ClassRec_$/;"	s
FT_CMap_DoneFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_DoneFunc)( FT_CMap  cmap );$/;"	t
FT_CMap_InitFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_InitFunc)( FT_CMap     cmap,$/;"	t
FT_CMap_VariantCharListFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_VariantCharListFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_VariantListFunc	freetype/internal/ftobjs.h	/^  (*FT_CMap_VariantListFunc)( FT_CMap    cmap,$/;"	t
FT_CONFIG_CONFIG_H	freetype/config/ftheader.h	110;"	d
FT_CONFIG_MODULES_H	freetype/config/ftheader.h	156;"	d
FT_CONFIG_OPTIONS_H	freetype/config/ftheader.h	140;"	d
FT_CONFIG_OPTION_ADOBE_GLYPH_LIST	freetype/config/ftoption.h	356;"	d
FT_CONFIG_OPTION_ENVIRONMENT_PROPERTIES	freetype/config/ftoption.h	105;"	d
FT_CONFIG_OPTION_FORCE_INT64	freetype/config/ftoption.h	145;"	d
FT_CONFIG_OPTION_GUESSING_EMBEDDED_RFORK	freetype/config/ftoption.h	391;"	d
FT_CONFIG_OPTION_INCREMENTAL	freetype/config/ftoption.h	403;"	d
FT_CONFIG_OPTION_INLINE_MULFIX	freetype/config/ftoption.h	166;"	d
FT_CONFIG_OPTION_MAC_FONTS	freetype/config/ftoption.h	369;"	d
FT_CONFIG_OPTION_POSTSCRIPT_NAMES	freetype/config/ftoption.h	338;"	d
FT_CONFIG_OPTION_USE_LZW	freetype/config/ftoption.h	181;"	d
FT_CONFIG_OPTION_USE_MODULE_ERRORS	freetype/config/ftoption.h	512;"	d
FT_CONFIG_OPTION_USE_ZLIB	freetype/config/ftoption.h	196;"	d
FT_CONFIG_STANDARD_LIBRARY_H	freetype/config/ftheader.h	125;"	d
FT_CURVE_TAG	freetype/ftimage.h	451;"	d
FT_CURVE_TAG_CONIC	freetype/ftimage.h	454;"	d
FT_CURVE_TAG_CUBIC	freetype/ftimage.h	455;"	d
FT_CURVE_TAG_HAS_SCANMODE	freetype/ftimage.h	457;"	d
FT_CURVE_TAG_ON	freetype/ftimage.h	453;"	d
FT_CURVE_TAG_TOUCH_BOTH	freetype/ftimage.h	462;"	d
FT_CURVE_TAG_TOUCH_X	freetype/ftimage.h	459;"	d
FT_CURVE_TAG_TOUCH_Y	freetype/ftimage.h	460;"	d
FT_Char	freetype/fttypes.h	/^  typedef signed char  FT_Char;$/;"	t
FT_CharMap	freetype/freetype.h	/^  typedef struct FT_CharMapRec_*  FT_CharMap;$/;"	t	typeref:struct:FT_CharMapRec_
FT_CharMapRec	freetype/freetype.h	/^  } FT_CharMapRec;$/;"	t	typeref:struct:FT_CharMapRec_
FT_CharMapRec_	freetype/freetype.h	/^  typedef struct  FT_CharMapRec_$/;"	s
FT_Curve_Tag_Conic	freetype/ftimage.h	466;"	d
FT_Curve_Tag_Cubic	freetype/ftimage.h	467;"	d
FT_Curve_Tag_On	freetype/ftimage.h	465;"	d
FT_Curve_Tag_Touch_X	freetype/ftimage.h	468;"	d
FT_Curve_Tag_Touch_Y	freetype/ftimage.h	469;"	d
FT_DEBUG_HOOK_TRUETYPE	freetype/internal/ftobjs.h	804;"	d
FT_DEBUG_INNER	freetype/internal/ftmemory.h	103;"	d
FT_DEBUG_INNER	freetype/internal/ftmemory.h	93;"	d
FT_DEBUG_LEVEL_ERROR	freetype/internal/ftdebug.h	40;"	d
FT_DEBUG_LEVEL_ERROR	freetype/internal/ftdebug.h	41;"	d
FT_DECLARE_CMAP_CLASS	freetype/internal/ftobjs.h	216;"	d
FT_DECLARE_CMAP_CLASS	freetype/internal/ftobjs.h	248;"	d
FT_DECLARE_DRIVER	freetype/internal/ftdriver.h	226;"	d
FT_DECLARE_DRIVER	freetype/internal/ftdriver.h	294;"	d
FT_DECLARE_MODULE	freetype/internal/ftobjs.h	1449;"	d
FT_DECLARE_MODULE	freetype/internal/ftobjs.h	1509;"	d
FT_DECLARE_RENDERER	freetype/internal/ftobjs.h	1237;"	d
FT_DECLARE_RENDERER	freetype/internal/ftobjs.h	1281;"	d
FT_DEFINE_AUTOHINTER_INTERFACE	freetype/internal/autohint.h	202;"	d
FT_DEFINE_AUTOHINTER_INTERFACE	freetype/internal/autohint.h	219;"	d
FT_DEFINE_CMAP_CLASS	freetype/internal/ftobjs.h	219;"	d
FT_DEFINE_CMAP_CLASS	freetype/internal/ftobjs.h	253;"	d
FT_DEFINE_DRIVER	freetype/internal/ftdriver.h	230;"	d
FT_DEFINE_DRIVER	freetype/internal/ftdriver.h	296;"	d
FT_DEFINE_GLYPH	freetype/internal/ftobjs.h	1147;"	d
FT_DEFINE_GLYPH	freetype/internal/ftobjs.h	1172;"	d
FT_DEFINE_MODULE	freetype/internal/ftobjs.h	1478;"	d
FT_DEFINE_MODULE	freetype/internal/ftobjs.h	1539;"	d
FT_DEFINE_OUTLINE_FUNCS	freetype/internal/ftobjs.h	1028;"	d
FT_DEFINE_OUTLINE_FUNCS	freetype/internal/ftobjs.h	1048;"	d
FT_DEFINE_PSHINTER_INTERFACE	freetype/internal/pshints.h	685;"	d
FT_DEFINE_PSHINTER_INTERFACE	freetype/internal/pshints.h	699;"	d
FT_DEFINE_RASTER_FUNCS	freetype/internal/ftobjs.h	1087;"	d
FT_DEFINE_RASTER_FUNCS	freetype/internal/ftobjs.h	1107;"	d
FT_DEFINE_RENDERER	freetype/internal/ftobjs.h	1240;"	d
FT_DEFINE_RENDERER	freetype/internal/ftobjs.h	1283;"	d
FT_DEFINE_ROOT_MODULE	freetype/internal/ftobjs.h	1453;"	d
FT_DEFINE_ROOT_MODULE	freetype/internal/ftobjs.h	1517;"	d
FT_DEFINE_SERVICE	freetype/internal/ftserv.h	887;"	d
FT_DEFINE_SERVICE	freetype/internal/services/svbdf.h	/^  FT_DEFINE_SERVICE( BDF )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svcid.h	/^  FT_DEFINE_SERVICE( CID )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svgldict.h	/^  FT_DEFINE_SERVICE( GlyphDict )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svgxval.h	/^  FT_DEFINE_SERVICE( CKERNvalidate )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svgxval.h	/^  FT_DEFINE_SERVICE( GXvalidate )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svkern.h	/^  FT_DEFINE_SERVICE( Kerning )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svmetric.h	/^  FT_DEFINE_SERVICE( MetricsVariations )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svmm.h	/^  FT_DEFINE_SERVICE( MultiMasters )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svotval.h	/^  FT_DEFINE_SERVICE( OTvalidate )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svpfr.h	/^  FT_DEFINE_SERVICE( PfrMetrics )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svpostnm.h	/^  FT_DEFINE_SERVICE( PsFontName )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svprop.h	/^  FT_DEFINE_SERVICE( Properties )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svpscmap.h	/^  FT_DEFINE_SERVICE( PsCMaps )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svpsinfo.h	/^  FT_DEFINE_SERVICE( PsInfo )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svsfnt.h	/^  FT_DEFINE_SERVICE( SFNT_Table )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svttcmap.h	/^  FT_DEFINE_SERVICE( TTCMaps )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svtteng.h	/^  FT_DEFINE_SERVICE( TrueTypeEngine )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svttglyf.h	/^  FT_DEFINE_SERVICE( TTGlyf )$/;"	f
FT_DEFINE_SERVICE	freetype/internal/services/svwinfnt.h	/^  FT_DEFINE_SERVICE( WinFnt )$/;"	f
FT_DEFINE_SERVICEDESCREC1	freetype/internal/ftserv.h	189;"	d
FT_DEFINE_SERVICEDESCREC1	freetype/internal/ftserv.h	335;"	d
FT_DEFINE_SERVICEDESCREC2	freetype/internal/ftserv.h	197;"	d
FT_DEFINE_SERVICEDESCREC2	freetype/internal/ftserv.h	370;"	d
FT_DEFINE_SERVICEDESCREC3	freetype/internal/ftserv.h	207;"	d
FT_DEFINE_SERVICEDESCREC3	freetype/internal/ftserv.h	408;"	d
FT_DEFINE_SERVICEDESCREC4	freetype/internal/ftserv.h	219;"	d
FT_DEFINE_SERVICEDESCREC4	freetype/internal/ftserv.h	449;"	d
FT_DEFINE_SERVICEDESCREC5	freetype/internal/ftserv.h	233;"	d
FT_DEFINE_SERVICEDESCREC5	freetype/internal/ftserv.h	493;"	d
FT_DEFINE_SERVICEDESCREC6	freetype/internal/ftserv.h	249;"	d
FT_DEFINE_SERVICEDESCREC6	freetype/internal/ftserv.h	540;"	d
FT_DEFINE_SERVICEDESCREC7	freetype/internal/ftserv.h	267;"	d
FT_DEFINE_SERVICEDESCREC7	freetype/internal/ftserv.h	590;"	d
FT_DEFINE_SERVICEDESCREC8	freetype/internal/ftserv.h	287;"	d
FT_DEFINE_SERVICEDESCREC8	freetype/internal/ftserv.h	643;"	d
FT_DEFINE_SERVICEDESCREC9	freetype/internal/ftserv.h	309;"	d
FT_DEFINE_SERVICEDESCREC9	freetype/internal/ftserv.h	699;"	d
FT_DEFINE_SERVICE_BDFRec	freetype/internal/services/svbdf.h	51;"	d
FT_DEFINE_SERVICE_BDFRec	freetype/internal/services/svbdf.h	61;"	d
FT_DEFINE_SERVICE_CIDREC	freetype/internal/services/svcid.h	53;"	d
FT_DEFINE_SERVICE_CIDREC	freetype/internal/services/svcid.h	64;"	d
FT_DEFINE_SERVICE_GLYPHDICTREC	freetype/internal/services/svgldict.h	57;"	d
FT_DEFINE_SERVICE_GLYPHDICTREC	freetype/internal/services/svgldict.h	67;"	d
FT_DEFINE_SERVICE_METRICSVARIATIONSREC	freetype/internal/services/svmetric.h	121;"	d
FT_DEFINE_SERVICE_METRICSVARIATIONSREC	freetype/internal/services/svmetric.h	98;"	d
FT_DEFINE_SERVICE_MULTIMASTERSREC	freetype/internal/services/svmm.h	100;"	d
FT_DEFINE_SERVICE_MULTIMASTERSREC	freetype/internal/services/svmm.h	125;"	d
FT_DEFINE_SERVICE_PROPERTIESREC	freetype/internal/services/svprop.h	50;"	d
FT_DEFINE_SERVICE_PROPERTIESREC	freetype/internal/services/svprop.h	61;"	d
FT_DEFINE_SERVICE_PSCMAPSREC	freetype/internal/services/svpscmap.h	123;"	d
FT_DEFINE_SERVICE_PSCMAPSREC	freetype/internal/services/svpscmap.h	141;"	d
FT_DEFINE_SERVICE_PSFONTNAMEREC	freetype/internal/services/svpostnm.h	52;"	d
FT_DEFINE_SERVICE_PSFONTNAMEREC	freetype/internal/services/svpostnm.h	60;"	d
FT_DEFINE_SERVICE_PSINFOREC	freetype/internal/services/svpsinfo.h	67;"	d
FT_DEFINE_SERVICE_PSINFOREC	freetype/internal/services/svpsinfo.h	81;"	d
FT_DEFINE_SERVICE_SFNT_TABLEREC	freetype/internal/services/svsfnt.h	75;"	d
FT_DEFINE_SERVICE_SFNT_TABLEREC	freetype/internal/services/svsfnt.h	83;"	d
FT_DEFINE_SERVICE_TTCMAPSREC	freetype/internal/services/svttcmap.h	78;"	d
FT_DEFINE_SERVICE_TTCMAPSREC	freetype/internal/services/svttcmap.h	86;"	d
FT_DEFINE_SERVICE_TTGLYFREC	freetype/internal/services/svttglyf.h	44;"	d
FT_DEFINE_SERVICE_TTGLYFREC	freetype/internal/services/svttglyf.h	52;"	d
FT_DEFINE_SFNT_INTERFACE	freetype/internal/sfnt.h	632;"	d
FT_DEFINE_SFNT_INTERFACE	freetype/internal/sfnt.h	705;"	d
FT_DEPRECATED_ATTRIBUTE	freetype/ftmac.h	42;"	d
FT_DRIVER	freetype/internal/ftobjs.h	751;"	d
FT_DRIVER_CLASS	freetype/internal/ftobjs.h	754;"	d
FT_DRIVER_HAS_HINTER	freetype/internal/ftobjs.h	526;"	d
FT_DRIVER_HINTS_LIGHTLY	freetype/internal/ftobjs.h	529;"	d
FT_DRIVER_IS_SCALABLE	freetype/internal/ftobjs.h	520;"	d
FT_DRIVER_USES_OUTLINES	freetype/internal/ftobjs.h	523;"	d
FT_DUMMY_STMNT	freetype/config/ftconfig.h	354;"	d
FT_DUP	freetype/internal/ftmemory.h	370;"	d
FT_Data	freetype/fttypes.h	/^  } FT_Data;$/;"	t	typeref:struct:FT_Data_
FT_Data_	freetype/fttypes.h	/^  typedef struct  FT_Data_$/;"	s
FT_DebugHook_Func	freetype/ftmodapi.h	/^  (*FT_DebugHook_Func)( void*  arg );$/;"	t
FT_Done_Blend_Func	freetype/internal/services/svmm.h	/^  (*FT_Done_Blend_Func)( FT_Face );$/;"	t
FT_Driver	freetype/freetype.h	/^  typedef struct FT_DriverRec_*  FT_Driver;$/;"	t	typeref:struct:FT_DriverRec_
FT_DriverRec	freetype/internal/ftobjs.h	/^  } FT_DriverRec;$/;"	t	typeref:struct:FT_DriverRec_
FT_DriverRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_DriverRec_$/;"	s
FT_Driver_Class	freetype/internal/ftdriver.h	/^  } FT_Driver_ClassRec, *FT_Driver_Class;$/;"	t	typeref:struct:FT_Driver_ClassRec_
FT_Driver_ClassRec	freetype/internal/ftdriver.h	/^  } FT_Driver_ClassRec, *FT_Driver_Class;$/;"	t	typeref:struct:FT_Driver_ClassRec_
FT_Driver_ClassRec_	freetype/internal/ftdriver.h	/^  typedef struct  FT_Driver_ClassRec_$/;"	s
FT_ENCODING_GB2312	freetype/freetype.h	/^    FT_ENCODING_GB2312     = FT_ENCODING_PRC,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_BIG5	freetype/freetype.h	/^    FT_ENCODING_MS_BIG5    = FT_ENCODING_BIG5,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_GB2312	freetype/freetype.h	/^    FT_ENCODING_MS_GB2312  = FT_ENCODING_PRC,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_JOHAB	freetype/freetype.h	/^    FT_ENCODING_MS_JOHAB   = FT_ENCODING_JOHAB,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_SJIS	freetype/freetype.h	/^    FT_ENCODING_MS_SJIS    = FT_ENCODING_SJIS,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_WANSUNG	freetype/freetype.h	/^    FT_ENCODING_MS_WANSUNG = FT_ENCODING_WANSUNG,$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_CUSTOM,   'A', 'D', 'B', 'C' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_EXPERT,   'A', 'D', 'B', 'E' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_LATIN_1,  'l', 'a', 't', '1' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_STANDARD, 'A', 'D', 'O', 'B' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_APPLE_ROMAN, 'a', 'r', 'm', 'n' )$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_BIG5,    'b', 'i', 'g', '5' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_JOHAB,   'j', 'o', 'h', 'a' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_MS_SYMBOL, 's', 'y', 'm', 'b' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_NONE, 0, 0, 0, 0 ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_OLD_LATIN_2, 'l', 'a', 't', '2' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_PRC,     'g', 'b', ' ', ' ' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_SJIS,    's', 'j', 'i', 's' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_UNICODE,   'u', 'n', 'i', 'c' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_WANSUNG, 'w', 'a', 'n', 's' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	freetype/freetype.h	609;"	d
FT_END_HEADER	freetype/config/ftheader.h	52;"	d
FT_END_HEADER	freetype/config/ftheader.h	54;"	d
FT_END_STMNT	freetype/config/ftconfig.h	353;"	d
FT_ERR	freetype/fttypes.h	586;"	d
FT_ERROR	freetype/internal/ftdebug.h	177;"	d
FT_ERROR	freetype/internal/ftdebug.h	181;"	d
FT_ERRORDEF	freetype/fterrors.h	161;"	d
FT_ERRORDEF	freetype/fterrors.h	211;"	d
FT_ERRORDEF	src/res_font.c	107;"	d	file:
FT_ERRORDEF_	freetype/fterrors.h	174;"	d
FT_ERRORDEF_	freetype/fterrors.h	212;"	d
FT_ERRORS_H	freetype/config/ftheader.h	188;"	d
FT_ERROR_BASE	freetype/fttypes.h	588;"	d
FT_ERROR_DEFINITIONS_H	freetype/config/ftheader.h	812;"	d
FT_ERROR_END_LIST	freetype/fterrors.h	163;"	d
FT_ERROR_END_LIST	freetype/fterrors.h	209;"	d
FT_ERROR_END_LIST	src/res_font.c	109;"	d	file:
FT_ERROR_MODULE	freetype/fttypes.h	589;"	d
FT_ERROR_START_LIST	freetype/fterrors.h	162;"	d
FT_ERROR_START_LIST	freetype/fterrors.h	208;"	d
FT_ERROR_START_LIST	src/res_font.c	108;"	d	file:
FT_ERR_BASE	freetype/fterrors.h	145;"	d
FT_ERR_BASE	freetype/fterrors.h	150;"	d
FT_ERR_BASE	freetype/fterrors.h	151;"	d
FT_ERR_BASE	freetype/fterrors.h	216;"	d
FT_ERR_CAT	freetype/fttypes.h	582;"	d
FT_ERR_EQ	freetype/fttypes.h	591;"	d
FT_ERR_NEQ	freetype/fttypes.h	593;"	d
FT_ERR_PREFIX	freetype/fterrors.h	136;"	d
FT_ERR_PREFIX	freetype/fterrors.h	220;"	d
FT_ERR_XCAT	freetype/fttypes.h	581;"	d
FT_EXPORT	freetype/config/ftconfig.h	414;"	d
FT_EXPORT	freetype/config/ftconfig.h	416;"	d
FT_EXPORT_DEF	freetype/config/ftconfig.h	425;"	d
FT_EXPORT_DEF	freetype/config/ftconfig.h	427;"	d
FT_EXPORT_VAR	freetype/config/ftconfig.h	436;"	d
FT_EXPORT_VAR	freetype/config/ftconfig.h	438;"	d
FT_Encoding	freetype/freetype.h	/^  } FT_Encoding;$/;"	t	typeref:enum:FT_Encoding_
FT_Encoding_	freetype/freetype.h	/^  typedef enum  FT_Encoding_$/;"	g
FT_Error	freetype/fttypes.h	/^  typedef int  FT_Error;$/;"	t
FT_F26Dot6	freetype/fttypes.h	/^  typedef signed long  FT_F26Dot6;$/;"	t
FT_F2Dot14	freetype/fttypes.h	/^  typedef signed short  FT_F2Dot14;$/;"	t
FT_FACE	freetype/internal/ftobjs.h	588;"	d
FT_FACE_DRIVER	freetype/internal/ftobjs.h	592;"	d
FT_FACE_FIND_GLOBAL_SERVICE	freetype/internal/ftserv.h	112;"	d
FT_FACE_FIND_SERVICE	freetype/internal/ftserv.h	61;"	d
FT_FACE_FLAG_CID_KEYED	freetype/freetype.h	1229;"	d
FT_FACE_FLAG_COLOR	freetype/freetype.h	1231;"	d
FT_FACE_FLAG_EXTERNAL_STREAM	freetype/freetype.h	1227;"	d
FT_FACE_FLAG_FAST_GLYPHS	freetype/freetype.h	1224;"	d
FT_FACE_FLAG_FIXED_SIZES	freetype/freetype.h	1218;"	d
FT_FACE_FLAG_FIXED_WIDTH	freetype/freetype.h	1219;"	d
FT_FACE_FLAG_GLYPH_NAMES	freetype/freetype.h	1226;"	d
FT_FACE_FLAG_HINTER	freetype/freetype.h	1228;"	d
FT_FACE_FLAG_HORIZONTAL	freetype/freetype.h	1221;"	d
FT_FACE_FLAG_KERNING	freetype/freetype.h	1223;"	d
FT_FACE_FLAG_MULTIPLE_MASTERS	freetype/freetype.h	1225;"	d
FT_FACE_FLAG_SCALABLE	freetype/freetype.h	1217;"	d
FT_FACE_FLAG_SFNT	freetype/freetype.h	1220;"	d
FT_FACE_FLAG_TRICKY	freetype/freetype.h	1230;"	d
FT_FACE_FLAG_VERTICAL	freetype/freetype.h	1222;"	d
FT_FACE_LIBRARY	freetype/internal/ftobjs.h	593;"	d
FT_FACE_LOOKUP_SERVICE	freetype/internal/ftserv.h	840;"	d
FT_FACE_LOOKUP_SERVICE	freetype/internal/ftserv.h	862;"	d
FT_FACE_MEMORY	freetype/internal/ftobjs.h	594;"	d
FT_FACE_SIZE	freetype/internal/ftobjs.h	601;"	d
FT_FACE_SLOT	freetype/internal/ftobjs.h	600;"	d
FT_FACE_STREAM	freetype/internal/ftobjs.h	595;"	d
FT_FIELD_OFFSET	freetype/internal/ftstream.h	105;"	d
FT_FIELD_SIZE	freetype/internal/ftstream.h	99;"	d
FT_FIELD_SIZE_DELTA	freetype/internal/ftstream.h	102;"	d
FT_FILE	freetype/config/ftstdlib.h	104;"	d
FT_FONT_FORMATS_H	freetype/config/ftheader.h	732;"	d
FT_FONT_FORMAT_BDF	freetype/internal/services/svfntfmt.h	38;"	d
FT_FONT_FORMAT_CFF	freetype/internal/services/svfntfmt.h	42;"	d
FT_FONT_FORMAT_CID	freetype/internal/services/svfntfmt.h	41;"	d
FT_FONT_FORMAT_PCF	freetype/internal/services/svfntfmt.h	39;"	d
FT_FONT_FORMAT_PFR	freetype/internal/services/svfntfmt.h	43;"	d
FT_FONT_FORMAT_TRUETYPE	freetype/internal/services/svfntfmt.h	36;"	d
FT_FONT_FORMAT_TYPE_1	freetype/internal/services/svfntfmt.h	37;"	d
FT_FONT_FORMAT_TYPE_42	freetype/internal/services/svfntfmt.h	40;"	d
FT_FONT_FORMAT_WINFNT	freetype/internal/services/svfntfmt.h	44;"	d
FT_FRAME_BYTE	freetype/internal/ftstream.h	126;"	d
FT_FRAME_BYTES	freetype/internal/ftstream.h	140;"	d
FT_FRAME_CHAR	freetype/internal/ftstream.h	127;"	d
FT_FRAME_END	freetype/internal/ftstream.h	118;"	d
FT_FRAME_ENTER	freetype/internal/ftstream.h	512;"	d
FT_FRAME_EXIT	freetype/internal/ftstream.h	517;"	d
FT_FRAME_EXTRACT	freetype/internal/ftstream.h	520;"	d
FT_FRAME_FIELD	freetype/internal/ftstream.h	108;"	d
FT_FRAME_LONG	freetype/internal/ftstream.h	120;"	d
FT_FRAME_LONG_LE	freetype/internal/ftstream.h	129;"	d
FT_FRAME_OFF3	freetype/internal/ftstream.h	124;"	d
FT_FRAME_OFF3_LE	freetype/internal/ftstream.h	133;"	d
FT_FRAME_OP_BYTE	freetype/internal/ftstream.h	50;"	d
FT_FRAME_OP_BYTES	freetype/internal/ftstream.h	54;"	d
FT_FRAME_OP_COMMAND	freetype/internal/ftstream.h	43;"	d
FT_FRAME_OP_END	freetype/internal/ftstream.h	48;"	d
FT_FRAME_OP_LITTLE	freetype/internal/ftstream.h	42;"	d
FT_FRAME_OP_LONG	freetype/internal/ftstream.h	52;"	d
FT_FRAME_OP_OFF3	freetype/internal/ftstream.h	53;"	d
FT_FRAME_OP_SHIFT	freetype/internal/ftstream.h	40;"	d
FT_FRAME_OP_SHORT	freetype/internal/ftstream.h	51;"	d
FT_FRAME_OP_SIGNED	freetype/internal/ftstream.h	41;"	d
FT_FRAME_OP_START	freetype/internal/ftstream.h	49;"	d
FT_FRAME_RELEASE	freetype/internal/ftstream.h	526;"	d
FT_FRAME_SHORT	freetype/internal/ftstream.h	122;"	d
FT_FRAME_SHORT_LE	freetype/internal/ftstream.h	131;"	d
FT_FRAME_SKIP_BYTE	freetype/internal/ftstream.h	138;"	d
FT_FRAME_SKIP_BYTES	freetype/internal/ftstream.h	147;"	d
FT_FRAME_SKIP_LONG	freetype/internal/ftstream.h	136;"	d
FT_FRAME_SKIP_SHORT	freetype/internal/ftstream.h	137;"	d
FT_FRAME_START	freetype/internal/ftstream.h	117;"	d
FT_FRAME_ULONG	freetype/internal/ftstream.h	121;"	d
FT_FRAME_ULONG_LE	freetype/internal/ftstream.h	130;"	d
FT_FRAME_UOFF3	freetype/internal/ftstream.h	125;"	d
FT_FRAME_UOFF3_LE	freetype/internal/ftstream.h	134;"	d
FT_FRAME_USHORT	freetype/internal/ftstream.h	123;"	d
FT_FRAME_USHORT_LE	freetype/internal/ftstream.h	132;"	d
FT_FREE	freetype/internal/ftmemory.h	329;"	d
FT_FREETYPE_H	freetype/config/ftheader.h	173;"	d
FT_FSTYPE_BITMAP_EMBEDDING_ONLY	freetype/freetype.h	3938;"	d
FT_FSTYPE_EDITABLE_EMBEDDING	freetype/freetype.h	3936;"	d
FT_FSTYPE_INSTALLABLE_EMBEDDING	freetype/freetype.h	3933;"	d
FT_FSTYPE_NO_SUBSETTING	freetype/freetype.h	3937;"	d
FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING	freetype/freetype.h	3935;"	d
FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING	freetype/freetype.h	3934;"	d
FT_FWord	freetype/fttypes.h	/^  typedef signed short  FT_FWord;   \/* distance in FUnits *\/$/;"	t
FT_Face	freetype/freetype.h	/^  typedef struct FT_FaceRec_*  FT_Face;$/;"	t	typeref:struct:FT_FaceRec_
FT_FaceRec	freetype/freetype.h	/^  } FT_FaceRec;$/;"	t	typeref:struct:FT_FaceRec_
FT_FaceRec_	freetype/freetype.h	/^  typedef struct  FT_FaceRec_$/;"	s
FT_Face_AttachFunc	freetype/internal/ftdriver.h	/^  (*FT_Face_AttachFunc)( FT_Face    face,$/;"	t
FT_Face_DoneFunc	freetype/internal/ftdriver.h	/^  (*FT_Face_DoneFunc)( FT_Face  face );$/;"	t
FT_Face_GetAdvancesFunc	freetype/internal/ftdriver.h	/^  (*FT_Face_GetAdvancesFunc)( FT_Face    face,$/;"	t
FT_Face_GetGlyphNameFunc	freetype/internal/ftobjs.h	/^  (*FT_Face_GetGlyphNameFunc)( FT_Face     face,$/;"	t
FT_Face_GetGlyphNameIndexFunc	freetype/internal/ftobjs.h	/^  (*FT_Face_GetGlyphNameIndexFunc)( FT_Face     face,$/;"	t
FT_Face_GetKerningFunc	freetype/internal/ftdriver.h	/^  (*FT_Face_GetKerningFunc)( FT_Face     face,$/;"	t
FT_Face_GetPostscriptNameFunc	freetype/internal/ftobjs.h	/^  (*FT_Face_GetPostscriptNameFunc)( FT_Face  face );$/;"	t
FT_Face_InitFunc	freetype/internal/ftdriver.h	/^  (*FT_Face_InitFunc)( FT_Stream      stream,$/;"	t
FT_Face_Internal	freetype/freetype.h	/^  typedef struct FT_Face_InternalRec_*  FT_Face_Internal;$/;"	t	typeref:struct:FT_Face_InternalRec_
FT_Face_InternalRec	freetype/internal/ftobjs.h	/^  } FT_Face_InternalRec;$/;"	t	typeref:struct:FT_Face_InternalRec_
FT_Face_InternalRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_Face_InternalRec_$/;"	s
FT_Fast	freetype/config/ftconfig.h	/^  typedef int            FT_Fast;$/;"	t
FT_Fast	freetype/config/ftconfig.h	/^  typedef long           FT_Fast;$/;"	t
FT_Fixed	freetype/fttypes.h	/^  typedef signed long  FT_Fixed;$/;"	t
FT_Frame_Field	freetype/internal/ftstream.h	/^  } FT_Frame_Field;$/;"	t	typeref:struct:FT_Frame_Field_
FT_Frame_Field_	freetype/internal/ftstream.h	/^  typedef struct  FT_Frame_Field_$/;"	s
FT_Frame_Op	freetype/internal/ftstream.h	/^  } FT_Frame_Op;$/;"	t	typeref:enum:FT_Frame_Op_
FT_Frame_Op_	freetype/internal/ftstream.h	/^  typedef enum  FT_Frame_Op_$/;"	g
FT_Free_Func	freetype/ftsystem.h	/^  (*FT_Free_Func)( FT_Memory  memory,$/;"	t
FT_GASP_DO_GRAY	freetype/ftgasp.h	94;"	d
FT_GASP_DO_GRIDFIT	freetype/ftgasp.h	93;"	d
FT_GASP_H	freetype/config/ftheader.h	795;"	d
FT_GASP_NO_TABLE	freetype/ftgasp.h	92;"	d
FT_GASP_SYMMETRIC_GRIDFIT	freetype/ftgasp.h	95;"	d
FT_GASP_SYMMETRIC_SMOOTHING	freetype/ftgasp.h	96;"	d
FT_GET_BYTE	freetype/internal/ftstream.h	287;"	d
FT_GET_CHAR	freetype/internal/ftstream.h	286;"	d
FT_GET_LONG	freetype/internal/ftstream.h	292;"	d
FT_GET_LONG_LE	freetype/internal/ftstream.h	298;"	d
FT_GET_MACRO	freetype/internal/ftstream.h	284;"	d
FT_GET_OFF3	freetype/internal/ftstream.h	290;"	d
FT_GET_SHORT	freetype/internal/ftstream.h	288;"	d
FT_GET_SHORT_LE	freetype/internal/ftstream.h	296;"	d
FT_GET_TAG4	freetype/internal/ftstream.h	294;"	d
FT_GET_ULONG	freetype/internal/ftstream.h	293;"	d
FT_GET_ULONG_LE	freetype/internal/ftstream.h	299;"	d
FT_GET_UOFF3	freetype/internal/ftstream.h	291;"	d
FT_GET_USHORT	freetype/internal/ftstream.h	289;"	d
FT_GET_USHORT_LE	freetype/internal/ftstream.h	297;"	d
FT_GLYPH	freetype/internal/ftobjs.h	718;"	d
FT_GLYPHLOADER_CHECK_C	freetype/internal/ftgloadr.h	112;"	d
FT_GLYPHLOADER_CHECK_P	freetype/internal/ftgloadr.h	106;"	d
FT_GLYPHLOADER_CHECK_POINTS	freetype/internal/ftgloadr.h	118;"	d
FT_GLYPH_BBOX_GRIDFIT	freetype/ftglyph.h	/^    FT_GLYPH_BBOX_GRIDFIT   = 1,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_PIXELS	freetype/ftglyph.h	/^    FT_GLYPH_BBOX_PIXELS    = 3$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_SUBPIXELS	freetype/ftglyph.h	/^    FT_GLYPH_BBOX_SUBPIXELS = 0,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_TRUNCATE	freetype/ftglyph.h	/^    FT_GLYPH_BBOX_TRUNCATE  = 2,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_UNSCALED	freetype/ftglyph.h	/^    FT_GLYPH_BBOX_UNSCALED  = 0,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_H	freetype/config/ftheader.h	515;"	d
FT_GLYPH_OWN_BITMAP	freetype/internal/ftobjs.h	422;"	d
FT_GX_VALIDATE_H	freetype/config/ftheader.h	683;"	d
FT_GZIP_H	freetype/config/ftheader.h	463;"	d
FT_Generic	freetype/fttypes.h	/^  } FT_Generic;$/;"	t	typeref:struct:FT_Generic_
FT_Generic_	freetype/fttypes.h	/^  typedef struct  FT_Generic_$/;"	s
FT_Generic_Finalizer	freetype/fttypes.h	/^  typedef void  (*FT_Generic_Finalizer)(void*  object);$/;"	t
FT_Get_MM_Blend_Func	freetype/internal/services/svmm.h	/^  (*FT_Get_MM_Blend_Func)( FT_Face   face,$/;"	t
FT_Get_MM_Func	freetype/internal/services/svmm.h	/^  (*FT_Get_MM_Func)( FT_Face           face,$/;"	t
FT_Get_MM_Var_Func	freetype/internal/services/svmm.h	/^  (*FT_Get_MM_Var_Func)( FT_Face      face,$/;"	t
FT_Get_Var_Blend_Func	freetype/internal/services/svmm.h	/^  (*FT_Get_Var_Blend_Func)( FT_Face      face,$/;"	t
FT_Get_Var_Design_Func	freetype/internal/services/svmm.h	/^  (*FT_Get_Var_Design_Func)( FT_Face    face,$/;"	t
FT_Glyph	freetype/ftglyph.h	/^  typedef struct FT_GlyphRec_*  FT_Glyph;$/;"	t	typeref:struct:FT_GlyphRec_
FT_GlyphDict_GetNameFunc	freetype/internal/services/svgldict.h	/^  (*FT_GlyphDict_GetNameFunc)( FT_Face     face,$/;"	t
FT_GlyphDict_NameIndexFunc	freetype/internal/services/svgldict.h	/^  (*FT_GlyphDict_NameIndexFunc)( FT_Face     face,$/;"	t
FT_GlyphLoad	freetype/internal/ftgloadr.h	/^  } FT_GlyphLoadRec, *FT_GlyphLoad;$/;"	t	typeref:struct:FT_GlyphLoadRec_
FT_GlyphLoadRec	freetype/internal/ftgloadr.h	/^  } FT_GlyphLoadRec, *FT_GlyphLoad;$/;"	t	typeref:struct:FT_GlyphLoadRec_
FT_GlyphLoadRec_	freetype/internal/ftgloadr.h	/^  typedef struct  FT_GlyphLoadRec_$/;"	s
FT_GlyphLoader	freetype/internal/ftgloadr.h	/^  } FT_GlyphLoaderRec, *FT_GlyphLoader;$/;"	t	typeref:struct:FT_GlyphLoaderRec_
FT_GlyphLoaderRec	freetype/internal/ftgloadr.h	/^  } FT_GlyphLoaderRec, *FT_GlyphLoader;$/;"	t	typeref:struct:FT_GlyphLoaderRec_
FT_GlyphLoaderRec_	freetype/internal/ftgloadr.h	/^  typedef struct  FT_GlyphLoaderRec_$/;"	s
FT_GlyphRec	freetype/ftglyph.h	/^  } FT_GlyphRec;$/;"	t	typeref:struct:FT_GlyphRec_
FT_GlyphRec_	freetype/ftglyph.h	/^  typedef struct  FT_GlyphRec_$/;"	s
FT_GlyphSlot	freetype/freetype.h	/^  typedef struct FT_GlyphSlotRec_*  FT_GlyphSlot;$/;"	t	typeref:struct:FT_GlyphSlotRec_
FT_GlyphSlotRec	freetype/freetype.h	/^  } FT_GlyphSlotRec;$/;"	t	typeref:struct:FT_GlyphSlotRec_
FT_GlyphSlotRec_	freetype/freetype.h	/^  typedef struct  FT_GlyphSlotRec_$/;"	s
FT_GlyphSlot_InternalRec	freetype/internal/ftobjs.h	/^  } FT_GlyphSlot_InternalRec;$/;"	t	typeref:struct:FT_Slot_InternalRec_
FT_Glyph_BBox_Func	freetype/ftrender.h	69;"	d
FT_Glyph_BBox_Mode	freetype/ftglyph.h	/^  } FT_Glyph_BBox_Mode;$/;"	t	typeref:enum:FT_Glyph_BBox_Mode_
FT_Glyph_BBox_Mode_	freetype/ftglyph.h	/^  typedef enum  FT_Glyph_BBox_Mode_$/;"	g
FT_Glyph_Class	freetype/ftglyph.h	/^  typedef struct FT_Glyph_Class_  FT_Glyph_Class;$/;"	t	typeref:struct:FT_Glyph_Class_
FT_Glyph_Class_	freetype/ftrender.h	/^  struct  FT_Glyph_Class_$/;"	s
FT_Glyph_CopyFunc	freetype/ftrender.h	/^  (*FT_Glyph_CopyFunc)( FT_Glyph   source,$/;"	t
FT_Glyph_Copy_Func	freetype/ftrender.h	70;"	d
FT_Glyph_DoneFunc	freetype/ftrender.h	/^  (*FT_Glyph_DoneFunc)( FT_Glyph  glyph );$/;"	t
FT_Glyph_Done_Func	freetype/ftrender.h	67;"	d
FT_Glyph_Format	freetype/ftimage.h	/^  } FT_Glyph_Format;$/;"	t	typeref:enum:FT_Glyph_Format_
FT_Glyph_Format_	freetype/ftimage.h	/^  typedef enum  FT_Glyph_Format_$/;"	g
FT_Glyph_GetBBoxFunc	freetype/ftrender.h	/^  (*FT_Glyph_GetBBoxFunc)( FT_Glyph  glyph,$/;"	t
FT_Glyph_InitFunc	freetype/ftrender.h	/^  (*FT_Glyph_InitFunc)( FT_Glyph      glyph,$/;"	t
FT_Glyph_Init_Func	freetype/ftrender.h	66;"	d
FT_Glyph_Metrics	freetype/freetype.h	/^  } FT_Glyph_Metrics;$/;"	t	typeref:struct:FT_Glyph_Metrics_
FT_Glyph_Metrics_	freetype/freetype.h	/^  typedef struct  FT_Glyph_Metrics_$/;"	s
FT_Glyph_PrepareFunc	freetype/ftrender.h	/^  (*FT_Glyph_PrepareFunc)( FT_Glyph      glyph,$/;"	t
FT_Glyph_Prepare_Func	freetype/ftrender.h	71;"	d
FT_Glyph_TransformFunc	freetype/ftrender.h	/^  (*FT_Glyph_TransformFunc)( FT_Glyph          glyph,$/;"	t
FT_Glyph_Transform_Func	freetype/ftrender.h	68;"	d
FT_HAS_COLOR	freetype/freetype.h	1440;"	d
FT_HAS_FAST_GLYPHS	freetype/freetype.h	1352;"	d
FT_HAS_FIXED_SIZES	freetype/freetype.h	1339;"	d
FT_HAS_GLYPH_NAMES	freetype/freetype.h	1365;"	d
FT_HAS_HORIZONTAL	freetype/freetype.h	1247;"	d
FT_HAS_KERNING	freetype/freetype.h	1275;"	d
FT_HAS_MULTIPLE_MASTERS	freetype/freetype.h	1380;"	d
FT_HAS_VERTICAL	freetype/freetype.h	1261;"	d
FT_HAdvance_Adjust_Func	freetype/internal/services/svmetric.h	/^  (*FT_HAdvance_Adjust_Func)( FT_Face  face,$/;"	t
FT_HYPOT	freetype/internal/ftobjs.h	80;"	d
FT_Hash	freetype/internal/fthash.h	/^  typedef struct FT_HashRec_  *FT_Hash;$/;"	t	typeref:struct:FT_HashRec_
FT_HashRec	freetype/internal/fthash.h	/^  } FT_HashRec;$/;"	t	typeref:struct:FT_HashRec_
FT_HashRec_	freetype/internal/fthash.h	/^  typedef struct  FT_HashRec_$/;"	s
FT_Hash_CompareFunc	freetype/internal/fthash.h	/^  (*FT_Hash_CompareFunc)( FT_Hashkey*  a,$/;"	t
FT_Hash_LookupFunc	freetype/internal/fthash.h	/^  (*FT_Hash_LookupFunc)( FT_Hashkey*  key );$/;"	t
FT_Hashkey	freetype/internal/fthash.h	/^  } FT_Hashkey;$/;"	t	typeref:union:FT_Hashkey_
FT_Hashkey_	freetype/internal/fthash.h	/^  typedef union  FT_Hashkey_$/;"	u
FT_Hashnode	freetype/internal/fthash.h	/^  typedef struct FT_HashnodeRec_  *FT_Hashnode;$/;"	t	typeref:struct:FT_HashnodeRec_
FT_HashnodeRec	freetype/internal/fthash.h	/^  } FT_HashnodeRec;$/;"	t	typeref:struct:FT_HashnodeRec_
FT_HashnodeRec_	freetype/internal/fthash.h	/^  typedef struct  FT_HashnodeRec_$/;"	s
FT_IMAGE_H	freetype/config/ftheader.h	233;"	d
FT_IMAGE_TAG	freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_BITMAP,    'b', 'i', 't', 's' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_COMPOSITE, 'c', 'o', 'm', 'p' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_NONE, 0, 0, 0, 0 ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_OUTLINE,   'o', 'u', 't', 'l' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_PLOTTER,   'p', 'l', 'o', 't' )$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	freetype/ftimage.h	669;"	d
FT_INCREMENTAL_H	freetype/config/ftheader.h	783;"	d
FT_INCREMENTAL_H	freetype/config/ftheader.h	828;"	d
FT_INT16	freetype/internal/ftstream.h	158;"	d
FT_INT32	freetype/internal/ftstream.h	160;"	d
FT_INT64	freetype/config/ftconfig.h	274;"	d
FT_INT64	freetype/config/ftconfig.h	289;"	d
FT_INT64	freetype/config/ftconfig.h	296;"	d
FT_INT64	freetype/config/ftconfig.h	306;"	d
FT_INT64	freetype/config/ftconfig.h	316;"	d
FT_INT64	freetype/config/ftconfig.h	323;"	d
FT_INTERNAL	freetype/internal/sfnt.h	702;"	d
FT_INTERNAL_AUTOHINT_H	freetype/internal/internal.h	48;"	d
FT_INTERNAL_CALC_H	freetype/internal/internal.h	32;"	d
FT_INTERNAL_DEBUG_H	freetype/internal/internal.h	31;"	d
FT_INTERNAL_DRIVER_H	freetype/internal/internal.h	34;"	d
FT_INTERNAL_GLYPH_LOADER_H	freetype/internal/internal.h	36;"	d
FT_INTERNAL_HASH_H	freetype/internal/internal.h	33;"	d
FT_INTERNAL_INTERNAL_H	freetype/config/ftheader.h	838;"	d
FT_INTERNAL_MEMORY_H	freetype/internal/internal.h	30;"	d
FT_INTERNAL_OBJECTS_H	freetype/internal/internal.h	27;"	d
FT_INTERNAL_PIC_H	freetype/internal/internal.h	28;"	d
FT_INTERNAL_POSTSCRIPT_AUX_H	freetype/internal/internal.h	45;"	d
FT_INTERNAL_POSTSCRIPT_HINTS_H	freetype/internal/internal.h	46;"	d
FT_INTERNAL_RFORK_H	freetype/internal/internal.h	39;"	d
FT_INTERNAL_SERVICE_H	freetype/internal/internal.h	38;"	d
FT_INTERNAL_SFNT_H	freetype/internal/internal.h	37;"	d
FT_INTERNAL_STREAM_H	freetype/internal/internal.h	29;"	d
FT_INTERNAL_TRACE_H	freetype/internal/internal.h	35;"	d
FT_INTERNAL_TRUETYPE_TYPES_H	freetype/internal/internal.h	42;"	d
FT_INTERNAL_TYPE1_TYPES_H	freetype/internal/internal.h	43;"	d
FT_INTERNAL_VALIDATE_H	freetype/internal/internal.h	40;"	d
FT_INT_MAX	freetype/config/ftstdlib.h	63;"	d
FT_INT_MIN	freetype/config/ftstdlib.h	64;"	d
FT_INVALID	freetype/internal/ftvalid.h	129;"	d
FT_INVALID_	freetype/internal/ftvalid.h	130;"	d
FT_INVALID_DATA	freetype/internal/ftvalid.h	150;"	d
FT_INVALID_FORMAT	freetype/internal/ftvalid.h	142;"	d
FT_INVALID_GLYPH_ID	freetype/internal/ftvalid.h	146;"	d
FT_INVALID_OFFSET	freetype/internal/ftvalid.h	138;"	d
FT_INVALID_TOO_SHORT	freetype/internal/ftvalid.h	134;"	d
FT_IS_CID_KEYED	freetype/freetype.h	1412;"	d
FT_IS_EMPTY	freetype/fttypes.h	577;"	d
FT_IS_FIXED_WIDTH	freetype/freetype.h	1324;"	d
FT_IS_NAMED_INSTANCE	freetype/freetype.h	1394;"	d
FT_IS_SCALABLE	freetype/freetype.h	1290;"	d
FT_IS_SFNT	freetype/freetype.h	1309;"	d
FT_IS_TRICKY	freetype/freetype.h	1426;"	d
FT_Incremental	freetype/ftincrem.h	/^  typedef struct FT_IncrementalRec_*  FT_Incremental;$/;"	t	typeref:struct:FT_IncrementalRec_
FT_Incremental_FreeGlyphDataFunc	freetype/ftincrem.h	/^  (*FT_Incremental_FreeGlyphDataFunc)( FT_Incremental  incremental,$/;"	t
FT_Incremental_FuncsRec	freetype/ftincrem.h	/^  } FT_Incremental_FuncsRec;$/;"	t	typeref:struct:FT_Incremental_FuncsRec_
FT_Incremental_FuncsRec_	freetype/ftincrem.h	/^  typedef struct  FT_Incremental_FuncsRec_$/;"	s
FT_Incremental_GetGlyphDataFunc	freetype/ftincrem.h	/^  (*FT_Incremental_GetGlyphDataFunc)( FT_Incremental  incremental,$/;"	t
FT_Incremental_GetGlyphMetricsFunc	freetype/ftincrem.h	/^  (*FT_Incremental_GetGlyphMetricsFunc)$/;"	t
FT_Incremental_Interface	freetype/ftincrem.h	/^  typedef FT_Incremental_InterfaceRec*   FT_Incremental_Interface;$/;"	t
FT_Incremental_InterfaceRec	freetype/ftincrem.h	/^  } FT_Incremental_InterfaceRec;$/;"	t	typeref:struct:FT_Incremental_InterfaceRec_
FT_Incremental_InterfaceRec_	freetype/ftincrem.h	/^  typedef struct  FT_Incremental_InterfaceRec_$/;"	s
FT_Incremental_Metrics	freetype/ftincrem.h	/^   typedef struct FT_Incremental_MetricsRec_*  FT_Incremental_Metrics;$/;"	t	typeref:struct:FT_Incremental_MetricsRec_
FT_Incremental_MetricsRec	freetype/ftincrem.h	/^  } FT_Incremental_MetricsRec;$/;"	t	typeref:struct:FT_Incremental_MetricsRec_
FT_Incremental_MetricsRec_	freetype/ftincrem.h	/^  typedef struct  FT_Incremental_MetricsRec_$/;"	s
FT_Int	freetype/fttypes.h	/^  typedef signed int  FT_Int;$/;"	t
FT_Int16	freetype/config/ftconfig.h	/^  typedef signed short  FT_Int16;$/;"	t
FT_Int32	freetype/config/ftconfig.h	/^  typedef signed int      FT_Int32;$/;"	t
FT_Int32	freetype/config/ftconfig.h	/^  typedef signed long     FT_Int32;$/;"	t
FT_Int64	freetype/config/ftconfig.h	/^  typedef FT_INT64   FT_Int64;$/;"	t
FT_KERNING_DEFAULT	freetype/freetype.h	/^    FT_KERNING_DEFAULT = 0,$/;"	e	enum:FT_Kerning_Mode_
FT_KERNING_UNFITTED	freetype/freetype.h	/^    FT_KERNING_UNFITTED,$/;"	e	enum:FT_Kerning_Mode_
FT_KERNING_UNSCALED	freetype/freetype.h	/^    FT_KERNING_UNSCALED$/;"	e	enum:FT_Kerning_Mode_
FT_Kerning_Mode	freetype/freetype.h	/^  } FT_Kerning_Mode;$/;"	t	typeref:enum:FT_Kerning_Mode_
FT_Kerning_Mode_	freetype/freetype.h	/^  typedef enum  FT_Kerning_Mode_$/;"	g
FT_Kerning_TrackGetFunc	freetype/internal/services/svkern.h	/^  (*FT_Kerning_TrackGetFunc)( FT_Face    face,$/;"	t
FT_LCD_FILTER_DEFAULT	freetype/ftlcdfil.h	/^    FT_LCD_FILTER_DEFAULT = 1,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_FIVE_TAPS	freetype/ftlcdfil.h	308;"	d
FT_LCD_FILTER_H	freetype/config/ftheader.h	760;"	d
FT_LCD_FILTER_LEGACY	freetype/ftlcdfil.h	/^    FT_LCD_FILTER_LEGACY  = 16,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_LEGACY1	freetype/ftlcdfil.h	/^    FT_LCD_FILTER_LEGACY1 = 3,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_LIGHT	freetype/ftlcdfil.h	/^    FT_LCD_FILTER_LIGHT   = 2,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_MAX	freetype/ftlcdfil.h	/^    FT_LCD_FILTER_MAX   \/* do not remove *\/$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_NONE	freetype/ftlcdfil.h	/^    FT_LCD_FILTER_NONE    = 0,$/;"	e	enum:FT_LcdFilter_
FT_LIST_H	freetype/config/ftheader.h	263;"	d
FT_LOAD_ADVANCE_ONLY	freetype/freetype.h	2939;"	d
FT_LOAD_BITMAP_METRICS_ONLY	freetype/freetype.h	2934;"	d
FT_LOAD_COLOR	freetype/freetype.h	2932;"	d
FT_LOAD_COMPUTE_METRICS	freetype/freetype.h	2933;"	d
FT_LOAD_CROP_BITMAP	freetype/freetype.h	2923;"	d
FT_LOAD_DEFAULT	freetype/freetype.h	2916;"	d
FT_LOAD_FORCE_AUTOHINT	freetype/freetype.h	2922;"	d
FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH	freetype/freetype.h	2925;"	d
FT_LOAD_IGNORE_TRANSFORM	freetype/freetype.h	2927;"	d
FT_LOAD_LINEAR_DESIGN	freetype/freetype.h	2929;"	d
FT_LOAD_MONOCHROME	freetype/freetype.h	2928;"	d
FT_LOAD_NO_AUTOHINT	freetype/freetype.h	2930;"	d
FT_LOAD_NO_BITMAP	freetype/freetype.h	2920;"	d
FT_LOAD_NO_HINTING	freetype/freetype.h	2918;"	d
FT_LOAD_NO_RECURSE	freetype/freetype.h	2926;"	d
FT_LOAD_NO_SCALE	freetype/freetype.h	2917;"	d
FT_LOAD_PEDANTIC	freetype/freetype.h	2924;"	d
FT_LOAD_RENDER	freetype/freetype.h	2919;"	d
FT_LOAD_SBITS_ONLY	freetype/freetype.h	2940;"	d
FT_LOAD_TARGET_	freetype/freetype.h	3026;"	d
FT_LOAD_TARGET_LCD	freetype/freetype.h	3031;"	d
FT_LOAD_TARGET_LCD_V	freetype/freetype.h	3032;"	d
FT_LOAD_TARGET_LIGHT	freetype/freetype.h	3029;"	d
FT_LOAD_TARGET_MODE	freetype/freetype.h	3045;"	d
FT_LOAD_TARGET_MONO	freetype/freetype.h	3030;"	d
FT_LOAD_TARGET_NORMAL	freetype/freetype.h	3028;"	d
FT_LOAD_VERTICAL_LAYOUT	freetype/freetype.h	2921;"	d
FT_LOCAL	freetype/config/ftconfig.h	370;"	d
FT_LOCAL	freetype/config/ftconfig.h	376;"	d
FT_LOCAL	freetype/config/ftconfig.h	379;"	d
FT_LOCAL_ARRAY	freetype/config/ftconfig.h	385;"	d
FT_LOCAL_ARRAY_DEF	freetype/config/ftconfig.h	386;"	d
FT_LOCAL_DEF	freetype/config/ftconfig.h	371;"	d
FT_LOCAL_DEF	freetype/config/ftconfig.h	377;"	d
FT_LOCAL_DEF	freetype/config/ftconfig.h	380;"	d
FT_LONG64	freetype/config/ftconfig.h	273;"	d
FT_LONG64	freetype/config/ftconfig.h	288;"	d
FT_LONG64	freetype/config/ftconfig.h	295;"	d
FT_LONG64	freetype/config/ftconfig.h	305;"	d
FT_LONG64	freetype/config/ftconfig.h	315;"	d
FT_LONG64	freetype/config/ftconfig.h	322;"	d
FT_LONG_MAX	freetype/config/ftstdlib.h	67;"	d
FT_LONG_MIN	freetype/config/ftstdlib.h	66;"	d
FT_LSB_Adjust_Func	freetype/internal/services/svmetric.h	/^  (*FT_LSB_Adjust_Func)( FT_Face  face,$/;"	t
FT_LZW_H	freetype/config/ftheader.h	476;"	d
FT_LcdFilter	freetype/ftlcdfil.h	/^  } FT_LcdFilter;$/;"	t	typeref:enum:FT_LcdFilter_
FT_LcdFilter_	freetype/ftlcdfil.h	/^  typedef enum  FT_LcdFilter_$/;"	g
FT_LcdFiveTapFilter	freetype/ftlcdfil.h	/^  typedef FT_Byte  FT_LcdFiveTapFilter[FT_LCD_FILTER_FIVE_TAPS];$/;"	t
FT_Library	freetype/freetype.h	/^  typedef struct FT_LibraryRec_  *FT_Library;$/;"	t	typeref:struct:FT_LibraryRec_
FT_LibraryRec	freetype/internal/ftobjs.h	/^  } FT_LibraryRec;$/;"	t	typeref:struct:FT_LibraryRec_
FT_LibraryRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_LibraryRec_$/;"	s
FT_List	freetype/fttypes.h	/^  typedef struct FT_ListRec_*  FT_List;$/;"	t	typeref:struct:FT_ListRec_
FT_ListNode	freetype/fttypes.h	/^  typedef struct FT_ListNodeRec_*  FT_ListNode;$/;"	t	typeref:struct:FT_ListNodeRec_
FT_ListNodeRec	freetype/fttypes.h	/^  } FT_ListNodeRec;$/;"	t	typeref:struct:FT_ListNodeRec_
FT_ListNodeRec_	freetype/fttypes.h	/^  typedef struct  FT_ListNodeRec_$/;"	s
FT_ListRec	freetype/fttypes.h	/^  } FT_ListRec;$/;"	t	typeref:struct:FT_ListRec_
FT_ListRec_	freetype/fttypes.h	/^  typedef struct  FT_ListRec_$/;"	s
FT_List_Destructor	freetype/ftlist.h	/^  (*FT_List_Destructor)( FT_Memory  memory,$/;"	t
FT_List_Iterator	freetype/ftlist.h	/^  (*FT_List_Iterator)( FT_ListNode  node,$/;"	t
FT_Long	freetype/fttypes.h	/^  typedef signed long  FT_Long;$/;"	t
FT_MACINTOSH	freetype/config/ftconfig.h	133;"	d
FT_MAC_H	freetype/config/ftheader.h	628;"	d
FT_MAKE_EMPTY_FIELD	freetype/internal/ftstream.h	115;"	d
FT_MAKE_FRAME_OP	freetype/internal/ftstream.h	45;"	d
FT_MAKE_TAG	freetype/fttypes.h	480;"	d
FT_MAX	freetype/internal/ftobjs.h	71;"	d
FT_MAX_MODULES	freetype/config/ftoption.h	421;"	d
FT_MEM_ALLOC	freetype/internal/ftmemory.h	151;"	d
FT_MEM_ALLOC_MULT	freetype/internal/ftmemory.h	189;"	d
FT_MEM_COPY	freetype/internal/ftmemory.h	228;"	d
FT_MEM_DUP	freetype/internal/ftmemory.h	367;"	d
FT_MEM_FREE	freetype/internal/ftmemory.h	156;"	d
FT_MEM_MOVE	freetype/internal/ftmemory.h	231;"	d
FT_MEM_NEW	freetype/internal/ftmemory.h	162;"	d
FT_MEM_NEW_ARRAY	freetype/internal/ftmemory.h	271;"	d
FT_MEM_QALLOC	freetype/internal/ftmemory.h	173;"	d
FT_MEM_QALLOC_MULT	freetype/internal/ftmemory.h	205;"	d
FT_MEM_QNEW	freetype/internal/ftmemory.h	178;"	d
FT_MEM_QNEW_ARRAY	freetype/internal/ftmemory.h	287;"	d
FT_MEM_QREALLOC	freetype/internal/ftmemory.h	181;"	d
FT_MEM_QREALLOC_MULT	freetype/internal/ftmemory.h	213;"	d
FT_MEM_QRENEW_ARRAY	freetype/internal/ftmemory.h	295;"	d
FT_MEM_REALLOC	freetype/internal/ftmemory.h	165;"	d
FT_MEM_REALLOC_MULT	freetype/internal/ftmemory.h	197;"	d
FT_MEM_RENEW_ARRAY	freetype/internal/ftmemory.h	279;"	d
FT_MEM_SET	freetype/internal/ftmemory.h	225;"	d
FT_MEM_SET_ERROR	freetype/internal/ftmemory.h	222;"	d
FT_MEM_STRDUP	freetype/internal/ftmemory.h	361;"	d
FT_MEM_ZERO	freetype/internal/ftmemory.h	235;"	d
FT_MIN	freetype/internal/ftobjs.h	70;"	d
FT_MM_Axis	freetype/ftmm.h	/^  } FT_MM_Axis;$/;"	t	typeref:struct:FT_MM_Axis_
FT_MM_Axis_	freetype/ftmm.h	/^  typedef struct  FT_MM_Axis_$/;"	s
FT_MM_Var	freetype/ftmm.h	/^  } FT_MM_Var;$/;"	t	typeref:struct:FT_MM_Var_
FT_MM_Var_	freetype/ftmm.h	/^  typedef struct  FT_MM_Var_$/;"	s
FT_MODERRDEF	freetype/ftmoderr.h	112;"	d
FT_MODERRDEF	freetype/ftmoderr.h	114;"	d
FT_MODERRDEF	freetype/ftmoderr.h	187;"	d
FT_MODERR_END_LIST	freetype/ftmoderr.h	118;"	d
FT_MODERR_END_LIST	freetype/ftmoderr.h	186;"	d
FT_MODERR_START_LIST	freetype/ftmoderr.h	117;"	d
FT_MODERR_START_LIST	freetype/ftmoderr.h	185;"	d
FT_MODULE	freetype/internal/ftobjs.h	502;"	d
FT_MODULE_CLASS	freetype/internal/ftobjs.h	503;"	d
FT_MODULE_DRIVER_HAS_HINTER	freetype/ftmodapi.h	119;"	d
FT_MODULE_DRIVER_HINTS_LIGHTLY	freetype/ftmodapi.h	121;"	d
FT_MODULE_DRIVER_NO_OUTLINES	freetype/ftmodapi.h	117;"	d
FT_MODULE_DRIVER_SCALABLE	freetype/ftmodapi.h	115;"	d
FT_MODULE_ERRORS_H	freetype/config/ftheader.h	201;"	d
FT_MODULE_FONT_DRIVER	freetype/ftmodapi.h	110;"	d
FT_MODULE_H	freetype/config/ftheader.h	302;"	d
FT_MODULE_HINTER	freetype/ftmodapi.h	112;"	d
FT_MODULE_IS_DRIVER	freetype/internal/ftobjs.h	508;"	d
FT_MODULE_IS_HINTER	freetype/internal/ftobjs.h	514;"	d
FT_MODULE_IS_RENDERER	freetype/internal/ftobjs.h	511;"	d
FT_MODULE_IS_STYLER	freetype/internal/ftobjs.h	517;"	d
FT_MODULE_LIBRARY	freetype/internal/ftobjs.h	504;"	d
FT_MODULE_MEMORY	freetype/internal/ftobjs.h	505;"	d
FT_MODULE_RENDERER	freetype/ftmodapi.h	111;"	d
FT_MODULE_STYLER	freetype/ftmodapi.h	113;"	d
FT_MSB	freetype/internal/ftcalc.h	349;"	d
FT_MSB	freetype/internal/ftcalc.h	353;"	d
FT_MULFIX_ASSEMBLER	freetype/internal/ftcalc.h	111;"	d
FT_MULFIX_ASSEMBLER	freetype/internal/ftcalc.h	147;"	d
FT_MULFIX_ASSEMBLER	freetype/internal/ftcalc.h	182;"	d
FT_MULFIX_ASSEMBLER	freetype/internal/ftcalc.h	42;"	d
FT_MULFIX_ASSEMBLER	freetype/internal/ftcalc.h	75;"	d
FT_MULTIPLE_MASTERS_H	freetype/config/ftheader.h	641;"	d
FT_Matrix	freetype/fttypes.h	/^  } FT_Matrix;$/;"	t	typeref:struct:FT_Matrix_
FT_Matrix_	freetype/fttypes.h	/^  typedef struct  FT_Matrix_$/;"	s
FT_Memory	freetype/ftsystem.h	/^  typedef struct FT_MemoryRec_*  FT_Memory;$/;"	t	typeref:struct:FT_MemoryRec_
FT_MemoryRec_	freetype/ftsystem.h	/^  struct  FT_MemoryRec_$/;"	s
FT_Metrics_Adjust_Func	freetype/internal/services/svmetric.h	/^  (*FT_Metrics_Adjust_Func)( FT_Face  face );$/;"	t
FT_Module	freetype/freetype.h	/^  typedef struct FT_ModuleRec_*  FT_Module;$/;"	t	typeref:struct:FT_ModuleRec_
FT_ModuleRec	freetype/internal/ftobjs.h	/^  } FT_ModuleRec;$/;"	t	typeref:struct:FT_ModuleRec_
FT_ModuleRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_ModuleRec_$/;"	s
FT_Module_Class	freetype/ftmodapi.h	/^  } FT_Module_Class;$/;"	t	typeref:struct:FT_Module_Class_
FT_Module_Class_	freetype/ftmodapi.h	/^  typedef struct  FT_Module_Class_$/;"	s
FT_Module_Constructor	freetype/ftmodapi.h	/^  (*FT_Module_Constructor)( FT_Module  module );$/;"	t
FT_Module_Creator	freetype/internal/ftobjs.h	/^  (*FT_Module_Creator)( FT_Memory          memory,$/;"	t
FT_Module_Destroyer	freetype/internal/ftobjs.h	/^  (*FT_Module_Destroyer)( FT_Memory         memory,$/;"	t
FT_Module_Destructor	freetype/ftmodapi.h	/^  (*FT_Module_Destructor)( FT_Module  module );$/;"	t
FT_Module_Interface	freetype/ftmodapi.h	/^  typedef FT_Pointer  FT_Module_Interface;$/;"	t
FT_Module_Requester	freetype/ftmodapi.h	/^  (*FT_Module_Requester)( FT_Module    module,$/;"	t
FT_MulFix	freetype/internal/ftcalc.h	244;"	d
FT_MulFix_arm	freetype/internal/ftcalc.h	/^  FT_MulFix_arm( FT_Int32  a,$/;"	f
FT_MulFix_i386	freetype/internal/ftcalc.h	/^  FT_MulFix_i386( FT_Int32  a,$/;"	f
FT_MulFix_x86_64	freetype/internal/ftcalc.h	/^  FT_MulFix_x86_64( FT_Int32  a,$/;"	f
FT_Multi_Master	freetype/ftmm.h	/^  } FT_Multi_Master;$/;"	t	typeref:struct:FT_Multi_Master_
FT_Multi_Master_	freetype/ftmm.h	/^  typedef struct  FT_Multi_Master_$/;"	s
FT_NEED_EXTERN_C	freetype/fterrors.h	129;"	d
FT_NEED_EXTERN_C	freetype/fterrors.h	166;"	d
FT_NEED_EXTERN_C	freetype/fterrors.h	215;"	d
FT_NEED_EXTERN_C	freetype/ftmoderr.h	107;"	d
FT_NEED_EXTERN_C	freetype/ftmoderr.h	121;"	d
FT_NEED_EXTERN_C	freetype/ftmoderr.h	188;"	d
FT_NEW	freetype/internal/ftmemory.h	331;"	d
FT_NEW_ARRAY	freetype/internal/ftmemory.h	333;"	d
FT_NEXT_BYTE	freetype/internal/ftstream.h	220;"	d
FT_NEXT_CHAR	freetype/internal/ftstream.h	217;"	d
FT_NEXT_LONG	freetype/internal/ftstream.h	235;"	d
FT_NEXT_LONG_LE	freetype/internal/ftstream.h	254;"	d
FT_NEXT_OFF3	freetype/internal/ftstream.h	229;"	d
FT_NEXT_OFF3_LE	freetype/internal/ftstream.h	248;"	d
FT_NEXT_SHORT	freetype/internal/ftstream.h	223;"	d
FT_NEXT_SHORT_LE	freetype/internal/ftstream.h	242;"	d
FT_NEXT_ULONG	freetype/internal/ftstream.h	238;"	d
FT_NEXT_ULONG_LE	freetype/internal/ftstream.h	257;"	d
FT_NEXT_UOFF3	freetype/internal/ftstream.h	232;"	d
FT_NEXT_UOFF3_LE	freetype/internal/ftstream.h	251;"	d
FT_NEXT_USHORT	freetype/internal/ftstream.h	226;"	d
FT_NEXT_USHORT_LE	freetype/internal/ftstream.h	245;"	d
FT_NOERRORDEF_	freetype/fterrors.h	178;"	d
FT_NOERRORDEF_	freetype/fterrors.h	213;"	d
FT_OPENTYPE_VALIDATE_H	freetype/config/ftheader.h	669;"	d
FT_OPEN_DRIVER	freetype/freetype.h	1945;"	d
FT_OPEN_MEMORY	freetype/freetype.h	1942;"	d
FT_OPEN_PARAMS	freetype/freetype.h	1946;"	d
FT_OPEN_PATHNAME	freetype/freetype.h	1944;"	d
FT_OPEN_STREAM	freetype/freetype.h	1943;"	d
FT_ORIENTATION_FILL_LEFT	freetype/ftoutln.h	/^    FT_ORIENTATION_FILL_LEFT  = FT_ORIENTATION_POSTSCRIPT,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_FILL_RIGHT	freetype/ftoutln.h	/^    FT_ORIENTATION_FILL_RIGHT = FT_ORIENTATION_TRUETYPE,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_NONE	freetype/ftoutln.h	/^    FT_ORIENTATION_NONE$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_POSTSCRIPT	freetype/ftoutln.h	/^    FT_ORIENTATION_POSTSCRIPT = 1,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_TRUETYPE	freetype/ftoutln.h	/^    FT_ORIENTATION_TRUETYPE   = 0,$/;"	e	enum:FT_Orientation_
FT_OUTLINE_CONTOURS_MAX	freetype/ftimage.h	351;"	d
FT_OUTLINE_EVEN_ODD_FILL	freetype/ftimage.h	429;"	d
FT_OUTLINE_GLYPH	freetype/internal/ftobjs.h	720;"	d
FT_OUTLINE_H	freetype/config/ftheader.h	276;"	d
FT_OUTLINE_HIGH_PRECISION	freetype/ftimage.h	435;"	d
FT_OUTLINE_IGNORE_DROPOUTS	freetype/ftimage.h	431;"	d
FT_OUTLINE_INCLUDE_STUBS	freetype/ftimage.h	433;"	d
FT_OUTLINE_NONE	freetype/ftimage.h	427;"	d
FT_OUTLINE_OWNER	freetype/ftimage.h	428;"	d
FT_OUTLINE_POINTS_MAX	freetype/ftimage.h	352;"	d
FT_OUTLINE_REVERSE_FILL	freetype/ftimage.h	430;"	d
FT_OUTLINE_SINGLE_PASS	freetype/ftimage.h	436;"	d
FT_OUTLINE_SMART_DROPOUTS	freetype/ftimage.h	432;"	d
FT_Offset	freetype/fttypes.h	/^  typedef size_t  FT_Offset;$/;"	t
FT_Open_Args	freetype/freetype.h	/^  } FT_Open_Args;$/;"	t	typeref:struct:FT_Open_Args_
FT_Open_Args_	freetype/freetype.h	/^  typedef struct  FT_Open_Args_$/;"	s
FT_Orientation	freetype/ftoutln.h	/^  } FT_Orientation;$/;"	t	typeref:enum:FT_Orientation_
FT_Orientation_	freetype/ftoutln.h	/^  typedef enum  FT_Orientation_$/;"	g
FT_Outline	freetype/ftimage.h	/^  } FT_Outline;$/;"	t	typeref:struct:FT_Outline_
FT_OutlineGlyph	freetype/ftglyph.h	/^  typedef struct FT_OutlineGlyphRec_*  FT_OutlineGlyph;$/;"	t	typeref:struct:FT_OutlineGlyphRec_
FT_OutlineGlyphRec	freetype/ftglyph.h	/^  } FT_OutlineGlyphRec;$/;"	t	typeref:struct:FT_OutlineGlyphRec_
FT_OutlineGlyphRec_	freetype/ftglyph.h	/^  typedef struct  FT_OutlineGlyphRec_$/;"	s
FT_Outline_	freetype/ftimage.h	/^  typedef struct  FT_Outline_$/;"	s
FT_Outline_ConicToFunc	freetype/ftimage.h	/^  (*FT_Outline_ConicToFunc)( const FT_Vector*  control,$/;"	t
FT_Outline_ConicTo_Func	freetype/ftimage.h	555;"	d
FT_Outline_CubicToFunc	freetype/ftimage.h	/^  (*FT_Outline_CubicToFunc)( const FT_Vector*  control1,$/;"	t
FT_Outline_CubicTo_Func	freetype/ftimage.h	588;"	d
FT_Outline_Funcs	freetype/ftimage.h	/^  } FT_Outline_Funcs;$/;"	t	typeref:struct:FT_Outline_Funcs_
FT_Outline_Funcs_	freetype/ftimage.h	/^  typedef struct  FT_Outline_Funcs_$/;"	s
FT_Outline_LineToFunc	freetype/ftimage.h	/^  (*FT_Outline_LineToFunc)( const FT_Vector*  to,$/;"	t
FT_Outline_LineTo_Func	freetype/ftimage.h	523;"	d
FT_Outline_MoveToFunc	freetype/ftimage.h	/^  (*FT_Outline_MoveToFunc)( const FT_Vector*  to,$/;"	t
FT_Outline_MoveTo_Func	freetype/ftimage.h	496;"	d
FT_PAD_CEIL	freetype/internal/ftobjs.h	89;"	d
FT_PAD_FLOOR	freetype/internal/ftobjs.h	87;"	d
FT_PAD_ROUND	freetype/internal/ftobjs.h	88;"	d
FT_PARAM_TAG_IGNORE_PREFERRED_FAMILY	freetype/ftsnames.h	255;"	d
FT_PARAM_TAG_IGNORE_PREFERRED_SUBFAMILY	freetype/ftsnames.h	276;"	d
FT_PARAM_TAG_IGNORE_TYPOGRAPHIC_FAMILY	freetype/ftsnames.h	250;"	d
FT_PARAM_TAG_IGNORE_TYPOGRAPHIC_SUBFAMILY	freetype/ftsnames.h	271;"	d
FT_PARAM_TAG_INCREMENTAL	freetype/ftincrem.h	344;"	d
FT_PARAM_TAG_LCD_FILTER_WEIGHTS	freetype/ftlcdfil.h	295;"	d
FT_PARAM_TAG_RANDOM_SEED	freetype/ftcffdrv.h	308;"	d
FT_PARAM_TAG_STEM_DARKENING	freetype/ftautoh.h	503;"	d
FT_PARAM_TAG_UNPATENTED_HINTING	freetype/ttunpat.h	52;"	d
FT_PCF_DRIVER_H	freetype/config/ftheader.h	367;"	d
FT_PEEK_LONG	freetype/internal/ftstream.h	174;"	d
FT_PEEK_LONG_LE	freetype/internal/ftstream.h	198;"	d
FT_PEEK_OFF3	freetype/internal/ftstream.h	184;"	d
FT_PEEK_OFF3_LE	freetype/internal/ftstream.h	208;"	d
FT_PEEK_SHORT	freetype/internal/ftstream.h	168;"	d
FT_PEEK_SHORT_LE	freetype/internal/ftstream.h	192;"	d
FT_PEEK_ULONG	freetype/internal/ftstream.h	179;"	d
FT_PEEK_ULONG_LE	freetype/internal/ftstream.h	203;"	d
FT_PEEK_UOFF3	freetype/internal/ftstream.h	188;"	d
FT_PEEK_UOFF3_LE	freetype/internal/ftstream.h	212;"	d
FT_PEEK_USHORT	freetype/internal/ftstream.h	171;"	d
FT_PEEK_USHORT_LE	freetype/internal/ftstream.h	195;"	d
FT_PFR_GetAdvanceFunc	freetype/internal/services/svpfr.h	/^  (*FT_PFR_GetAdvanceFunc)( FT_Face   face,$/;"	t
FT_PFR_GetKerningFunc	freetype/internal/services/svpfr.h	/^  (*FT_PFR_GetKerningFunc)( FT_Face     face,$/;"	t
FT_PFR_GetMetricsFunc	freetype/internal/services/svpfr.h	/^  (*FT_PFR_GetMetricsFunc)( FT_Face    face,$/;"	t
FT_PFR_H	freetype/config/ftheader.h	696;"	d
FT_PIC_Container	freetype/internal/ftpic.h	/^  } FT_PIC_Container;$/;"	t	typeref:struct:FT_PIC_Container_
FT_PIC_Container_	freetype/internal/ftpic.h	/^  typedef struct  FT_PIC_Container_$/;"	s
FT_PIXEL_MODE_BGRA	freetype/ftimage.h	/^    FT_PIXEL_MODE_BGRA,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_GRAY	freetype/ftimage.h	/^    FT_PIXEL_MODE_GRAY,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_GRAY2	freetype/ftimage.h	/^    FT_PIXEL_MODE_GRAY2,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_GRAY4	freetype/ftimage.h	/^    FT_PIXEL_MODE_GRAY4,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_LCD	freetype/ftimage.h	/^    FT_PIXEL_MODE_LCD,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_LCD_V	freetype/ftimage.h	/^    FT_PIXEL_MODE_LCD_V,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_MAX	freetype/ftimage.h	/^    FT_PIXEL_MODE_MAX      \/* do not remove *\/$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_MONO	freetype/ftimage.h	/^    FT_PIXEL_MODE_MONO,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_NONE	freetype/ftimage.h	/^    FT_PIXEL_MODE_NONE = 0,$/;"	e	enum:FT_Pixel_Mode_
FT_PIX_CEIL	freetype/internal/ftobjs.h	93;"	d
FT_PIX_FLOOR	freetype/internal/ftobjs.h	91;"	d
FT_PIX_ROUND	freetype/internal/ftobjs.h	92;"	d
FT_Parameter	freetype/freetype.h	/^  } FT_Parameter;$/;"	t	typeref:struct:FT_Parameter_
FT_Parameter_	freetype/freetype.h	/^  typedef struct  FT_Parameter_$/;"	s
FT_Pixel_Mode	freetype/ftimage.h	/^  } FT_Pixel_Mode;$/;"	t	typeref:enum:FT_Pixel_Mode_
FT_Pixel_Mode_	freetype/ftimage.h	/^  typedef enum  FT_Pixel_Mode_$/;"	g
FT_Pointer	freetype/fttypes.h	/^  typedef void*  FT_Pointer;$/;"	t
FT_Pos	freetype/ftimage.h	/^  typedef signed long  FT_Pos;$/;"	t
FT_Prop_GlyphToScriptMap	freetype/ftautoh.h	/^  } FT_Prop_GlyphToScriptMap;$/;"	t	typeref:struct:FT_Prop_GlyphToScriptMap_
FT_Prop_GlyphToScriptMap_	freetype/ftautoh.h	/^  typedef struct  FT_Prop_GlyphToScriptMap_$/;"	s
FT_Prop_IncreaseXHeight	freetype/ftautoh.h	/^  } FT_Prop_IncreaseXHeight;$/;"	t	typeref:struct:FT_Prop_IncreaseXHeight_
FT_Prop_IncreaseXHeight_	freetype/ftautoh.h	/^  typedef struct  FT_Prop_IncreaseXHeight_$/;"	s
FT_Properties_GetFunc	freetype/internal/services/svprop.h	/^  (*FT_Properties_GetFunc)( FT_Module    module,$/;"	t
FT_Properties_SetFunc	freetype/internal/services/svprop.h	/^  (*FT_Properties_SetFunc)( FT_Module    module,$/;"	t
FT_PsName_GetFunc	freetype/internal/services/svpostnm.h	/^  (*FT_PsName_GetFunc)( FT_Face  face );$/;"	t
FT_PtrDist	freetype/fttypes.h	/^  typedef ft_ptrdiff_t  FT_PtrDist;$/;"	t
FT_QALLOC	freetype/internal/ftmemory.h	316;"	d
FT_QALLOC_MULT	freetype/internal/ftmemory.h	322;"	d
FT_QNEW	freetype/internal/ftmemory.h	339;"	d
FT_QNEW_ARRAY	freetype/internal/ftmemory.h	342;"	d
FT_QREALLOC	freetype/internal/ftmemory.h	319;"	d
FT_QREALLOC_MULT	freetype/internal/ftmemory.h	325;"	d
FT_QRENEW_ARRAY	freetype/internal/ftmemory.h	345;"	d
FT_RACCESS_N_RULES	freetype/internal/ftrfork.h	37;"	d
FT_RASTER_FLAG_AA	freetype/ftimage.h	941;"	d
FT_RASTER_FLAG_CLIP	freetype/ftimage.h	943;"	d
FT_RASTER_FLAG_DEFAULT	freetype/ftimage.h	940;"	d
FT_RASTER_FLAG_DIRECT	freetype/ftimage.h	942;"	d
FT_READ_BYTE	freetype/internal/ftstream.h	306;"	d
FT_READ_CHAR	freetype/internal/ftstream.h	307;"	d
FT_READ_LONG	freetype/internal/ftstream.h	312;"	d
FT_READ_LONG_LE	freetype/internal/ftstream.h	317;"	d
FT_READ_MACRO	freetype/internal/ftstream.h	302;"	d
FT_READ_OFF3	freetype/internal/ftstream.h	310;"	d
FT_READ_SHORT	freetype/internal/ftstream.h	308;"	d
FT_READ_SHORT_LE	freetype/internal/ftstream.h	315;"	d
FT_READ_ULONG	freetype/internal/ftstream.h	313;"	d
FT_READ_ULONG_LE	freetype/internal/ftstream.h	318;"	d
FT_READ_UOFF3	freetype/internal/ftstream.h	311;"	d
FT_READ_USHORT	freetype/internal/ftstream.h	309;"	d
FT_READ_USHORT_LE	freetype/internal/ftstream.h	316;"	d
FT_REALLOC	freetype/internal/ftmemory.h	306;"	d
FT_REALLOC_MULT	freetype/internal/ftmemory.h	312;"	d
FT_RENDERER	freetype/internal/ftobjs.h	717;"	d
FT_RENDER_H	freetype/config/ftheader.h	315;"	d
FT_RENDER_MODE_LCD	freetype/freetype.h	/^    FT_RENDER_MODE_LCD,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_LCD_V	freetype/freetype.h	/^    FT_RENDER_MODE_LCD_V,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_LIGHT	freetype/freetype.h	/^    FT_RENDER_MODE_LIGHT,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_MAX	freetype/freetype.h	/^    FT_RENDER_MODE_MAX$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_MONO	freetype/freetype.h	/^    FT_RENDER_MODE_MONO,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_NORMAL	freetype/freetype.h	/^    FT_RENDER_MODE_NORMAL = 0,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_POOL_SIZE	freetype/config/ftoption.h	411;"	d
FT_RENEW_ARRAY	freetype/internal/ftmemory.h	336;"	d
FT_REQUEST_HEIGHT	freetype/internal/ftobjs.h	652;"	d
FT_REQUEST_WIDTH	freetype/internal/ftobjs.h	647;"	d
FT_RFork_Ref	freetype/internal/ftrfork.h	/^  } FT_RFork_Ref;$/;"	t	typeref:struct:FT_RFork_Ref_
FT_RFork_Ref_	freetype/internal/ftrfork.h	/^  typedef struct  FT_RFork_Ref_$/;"	s
FT_RFork_Rule	freetype/internal/ftrfork.h	/^  } FT_RFork_Rule;$/;"	t	typeref:enum:FT_RFork_Rule_
FT_RFork_Rule_	freetype/internal/ftrfork.h	/^  typedef enum  FT_RFork_Rule_ {$/;"	g
FT_RFork_Rule_apple_double	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_apple_double,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_apple_single	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_apple_single,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_hfsplus	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_darwin_hfsplus,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_newvfs	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_darwin_newvfs,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_ufs_export	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_darwin_ufs_export,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_invalid	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_invalid = -2,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_cap	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_linux_cap,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_double	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_linux_double,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_netatalk	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_linux_netatalk$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_uknown	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_uknown, \/* -1 *\/$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_vfat	freetype/internal/ftrfork.h	/^    FT_RFork_Rule_vfat,$/;"	e	enum:FT_RFork_Rule_
FT_RSB_Adjust_Func	freetype/internal/services/svmetric.h	/^  (*FT_RSB_Adjust_Func)( FT_Face  face,$/;"	t
FT_Raster	freetype/ftimage.h	/^  typedef struct FT_RasterRec_*  FT_Raster;$/;"	t	typeref:struct:FT_RasterRec_
FT_Raster_BitSet_Func	freetype/ftimage.h	/^  (*FT_Raster_BitSet_Func)( int    y,$/;"	t
FT_Raster_BitTest_Func	freetype/ftimage.h	/^  (*FT_Raster_BitTest_Func)( int    y,$/;"	t
FT_Raster_DoneFunc	freetype/ftimage.h	/^  (*FT_Raster_DoneFunc)( FT_Raster  raster );$/;"	t
FT_Raster_Done_Func	freetype/ftimage.h	1057;"	d
FT_Raster_Funcs	freetype/ftimage.h	/^  } FT_Raster_Funcs;$/;"	t	typeref:struct:FT_Raster_Funcs_
FT_Raster_Funcs_	freetype/ftimage.h	/^  typedef struct  FT_Raster_Funcs_$/;"	s
FT_Raster_NewFunc	freetype/ftimage.h	/^  (*FT_Raster_NewFunc)( void*       memory,$/;"	t
FT_Raster_New_Func	freetype/ftimage.h	1040;"	d
FT_Raster_Params	freetype/ftimage.h	/^  } FT_Raster_Params;$/;"	t	typeref:struct:FT_Raster_Params_
FT_Raster_Params_	freetype/ftimage.h	/^  typedef struct  FT_Raster_Params_$/;"	s
FT_Raster_RenderFunc	freetype/ftimage.h	/^  (*FT_Raster_RenderFunc)( FT_Raster                raster,$/;"	t
FT_Raster_Render_Func	freetype/ftimage.h	1158;"	d
FT_Raster_ResetFunc	freetype/ftimage.h	/^  (*FT_Raster_ResetFunc)( FT_Raster       raster,$/;"	t
FT_Raster_Reset_Func	freetype/ftimage.h	1091;"	d
FT_Raster_SetModeFunc	freetype/ftimage.h	/^  (*FT_Raster_SetModeFunc)( FT_Raster      raster,$/;"	t
FT_Raster_Set_Mode_Func	freetype/ftimage.h	1117;"	d
FT_Raster_Span_Func	freetype/ftimage.h	869;"	d
FT_Realloc_Func	freetype/ftsystem.h	/^  (*FT_Realloc_Func)( FT_Memory  memory,$/;"	t
FT_Render_Mode	freetype/freetype.h	/^  } FT_Render_Mode;$/;"	t	typeref:enum:FT_Render_Mode_
FT_Render_Mode_	freetype/freetype.h	/^  typedef enum  FT_Render_Mode_$/;"	g
FT_Renderer	freetype/freetype.h	/^  typedef struct FT_RendererRec_*  FT_Renderer;$/;"	t	typeref:struct:FT_RendererRec_
FT_RendererRec	freetype/internal/ftobjs.h	/^  } FT_RendererRec;$/;"	t	typeref:struct:FT_RendererRec_
FT_RendererRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_RendererRec_$/;"	s
FT_Renderer_Class	freetype/ftrender.h	/^  } FT_Renderer_Class;$/;"	t	typeref:struct:FT_Renderer_Class_
FT_Renderer_Class_	freetype/ftrender.h	/^  typedef struct  FT_Renderer_Class_$/;"	s
FT_Renderer_GetCBoxFunc	freetype/ftrender.h	/^  (*FT_Renderer_GetCBoxFunc)( FT_Renderer   renderer,$/;"	t
FT_Renderer_RenderFunc	freetype/ftrender.h	/^  (*FT_Renderer_RenderFunc)( FT_Renderer       renderer,$/;"	t
FT_Renderer_SetModeFunc	freetype/ftrender.h	/^  (*FT_Renderer_SetModeFunc)( FT_Renderer  renderer,$/;"	t
FT_Renderer_TransformFunc	freetype/ftrender.h	/^  (*FT_Renderer_TransformFunc)( FT_Renderer       renderer,$/;"	t
FT_SERVICE_BDF_H	freetype/internal/ftserv.h	900;"	d
FT_SERVICE_CID_H	freetype/internal/ftserv.h	901;"	d
FT_SERVICE_FONT_FORMAT_H	freetype/internal/ftserv.h	917;"	d
FT_SERVICE_GLYPH_DICT_H	freetype/internal/ftserv.h	902;"	d
FT_SERVICE_GX_VALIDATE_H	freetype/internal/ftserv.h	903;"	d
FT_SERVICE_ID_BDF	freetype/internal/services/svbdf.h	29;"	d
FT_SERVICE_ID_CID	freetype/internal/services/svcid.h	28;"	d
FT_SERVICE_ID_CLASSICKERN_VALIDATE	freetype/internal/services/svgxval.h	38;"	d
FT_SERVICE_ID_FONT_FORMAT	freetype/internal/services/svfntfmt.h	34;"	d
FT_SERVICE_ID_GLYPH_DICT	freetype/internal/services/svgldict.h	34;"	d
FT_SERVICE_ID_GX_VALIDATE	freetype/internal/services/svgxval.h	37;"	d
FT_SERVICE_ID_KERNING	freetype/internal/services/svkern.h	28;"	d
FT_SERVICE_ID_METRICS_VARIATIONS	freetype/internal/services/svmetric.h	33;"	d
FT_SERVICE_ID_MULTI_MASTERS	freetype/internal/services/svmm.h	35;"	d
FT_SERVICE_ID_OPENTYPE_VALIDATE	freetype/internal/services/svotval.h	28;"	d
FT_SERVICE_ID_PFR_METRICS	freetype/internal/services/svpfr.h	29;"	d
FT_SERVICE_ID_POSTSCRIPT_CMAPS	freetype/internal/services/svpscmap.h	28;"	d
FT_SERVICE_ID_POSTSCRIPT_FONT_NAME	freetype/internal/services/svpostnm.h	37;"	d
FT_SERVICE_ID_POSTSCRIPT_INFO	freetype/internal/services/svpsinfo.h	29;"	d
FT_SERVICE_ID_PROPERTIES	freetype/internal/services/svprop.h	26;"	d
FT_SERVICE_ID_SFNT_TABLE	freetype/internal/services/svsfnt.h	33;"	d
FT_SERVICE_ID_TRUETYPE_ENGINE	freetype/internal/services/svtteng.h	33;"	d
FT_SERVICE_ID_TT_CMAP	freetype/internal/services/svttcmap.h	32;"	d
FT_SERVICE_ID_TT_GLYF	freetype/internal/services/svttglyf.h	28;"	d
FT_SERVICE_ID_WINFNT	freetype/internal/services/svwinfnt.h	29;"	d
FT_SERVICE_KERNING_H	freetype/internal/ftserv.h	904;"	d
FT_SERVICE_METRICS_VARIATIONS_H	freetype/internal/ftserv.h	905;"	d
FT_SERVICE_MULTIPLE_MASTERS_H	freetype/internal/ftserv.h	906;"	d
FT_SERVICE_OPENTYPE_VALIDATE_H	freetype/internal/ftserv.h	907;"	d
FT_SERVICE_PFR_H	freetype/internal/ftserv.h	908;"	d
FT_SERVICE_POSTSCRIPT_CMAPS_H	freetype/internal/ftserv.h	909;"	d
FT_SERVICE_POSTSCRIPT_INFO_H	freetype/internal/ftserv.h	910;"	d
FT_SERVICE_POSTSCRIPT_NAME_H	freetype/internal/ftserv.h	911;"	d
FT_SERVICE_PROPERTIES_H	freetype/internal/ftserv.h	912;"	d
FT_SERVICE_SFNT_H	freetype/internal/ftserv.h	913;"	d
FT_SERVICE_TRUETYPE_ENGINE_H	freetype/internal/ftserv.h	914;"	d
FT_SERVICE_TRUETYPE_GLYF_H	freetype/internal/ftserv.h	918;"	d
FT_SERVICE_TT_CMAP_H	freetype/internal/ftserv.h	915;"	d
FT_SERVICE_UNAVAILABLE	freetype/internal/ftserv.h	813;"	d
FT_SERVICE_WINFNT_H	freetype/internal/ftserv.h	916;"	d
FT_SET_ERROR	freetype/internal/ftmemory.h	41;"	d
FT_SET_ERROR	freetype/internal/ftmemory.h	42;"	d
FT_SFNT_HEAD	freetype/tttables.h	/^    FT_SFNT_HEAD,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_HHEA	freetype/tttables.h	/^    FT_SFNT_HHEA,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_MAX	freetype/tttables.h	/^    FT_SFNT_MAX$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_MAXP	freetype/tttables.h	/^    FT_SFNT_MAXP,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_NAMES_H	freetype/config/ftheader.h	655;"	d
FT_SFNT_OS2	freetype/tttables.h	/^    FT_SFNT_OS2,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_PCLT	freetype/tttables.h	/^    FT_SFNT_PCLT,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_POST	freetype/tttables.h	/^    FT_SFNT_POST,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_TableGetFunc	freetype/internal/services/svsfnt.h	/^  (*FT_SFNT_TableGetFunc)( FT_Face      face,$/;"	t
FT_SFNT_TableInfoFunc	freetype/internal/services/svsfnt.h	/^  (*FT_SFNT_TableInfoFunc)( FT_Face    face,$/;"	t
FT_SFNT_TableLoadFunc	freetype/internal/services/svsfnt.h	/^  (*FT_SFNT_TableLoadFunc)( FT_Face    face,$/;"	t
FT_SFNT_VHEA	freetype/tttables.h	/^    FT_SFNT_VHEA,$/;"	e	enum:FT_Sfnt_Tag_
FT_SIZE	freetype/internal/ftobjs.h	589;"	d
FT_SIZEOF_INT	freetype/config/ftconfig.h	76;"	d
FT_SIZEOF_LONG	freetype/config/ftconfig.h	88;"	d
FT_SIZES_H	freetype/config/ftheader.h	289;"	d
FT_SIZE_FACE	freetype/internal/ftobjs.h	597;"	d
FT_SIZE_REQUEST_TYPE_BBOX	freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_BBOX,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_CELL	freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_CELL,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_MAX	freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_MAX$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_NOMINAL	freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_NOMINAL,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_REAL_DIM	freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_REAL_DIM,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_SCALES	freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_SCALES,$/;"	e	enum:FT_Size_Request_Type_
FT_SLOT	freetype/internal/ftobjs.h	590;"	d
FT_SLOT_FACE	freetype/internal/ftobjs.h	598;"	d
FT_STRCPYN	freetype/internal/ftmemory.h	382;"	d
FT_STRDUP	freetype/internal/ftmemory.h	364;"	d
FT_STREAM_POS	freetype/internal/ftstream.h	486;"	d
FT_STREAM_READ	freetype/internal/ftstream.h	497;"	d
FT_STREAM_READ_AT	freetype/internal/ftstream.h	502;"	d
FT_STREAM_READ_FIELDS	freetype/internal/ftstream.h	508;"	d
FT_STREAM_SEEK	freetype/internal/ftstream.h	489;"	d
FT_STREAM_SKIP	freetype/internal/ftstream.h	493;"	d
FT_STROKER_BORDER_LEFT	freetype/ftstroke.h	/^    FT_STROKER_BORDER_LEFT = 0,$/;"	e	enum:FT_StrokerBorder_
FT_STROKER_BORDER_RIGHT	freetype/ftstroke.h	/^    FT_STROKER_BORDER_RIGHT$/;"	e	enum:FT_StrokerBorder_
FT_STROKER_H	freetype/config/ftheader.h	708;"	d
FT_STROKER_LINECAP_BUTT	freetype/ftstroke.h	/^    FT_STROKER_LINECAP_BUTT = 0,$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINECAP_ROUND	freetype/ftstroke.h	/^    FT_STROKER_LINECAP_ROUND,$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINECAP_SQUARE	freetype/ftstroke.h	/^    FT_STROKER_LINECAP_SQUARE$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINEJOIN_BEVEL	freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_BEVEL          = 1,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER	freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER          = FT_STROKER_LINEJOIN_MITER_VARIABLE,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER_FIXED	freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER_FIXED    = 3$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER_VARIABLE	freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER_VARIABLE = 2,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_ROUND	freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_ROUND          = 0,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STYLE_FLAG_BOLD	freetype/freetype.h	1467;"	d
FT_STYLE_FLAG_ITALIC	freetype/freetype.h	1466;"	d
FT_SUBGLYPH_FLAG_2X2	freetype/freetype.h	3823;"	d
FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS	freetype/freetype.h	3818;"	d
FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES	freetype/freetype.h	3819;"	d
FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID	freetype/freetype.h	3820;"	d
FT_SUBGLYPH_FLAG_SCALE	freetype/freetype.h	3821;"	d
FT_SUBGLYPH_FLAG_USE_MY_METRICS	freetype/freetype.h	3824;"	d
FT_SUBGLYPH_FLAG_XY_SCALE	freetype/freetype.h	3822;"	d
FT_SYNTHESIS_H	freetype/config/ftheader.h	720;"	d
FT_SYSTEM_H	freetype/config/ftheader.h	217;"	d
FT_ServiceCache	freetype/internal/ftserv.h	/^  } FT_ServiceCacheRec, *FT_ServiceCache;$/;"	t	typeref:struct:FT_ServiceCacheRec_
FT_ServiceCacheRec	freetype/internal/ftserv.h	/^  } FT_ServiceCacheRec, *FT_ServiceCache;$/;"	t	typeref:struct:FT_ServiceCacheRec_
FT_ServiceCacheRec_	freetype/internal/ftserv.h	/^  typedef struct  FT_ServiceCacheRec_$/;"	s
FT_ServiceDesc	freetype/internal/ftserv.h	/^  typedef const FT_ServiceDescRec*  FT_ServiceDesc;$/;"	t
FT_ServiceDescRec	freetype/internal/ftserv.h	/^  } FT_ServiceDescRec;$/;"	t	typeref:struct:FT_ServiceDescRec_
FT_ServiceDescRec_	freetype/internal/ftserv.h	/^  typedef struct  FT_ServiceDescRec_$/;"	s
FT_Set_MM_Blend_Func	freetype/internal/services/svmm.h	/^  (*FT_Set_MM_Blend_Func)( FT_Face   face,$/;"	t
FT_Set_MM_Design_Func	freetype/internal/services/svmm.h	/^  (*FT_Set_MM_Design_Func)( FT_Face   face,$/;"	t
FT_Set_Var_Design_Func	freetype/internal/services/svmm.h	/^  (*FT_Set_Var_Design_Func)( FT_Face    face,$/;"	t
FT_SfntLangTag	freetype/ftsnames.h	/^  } FT_SfntLangTag;$/;"	t	typeref:struct:FT_SfntLangTag_
FT_SfntLangTag_	freetype/ftsnames.h	/^  typedef struct  FT_SfntLangTag_$/;"	s
FT_SfntName	freetype/ftsnames.h	/^  } FT_SfntName;$/;"	t	typeref:struct:FT_SfntName_
FT_SfntName_	freetype/ftsnames.h	/^  typedef struct  FT_SfntName_$/;"	s
FT_Sfnt_Tag	freetype/tttables.h	/^  } FT_Sfnt_Tag;$/;"	t	typeref:enum:FT_Sfnt_Tag_
FT_Sfnt_Tag_	freetype/tttables.h	/^  typedef enum  FT_Sfnt_Tag_$/;"	g
FT_Short	freetype/fttypes.h	/^  typedef signed short  FT_Short;$/;"	t
FT_Size	freetype/freetype.h	/^  typedef struct FT_SizeRec_*  FT_Size;$/;"	t	typeref:struct:FT_SizeRec_
FT_SizeRec	freetype/freetype.h	/^  } FT_SizeRec;$/;"	t	typeref:struct:FT_SizeRec_
FT_SizeRec_	freetype/freetype.h	/^  typedef struct  FT_SizeRec_$/;"	s
FT_Size_DoneFunc	freetype/internal/ftdriver.h	/^  (*FT_Size_DoneFunc)( FT_Size  size );$/;"	t
FT_Size_InitFunc	freetype/internal/ftdriver.h	/^  (*FT_Size_InitFunc)( FT_Size  size );$/;"	t
FT_Size_Internal	freetype/freetype.h	/^  typedef struct FT_Size_InternalRec_*  FT_Size_Internal;$/;"	t	typeref:struct:FT_Size_InternalRec_
FT_Size_InternalRec	freetype/internal/ftobjs.h	/^  } FT_Size_InternalRec;$/;"	t	typeref:struct:FT_Size_InternalRec_
FT_Size_InternalRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_Size_InternalRec_$/;"	s
FT_Size_Metrics	freetype/freetype.h	/^  } FT_Size_Metrics;$/;"	t	typeref:struct:FT_Size_Metrics_
FT_Size_Metrics_	freetype/freetype.h	/^  typedef struct  FT_Size_Metrics_$/;"	s
FT_Size_Request	freetype/freetype.h	/^  typedef struct FT_Size_RequestRec_  *FT_Size_Request;$/;"	t	typeref:struct:FT_Size_RequestRec_
FT_Size_RequestFunc	freetype/internal/ftdriver.h	/^  (*FT_Size_RequestFunc)( FT_Size          size,$/;"	t
FT_Size_RequestRec	freetype/freetype.h	/^  } FT_Size_RequestRec;$/;"	t	typeref:struct:FT_Size_RequestRec_
FT_Size_RequestRec_	freetype/freetype.h	/^  typedef struct  FT_Size_RequestRec_$/;"	s
FT_Size_Request_Type	freetype/freetype.h	/^  } FT_Size_Request_Type;$/;"	t	typeref:enum:FT_Size_Request_Type_
FT_Size_Request_Type_	freetype/freetype.h	/^  typedef enum  FT_Size_Request_Type_$/;"	g
FT_Size_SelectFunc	freetype/internal/ftdriver.h	/^  (*FT_Size_SelectFunc)( FT_Size   size,$/;"	t
FT_Slot_DoneFunc	freetype/internal/ftdriver.h	/^  (*FT_Slot_DoneFunc)( FT_GlyphSlot  slot );$/;"	t
FT_Slot_InitFunc	freetype/internal/ftdriver.h	/^  (*FT_Slot_InitFunc)( FT_GlyphSlot  slot );$/;"	t
FT_Slot_Internal	freetype/freetype.h	/^  typedef struct FT_Slot_InternalRec_*  FT_Slot_Internal;$/;"	t	typeref:struct:FT_Slot_InternalRec_
FT_Slot_InternalRec_	freetype/internal/ftobjs.h	/^  typedef struct  FT_Slot_InternalRec_$/;"	s
FT_Slot_LoadFunc	freetype/internal/ftdriver.h	/^  (*FT_Slot_LoadFunc)( FT_GlyphSlot  slot,$/;"	t
FT_Span	freetype/ftimage.h	/^  } FT_Span;$/;"	t	typeref:struct:FT_Span_
FT_SpanFunc	freetype/ftimage.h	/^  (*FT_SpanFunc)( int             y,$/;"	t
FT_Span_	freetype/ftimage.h	/^  typedef struct  FT_Span_$/;"	s
FT_Stream	freetype/ftsystem.h	/^  typedef struct FT_StreamRec_*  FT_Stream;$/;"	t	typeref:struct:FT_StreamRec_
FT_StreamDesc	freetype/ftsystem.h	/^  } FT_StreamDesc;$/;"	t	typeref:union:FT_StreamDesc_
FT_StreamDesc_	freetype/ftsystem.h	/^  typedef union  FT_StreamDesc_$/;"	u
FT_StreamRec	freetype/ftsystem.h	/^  } FT_StreamRec;$/;"	t	typeref:struct:FT_StreamRec_
FT_StreamRec_	freetype/ftsystem.h	/^  typedef struct  FT_StreamRec_$/;"	s
FT_Stream_CloseFunc	freetype/ftsystem.h	/^  (*FT_Stream_CloseFunc)( FT_Stream  stream );$/;"	t
FT_Stream_IoFunc	freetype/ftsystem.h	/^  (*FT_Stream_IoFunc)( FT_Stream       stream,$/;"	t
FT_String	freetype/fttypes.h	/^  typedef char  FT_String;$/;"	t
FT_Stroker	freetype/ftstroke.h	/^  typedef struct FT_StrokerRec_*  FT_Stroker;$/;"	t	typeref:struct:FT_StrokerRec_
FT_StrokerBorder	freetype/ftstroke.h	/^  } FT_StrokerBorder;$/;"	t	typeref:enum:FT_StrokerBorder_
FT_StrokerBorder_	freetype/ftstroke.h	/^  typedef enum  FT_StrokerBorder_$/;"	g
FT_Stroker_LineCap	freetype/ftstroke.h	/^  } FT_Stroker_LineCap;$/;"	t	typeref:enum:FT_Stroker_LineCap_
FT_Stroker_LineCap_	freetype/ftstroke.h	/^  typedef enum  FT_Stroker_LineCap_$/;"	g
FT_Stroker_LineJoin	freetype/ftstroke.h	/^  } FT_Stroker_LineJoin;$/;"	t	typeref:enum:FT_Stroker_LineJoin_
FT_Stroker_LineJoin_	freetype/ftstroke.h	/^  typedef enum  FT_Stroker_LineJoin_$/;"	g
FT_SubGlyph	freetype/freetype.h	/^  typedef struct FT_SubGlyphRec_*  FT_SubGlyph;$/;"	t	typeref:struct:FT_SubGlyphRec_
FT_SubGlyphRec	freetype/internal/ftgloadr.h	/^  } FT_SubGlyphRec;$/;"	t	typeref:struct:FT_SubGlyphRec_
FT_SubGlyphRec_	freetype/internal/ftgloadr.h	/^  typedef struct  FT_SubGlyphRec_$/;"	s
FT_THROW	freetype/internal/ftdebug.h	203;"	d
FT_THROW	freetype/internal/ftdebug.h	213;"	d
FT_TRACE	freetype/internal/ftdebug.h	86;"	d
FT_TRACE	freetype/internal/ftdebug.h	95;"	d
FT_TRACE0	freetype/internal/ftdebug.h	157;"	d
FT_TRACE1	freetype/internal/ftdebug.h	158;"	d
FT_TRACE2	freetype/internal/ftdebug.h	159;"	d
FT_TRACE3	freetype/internal/ftdebug.h	160;"	d
FT_TRACE4	freetype/internal/ftdebug.h	161;"	d
FT_TRACE5	freetype/internal/ftdebug.h	162;"	d
FT_TRACE6	freetype/internal/ftdebug.h	163;"	d
FT_TRACE7	freetype/internal/ftdebug.h	164;"	d
FT_TRACE_DEF	freetype/internal/ftdebug.h	54;"	d
FT_TRACE_DEF	freetype/internal/ftdebug.h	68;"	d
FT_TRIGONOMETRY_H	freetype/config/ftheader.h	748;"	d
FT_TRUETYPE_DRIVER_H	freetype/config/ftheader.h	354;"	d
FT_TRUETYPE_ENGINE_TYPE_NONE	freetype/ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_NONE = 0,$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_ENGINE_TYPE_PATENTED	freetype/ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_PATENTED$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_ENGINE_TYPE_UNPATENTED	freetype/ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_UNPATENTED,$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_IDS_H	freetype/config/ftheader.h	395;"	d
FT_TRUETYPE_TABLES_H	freetype/config/ftheader.h	408;"	d
FT_TRUETYPE_TAGS_H	freetype/config/ftheader.h	422;"	d
FT_TRUETYPE_UNPATENTED_H	freetype/config/ftheader.h	830;"	d
FT_TSB_Adjust_Func	freetype/internal/services/svmetric.h	/^  (*FT_TSB_Adjust_Func)( FT_Face  face,$/;"	t
FT_TYPE1_TABLES_H	freetype/config/ftheader.h	380;"	d
FT_TYPEOF	freetype/config/ftconfig.h	362;"	d
FT_TYPEOF	freetype/config/ftconfig.h	364;"	d
FT_TYPES_H	freetype/config/ftheader.h	248;"	d
FT_Tag	freetype/fttypes.h	/^  typedef FT_UInt32  FT_Tag;$/;"	t
FT_Trace	freetype/internal/ftdebug.h	/^  } FT_Trace;$/;"	t	typeref:enum:FT_Trace_
FT_Trace_	freetype/internal/ftdebug.h	/^  typedef enum  FT_Trace_$/;"	g
FT_TrueTypeEngineType	freetype/ftmodapi.h	/^  } FT_TrueTypeEngineType;$/;"	t	typeref:enum:FT_TrueTypeEngineType_
FT_TrueTypeEngineType_	freetype/ftmodapi.h	/^  typedef enum  FT_TrueTypeEngineType_$/;"	g
FT_UFWord	freetype/fttypes.h	/^  typedef unsigned short  FT_UFWord;  \/* unsigned distance *\/$/;"	t
FT_UFast	freetype/config/ftconfig.h	/^  typedef unsigned int   FT_UFast;$/;"	t
FT_UFast	freetype/config/ftconfig.h	/^  typedef unsigned long  FT_UFast;$/;"	t
FT_UINT16	freetype/internal/ftstream.h	159;"	d
FT_UINT32	freetype/internal/ftstream.h	161;"	d
FT_UINT64	freetype/config/ftconfig.h	275;"	d
FT_UINT64	freetype/config/ftconfig.h	290;"	d
FT_UINT64	freetype/config/ftconfig.h	297;"	d
FT_UINT64	freetype/config/ftconfig.h	307;"	d
FT_UINT64	freetype/config/ftconfig.h	317;"	d
FT_UINT64	freetype/config/ftconfig.h	324;"	d
FT_UINT_MAX	freetype/config/ftstdlib.h	65;"	d
FT_UINT_TO_POINTER	freetype/config/ftconfig.h	339;"	d
FT_UINT_TO_POINTER	freetype/config/ftconfig.h	341;"	d
FT_UInt	freetype/fttypes.h	/^  typedef unsigned int  FT_UInt;$/;"	t
FT_UInt16	freetype/config/ftconfig.h	/^  typedef unsigned short  FT_UInt16;$/;"	t
FT_UInt32	freetype/config/ftconfig.h	/^  typedef unsigned int    FT_UInt32;$/;"	t
FT_UInt32	freetype/config/ftconfig.h	/^  typedef unsigned long   FT_UInt32;$/;"	t
FT_UInt64	freetype/config/ftconfig.h	/^  typedef FT_UINT64  FT_UInt64;$/;"	t
FT_ULONG_MAX	freetype/config/ftstdlib.h	68;"	d
FT_ULong	freetype/fttypes.h	/^  typedef unsigned long  FT_ULong;$/;"	t
FT_UNPATENTED_HINTING_H	freetype/config/ftheader.h	771;"	d
FT_UNUSED	freetype/config/ftconfig.h	101;"	d
FT_USHORT_MAX	freetype/config/ftstdlib.h	62;"	d
FT_UShort	freetype/fttypes.h	/^  typedef unsigned short  FT_UShort;$/;"	t
FT_UnitVector	freetype/fttypes.h	/^  } FT_UnitVector;$/;"	t	typeref:struct:FT_UnitVector_
FT_UnitVector_	freetype/fttypes.h	/^  typedef struct  FT_UnitVector_$/;"	s
FT_VALIDATE_APPLE	freetype/ftgxval.h	279;"	d
FT_VALIDATE_BASE	freetype/ftotval.h	102;"	d
FT_VALIDATE_CKERN	freetype/ftgxval.h	281;"	d
FT_VALIDATE_DEFAULT	freetype/internal/ftvalid.h	/^    FT_VALIDATE_DEFAULT = 0,$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_GDEF	freetype/ftotval.h	103;"	d
FT_VALIDATE_GPOS	freetype/ftotval.h	104;"	d
FT_VALIDATE_GSUB	freetype/ftotval.h	105;"	d
FT_VALIDATE_GX	freetype/ftgxval.h	172;"	d
FT_VALIDATE_GX_BITFIELD	freetype/ftgxval.h	111;"	d
FT_VALIDATE_GX_LAST_INDEX	freetype/ftgxval.h	92;"	d
FT_VALIDATE_GX_LENGTH	freetype/ftgxval.h	104;"	d
FT_VALIDATE_GX_START	freetype/ftgxval.h	110;"	d
FT_VALIDATE_JSTF	freetype/ftotval.h	106;"	d
FT_VALIDATE_MATH	freetype/ftotval.h	107;"	d
FT_VALIDATE_MS	freetype/ftgxval.h	278;"	d
FT_VALIDATE_OT	freetype/ftotval.h	109;"	d
FT_VALIDATE_PARANOID	freetype/internal/ftvalid.h	/^    FT_VALIDATE_PARANOID$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_TIGHT	freetype/internal/ftvalid.h	/^    FT_VALIDATE_TIGHT,$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_bsln	freetype/ftgxval.h	164;"	d
FT_VALIDATE_bsln_INDEX	freetype/ftgxval.h	85;"	d
FT_VALIDATE_feat	freetype/ftgxval.h	161;"	d
FT_VALIDATE_feat_INDEX	freetype/ftgxval.h	82;"	d
FT_VALIDATE_just	freetype/ftgxval.h	165;"	d
FT_VALIDATE_just_INDEX	freetype/ftgxval.h	86;"	d
FT_VALIDATE_kern	freetype/ftgxval.h	166;"	d
FT_VALIDATE_kern_INDEX	freetype/ftgxval.h	87;"	d
FT_VALIDATE_lcar	freetype/ftgxval.h	170;"	d
FT_VALIDATE_lcar_INDEX	freetype/ftgxval.h	91;"	d
FT_VALIDATE_mort	freetype/ftgxval.h	162;"	d
FT_VALIDATE_mort_INDEX	freetype/ftgxval.h	83;"	d
FT_VALIDATE_morx	freetype/ftgxval.h	163;"	d
FT_VALIDATE_morx_INDEX	freetype/ftgxval.h	84;"	d
FT_VALIDATE_opbd	freetype/ftgxval.h	167;"	d
FT_VALIDATE_opbd_INDEX	freetype/ftgxval.h	88;"	d
FT_VALIDATE_prop	freetype/ftgxval.h	169;"	d
FT_VALIDATE_prop_INDEX	freetype/ftgxval.h	90;"	d
FT_VALIDATE_trak	freetype/ftgxval.h	168;"	d
FT_VALIDATE_trak_INDEX	freetype/ftgxval.h	89;"	d
FT_VALIDATOR	freetype/internal/ftvalid.h	103;"	d
FT_VAdvance_Adjust_Func	freetype/internal/services/svmetric.h	/^  (*FT_VAdvance_Adjust_Func)( FT_Face  face,$/;"	t
FT_VOrg_Adjust_Func	freetype/internal/services/svmetric.h	/^  (*FT_VOrg_Adjust_Func)( FT_Face  face,$/;"	t
FT_ValidationLevel	freetype/internal/ftvalid.h	/^  } FT_ValidationLevel;$/;"	t	typeref:enum:FT_ValidationLevel_
FT_ValidationLevel_	freetype/internal/ftvalid.h	/^  typedef enum  FT_ValidationLevel_$/;"	g
FT_Validator	freetype/internal/ftvalid.h	/^  typedef struct FT_ValidatorRec_ volatile*  FT_Validator;$/;"	t
FT_ValidatorRec	freetype/internal/ftvalid.h	/^  } FT_ValidatorRec;$/;"	t	typeref:struct:FT_ValidatorRec_
FT_ValidatorRec_	freetype/internal/ftvalid.h	/^  typedef struct  FT_ValidatorRec_$/;"	s
FT_Var_Axis	freetype/ftmm.h	/^  } FT_Var_Axis;$/;"	t	typeref:struct:FT_Var_Axis_
FT_Var_Axis_	freetype/ftmm.h	/^  typedef struct  FT_Var_Axis_$/;"	s
FT_Var_Named_Style	freetype/ftmm.h	/^  } FT_Var_Named_Style;$/;"	t	typeref:struct:FT_Var_Named_Style_
FT_Var_Named_Style_	freetype/ftmm.h	/^  typedef struct  FT_Var_Named_Style_$/;"	s
FT_Vector	freetype/ftimage.h	/^  } FT_Vector;$/;"	t	typeref:struct:FT_Vector_
FT_Vector_	freetype/ftimage.h	/^  typedef struct  FT_Vector_$/;"	s
FT_WINFONTS_H	freetype/config/ftheader.h	502;"	d
FT_WinFNT_Header	freetype/ftwinfnt.h	/^  typedef struct FT_WinFNT_HeaderRec_*  FT_WinFNT_Header;$/;"	t	typeref:struct:FT_WinFNT_HeaderRec_
FT_WinFNT_HeaderRec	freetype/ftwinfnt.h	/^  } FT_WinFNT_HeaderRec;$/;"	t	typeref:struct:FT_WinFNT_HeaderRec_
FT_WinFNT_HeaderRec_	freetype/ftwinfnt.h	/^  typedef struct  FT_WinFNT_HeaderRec_$/;"	s
FT_WinFNT_ID_CP1250	freetype/ftwinfnt.h	172;"	d
FT_WinFNT_ID_CP1251	freetype/ftwinfnt.h	170;"	d
FT_WinFNT_ID_CP1252	freetype/ftwinfnt.h	155;"	d
FT_WinFNT_ID_CP1253	freetype/ftwinfnt.h	164;"	d
FT_WinFNT_ID_CP1254	freetype/ftwinfnt.h	165;"	d
FT_WinFNT_ID_CP1255	freetype/ftwinfnt.h	167;"	d
FT_WinFNT_ID_CP1256	freetype/ftwinfnt.h	168;"	d
FT_WinFNT_ID_CP1257	freetype/ftwinfnt.h	169;"	d
FT_WinFNT_ID_CP1258	freetype/ftwinfnt.h	166;"	d
FT_WinFNT_ID_CP1361	freetype/ftwinfnt.h	161;"	d
FT_WinFNT_ID_CP874	freetype/ftwinfnt.h	171;"	d
FT_WinFNT_ID_CP932	freetype/ftwinfnt.h	159;"	d
FT_WinFNT_ID_CP936	freetype/ftwinfnt.h	162;"	d
FT_WinFNT_ID_CP949	freetype/ftwinfnt.h	160;"	d
FT_WinFNT_ID_CP950	freetype/ftwinfnt.h	163;"	d
FT_WinFNT_ID_DEFAULT	freetype/ftwinfnt.h	156;"	d
FT_WinFNT_ID_MAC	freetype/ftwinfnt.h	158;"	d
FT_WinFNT_ID_OEM	freetype/ftwinfnt.h	173;"	d
FT_WinFNT_ID_SYMBOL	freetype/ftwinfnt.h	157;"	d
FT_WinFnt_GetHeaderFunc	freetype/internal/services/svwinfnt.h	/^  (*FT_WinFnt_GetHeaderFunc)( FT_Face               face,$/;"	t
FT_XFREE86_H	freetype/config/ftheader.h	735;"	d
FT_ZERO	freetype/internal/ftmemory.h	237;"	d
FZ_ARRAY	inc/fitz.h	/^	FZ_ARRAY,$/;"	e	enum:fz_objkind_e
FZ_BCOLOR	inc/fitz.h	/^	FZ_BCOLOR,$/;"	e	enum:fz_blendmode_e
FZ_BCOLORBURN	inc/fitz.h	/^	FZ_BCOLORBURN,$/;"	e	enum:fz_blendmode_e
FZ_BCOLORDODGE	inc/fitz.h	/^	FZ_BCOLORDODGE,$/;"	e	enum:fz_blendmode_e
FZ_BDARKEN	inc/fitz.h	/^	FZ_BDARKEN,$/;"	e	enum:fz_blendmode_e
FZ_BDIFFERENCE	inc/fitz.h	/^	FZ_BDIFFERENCE,$/;"	e	enum:fz_blendmode_e
FZ_BEXCLUSION	inc/fitz.h	/^	FZ_BEXCLUSION,$/;"	e	enum:fz_blendmode_e
FZ_BHARDLIGHT	inc/fitz.h	/^	FZ_BHARDLIGHT,$/;"	e	enum:fz_blendmode_e
FZ_BHUE	inc/fitz.h	/^	FZ_BHUE,$/;"	e	enum:fz_blendmode_e
FZ_BLEND	inc/fitz.h	206;"	d
FZ_BLIGHTEN	inc/fitz.h	/^	FZ_BLIGHTEN,$/;"	e	enum:fz_blendmode_e
FZ_BLUMINOSITY	inc/fitz.h	/^	FZ_BLUMINOSITY,$/;"	e	enum:fz_blendmode_e
FZ_BMULTIPLY	inc/fitz.h	/^	FZ_BMULTIPLY,$/;"	e	enum:fz_blendmode_e
FZ_BNORMAL	inc/fitz.h	/^	FZ_BNORMAL,$/;"	e	enum:fz_blendmode_e
FZ_BOOL	inc/fitz.h	/^	FZ_BOOL,$/;"	e	enum:fz_objkind_e
FZ_BOVERLAY	inc/fitz.h	/^	FZ_BOVERLAY,$/;"	e	enum:fz_blendmode_e
FZ_BSATURATION	inc/fitz.h	/^	FZ_BSATURATION,$/;"	e	enum:fz_blendmode_e
FZ_BSCREEN	inc/fitz.h	/^	FZ_BSCREEN,$/;"	e	enum:fz_blendmode_e
FZ_BSOFTLIGHT	inc/fitz.h	/^	FZ_BSOFTLIGHT,$/;"	e	enum:fz_blendmode_e
FZ_CLOSEPATH	inc/fitz.h	/^	FZ_CLOSEPATH$/;"	e	enum:fz_pathelkind_e
FZ_CMDBEGINGROUP	inc/fitz.h	/^	FZ_CMDBEGINGROUP,$/;"	e	enum:fz_displaycommand_e
FZ_CMDBEGINMASK	inc/fitz.h	/^	FZ_CMDBEGINMASK,$/;"	e	enum:fz_displaycommand_e
FZ_CMDCLIPIMAGEMASK	inc/fitz.h	/^	FZ_CMDCLIPIMAGEMASK,$/;"	e	enum:fz_displaycommand_e
FZ_CMDCLIPPATH	inc/fitz.h	/^	FZ_CMDCLIPPATH,$/;"	e	enum:fz_displaycommand_e
FZ_CMDCLIPSTROKEPATH	inc/fitz.h	/^	FZ_CMDCLIPSTROKEPATH,$/;"	e	enum:fz_displaycommand_e
FZ_CMDCLIPSTROKETEXT	inc/fitz.h	/^	FZ_CMDCLIPSTROKETEXT,$/;"	e	enum:fz_displaycommand_e
FZ_CMDCLIPTEXT	inc/fitz.h	/^	FZ_CMDCLIPTEXT,$/;"	e	enum:fz_displaycommand_e
FZ_CMDENDGROUP	inc/fitz.h	/^	FZ_CMDENDGROUP,$/;"	e	enum:fz_displaycommand_e
FZ_CMDENDMASK	inc/fitz.h	/^	FZ_CMDENDMASK,$/;"	e	enum:fz_displaycommand_e
FZ_CMDFILLIMAGE	inc/fitz.h	/^	FZ_CMDFILLIMAGE,$/;"	e	enum:fz_displaycommand_e
FZ_CMDFILLIMAGEMASK	inc/fitz.h	/^	FZ_CMDFILLIMAGEMASK,$/;"	e	enum:fz_displaycommand_e
FZ_CMDFILLPATH	inc/fitz.h	/^	FZ_CMDFILLPATH,$/;"	e	enum:fz_displaycommand_e
FZ_CMDFILLSHADE	inc/fitz.h	/^	FZ_CMDFILLSHADE,$/;"	e	enum:fz_displaycommand_e
FZ_CMDFILLTEXT	inc/fitz.h	/^	FZ_CMDFILLTEXT,$/;"	e	enum:fz_displaycommand_e
FZ_CMDIGNORETEXT	inc/fitz.h	/^	FZ_CMDIGNORETEXT,$/;"	e	enum:fz_displaycommand_e
FZ_CMDPOPCLIP	inc/fitz.h	/^	FZ_CMDPOPCLIP,$/;"	e	enum:fz_displaycommand_e
FZ_CMDSTROKEPATH	inc/fitz.h	/^	FZ_CMDSTROKEPATH,$/;"	e	enum:fz_displaycommand_e
FZ_CMDSTROKETEXT	inc/fitz.h	/^	FZ_CMDSTROKETEXT,$/;"	e	enum:fz_displaycommand_e
FZ_COMBINE	inc/fitz.h	198;"	d
FZ_COMBINE2	inc/fitz.h	202;"	d
FZ_CURVETO	inc/fitz.h	/^	FZ_CURVETO,$/;"	e	enum:fz_pathelkind_e
FZ_DICT	inc/fitz.h	/^	FZ_DICT,$/;"	e	enum:fz_objkind_e
FZ_EXPAND	inc/fitz.h	194;"	d
FZ_IGNOREIMAGE	inc/fitz.h	/^	FZ_IGNOREIMAGE = 1,$/;"	e	enum:__anon26
FZ_IGNORESHADE	inc/fitz.h	/^	FZ_IGNORESHADE = 2,$/;"	e	enum:__anon26
FZ_INDIRECT	inc/fitz.h	/^	FZ_INDIRECT$/;"	e	enum:fz_objkind_e
FZ_INT	inc/fitz.h	/^	FZ_INT,$/;"	e	enum:fz_objkind_e
FZ_LINEAR	inc/fitz.h	/^	FZ_LINEAR,$/;"	e	enum:__anon25
FZ_LINETO	inc/fitz.h	/^	FZ_LINETO,$/;"	e	enum:fz_pathelkind_e
FZ_MAXCOLORS	inc/fitz.h	/^enum { FZ_MAXCOLORS = 32 };$/;"	e	enum:__anon24
FZ_MESH	inc/fitz.h	/^	FZ_MESH,$/;"	e	enum:__anon25
FZ_MOVETO	inc/fitz.h	/^	FZ_MOVETO,$/;"	e	enum:fz_pathelkind_e
FZ_NAME	inc/fitz.h	/^	FZ_NAME,$/;"	e	enum:fz_objkind_e
FZ_NULL	inc/fitz.h	/^	FZ_NULL,$/;"	e	enum:fz_objkind_e
FZ_RADIAL	inc/fitz.h	/^	FZ_RADIAL,$/;"	e	enum:__anon25
FZ_REAL	inc/fitz.h	/^	FZ_REAL,$/;"	e	enum:fz_objkind_e
FZ_STRING	inc/fitz.h	/^	FZ_STRING,$/;"	e	enum:fz_objkind_e
FileName	freetype/tttables.h	/^    FT_Char    FileName[6];$/;"	m	struct:TT_PCLT_
Flags	freetype/tttables.h	/^    FT_UShort  Flags;$/;"	m	struct:TT_Header_
FontBBox	freetype/internal/t1types.h	/^    FT_BBox        FontBBox;$/;"	m	struct:AFM_FontInfoRec_
FontInfo	freetype/internal/psaux.h	/^    AFM_FontInfo  FontInfo;$/;"	m	struct:AFM_ParserRec_
FontNumber	freetype/tttables.h	/^    FT_ULong   FontNumber;$/;"	m	struct:TT_PCLT_
Font_Direction	freetype/tttables.h	/^    FT_Short   Font_Direction;$/;"	m	struct:TT_Header_
Font_Revision	freetype/tttables.h	/^    FT_Fixed   Font_Revision;$/;"	m	struct:TT_Header_
FormatType	freetype/tttables.h	/^    FT_Fixed  FormatType;$/;"	m	struct:TT_Postscript_
GB	src/pdf_fontfile.c	/^enum { CNS, GB, Japan, Korea };$/;"	e	enum:__anon8	file:
GOTHIC	src/pdf_fontfile.c	/^enum { MINCHO, GOTHIC };$/;"	e	enum:__anon9	file:
GX_Blend	freetype/internal/tttypes.h	/^  typedef struct GX_BlendRec_  *GX_Blend;$/;"	t	typeref:struct:GX_BlendRec_
Glyph_Data_Format	freetype/tttables.h	/^    FT_Short   Glyph_Data_Format;$/;"	m	struct:TT_Header_
H	src/filt_faxd.c	/^	H = -5,$/;"	e	enum:__anon5	file:
HAND	inc/mypdf.h	/^enum { ARROW, HAND, WAIT };$/;"	e	enum:__anon17
INT_TO_F26DOT6	freetype/internal/ftcalc.h	402;"	d
INT_TO_F2DOT14	freetype/internal/ftcalc.h	403;"	d
INT_TO_FIXED	freetype/internal/ftcalc.h	404;"	d
ISDELIM	src/pdf_lex.c	14;"	d	file:
ISHEX	src/pdf_lex.c	9;"	d	file:
ISNUMBER	src/pdf_lex.c	4;"	d	file:
ISWHITE	src/pdf_lex.c	7;"	d	file:
IS_PS_BASE85	freetype/internal/psaux.h	863;"	d
IS_PS_DELIM	freetype/internal/psaux.h	851;"	d
IS_PS_DIGIT	freetype/internal/psaux.h	855;"	d
IS_PS_NEWLINE	freetype/internal/psaux.h	832;"	d
IS_PS_SPACE	freetype/internal/psaux.h	836;"	d
IS_PS_SPECIAL	freetype/internal/psaux.h	843;"	d
IS_PS_TOKEN	freetype/internal/psaux.h	866;"	d
IS_PS_XDIGIT	freetype/internal/psaux.h	858;"	d
Index_To_Loc_Format	freetype/tttables.h	/^    FT_Short   Index_To_Loc_Format;$/;"	m	struct:TT_Header_
IsCIDFont	freetype/internal/t1types.h	/^    FT_Bool        IsCIDFont;$/;"	m	struct:AFM_FontInfoRec_
Japan	src/pdf_fontfile.c	/^enum { CNS, GB, Japan, Korea };$/;"	e	enum:__anon8	file:
KernPairs	freetype/internal/t1types.h	/^    AFM_KernPair   KernPairs;    \/* free if non-NULL *\/$/;"	m	struct:AFM_FontInfoRec_
Korea	src/pdf_fontfile.c	/^enum { CNS, GB, Japan, Korea };$/;"	e	enum:__anon8	file:
LZW_CLEAR	src/filt_lzwd.c	/^	LZW_CLEAR = 256,$/;"	e	enum:__anon12	file:
LZW_EOD	src/filt_lzwd.c	/^	LZW_EOD = 257,$/;"	e	enum:__anon12	file:
LZW_FIRST	src/filt_lzwd.c	/^	LZW_FIRST = 258,$/;"	e	enum:__anon12	file:
Length	freetype/internal/tttypes.h	/^    FT_ULong  Length;     \/*      table length *\/$/;"	m	struct:TT_TableRec_
Line_Gap	freetype/tttables.h	/^    FT_Short   Line_Gap;$/;"	m	struct:TT_HoriHeader_
Line_Gap	freetype/tttables.h	/^    FT_Short   Line_Gap;$/;"	m	struct:TT_VertHeader_
Lowest_Rec_PPEM	freetype/tttables.h	/^    FT_UShort  Lowest_Rec_PPEM;$/;"	m	struct:TT_Header_
MAX	inc/fitz.h	133;"	d
MAXBITS	src/filt_lzwd.c	/^	MAXBITS = 12,$/;"	e	enum:__anon12	file:
MAXC	src/filt_predict.c	/^enum { MAXC = 32 };$/;"	e	enum:__anon11	file:
MAXKEYLEN	src/base_hash.c	/^enum { MAXKEYLEN = 48 };$/;"	e	enum:__anon13	file:
MAXLENGTH	src/filt_lzwd.c	/^	MAXLENGTH = 4097$/;"	e	enum:__anon12	file:
MAXRES	inc/mypdf.h	8;"	d
MIN	inc/fitz.h	132;"	d
MINBITS	src/filt_lzwd.c	/^	MINBITS = 9,$/;"	e	enum:__anon12	file:
MINCHO	src/pdf_fontfile.c	/^enum { MINCHO, GOTHIC };$/;"	e	enum:__anon9	file:
MINRES	inc/mypdf.h	7;"	d
M_PI	inc/fitz.h	53;"	d
M_SQRT2	inc/fitz.h	57;"	d
Mac_Style	freetype/tttables.h	/^    FT_UShort  Mac_Style;$/;"	m	struct:TT_Header_
Magic_Number	freetype/tttables.h	/^    FT_Long    Magic_Number;$/;"	m	struct:TT_Header_
Maskx	src/base_string.c	/^	Maskx = (1<<Bitx)-1,	\/* 0011 1111 *\/$/;"	e	enum:__anon2	file:
Modified	freetype/tttables.h	/^    FT_Long    Modified[2];$/;"	m	struct:TT_Header_
NULL	freetype/internal/ftobjs.h	61;"	d
NUMCODES	src/filt_lzwd.c	/^	NUMCODES = (1 << MAXBITS),$/;"	e	enum:__anon12	file:
NumKernPair	freetype/internal/t1types.h	/^    FT_UInt        NumKernPair;$/;"	m	struct:AFM_FontInfoRec_
NumTrackKern	freetype/internal/t1types.h	/^    FT_UInt        NumTrackKern;$/;"	m	struct:AFM_FontInfoRec_
O_BINARY	inc/fitz.h	47;"	d
Offset	freetype/internal/tttypes.h	/^    FT_ULong  Offset;        \/* table file offset         *\/$/;"	m	struct:WOFF_TableRec_
Offset	freetype/internal/tttypes.h	/^    FT_ULong  Offset;     \/* table file offset *\/$/;"	m	struct:TT_TableRec_
OrigLength	freetype/internal/tttypes.h	/^    FT_ULong  OrigLength;    \/* uncompressed table length *\/$/;"	m	struct:WOFF_TableRec_
OrigOffset	freetype/internal/tttypes.h	/^    FT_ULong  OrigOffset;    \/* uncompressed table file offset *\/$/;"	m	struct:WOFF_TableRec_
P	src/filt_faxd.c	/^	P = -4,$/;"	e	enum:__anon5	file:
PDF_CMAP_MULTI	inc/pdf.h	/^enum { PDF_CMAP_SINGLE, PDF_CMAP_RANGE, PDF_CMAP_TABLE, PDF_CMAP_MULTI };$/;"	e	enum:__anon30
PDF_CMAP_RANGE	inc/pdf.h	/^enum { PDF_CMAP_SINGLE, PDF_CMAP_RANGE, PDF_CMAP_TABLE, PDF_CMAP_MULTI };$/;"	e	enum:__anon30
PDF_CMAP_SINGLE	inc/pdf.h	/^enum { PDF_CMAP_SINGLE, PDF_CMAP_RANGE, PDF_CMAP_TABLE, PDF_CMAP_MULTI };$/;"	e	enum:__anon30
PDF_CMAP_TABLE	inc/pdf.h	/^enum { PDF_CMAP_SINGLE, PDF_CMAP_RANGE, PDF_CMAP_TABLE, PDF_CMAP_MULTI };$/;"	e	enum:__anon30
PDF_CRYPT_AESV2	inc/pdf.h	/^	PDF_CRYPT_AESV2,$/;"	e	enum:__anon29
PDF_CRYPT_AESV3	inc/pdf.h	/^	PDF_CRYPT_AESV3,$/;"	e	enum:__anon29
PDF_CRYPT_NONE	inc/pdf.h	/^	PDF_CRYPT_NONE,$/;"	e	enum:__anon29
PDF_CRYPT_RC4	inc/pdf.h	/^	PDF_CRYPT_RC4,$/;"	e	enum:__anon29
PDF_CRYPT_UNKNOWN	inc/pdf.h	/^	PDF_CRYPT_UNKNOWN,$/;"	e	enum:__anon29
PDF_DEFAULT_PERM_FLAGS	inc/pdf.h	63;"	d
PDF_LACTION	inc/pdf.h	/^	PDF_LACTION,$/;"	e	enum:pdf_linkkind_e
PDF_LFONT	src/pdf_debug.c	/^	PDF_LFONT = 4,$/;"	e	enum:__anon14	file:
PDF_LGOTO	inc/pdf.h	/^	PDF_LGOTO = 0,$/;"	e	enum:pdf_linkkind_e
PDF_LIMAGE	src/pdf_debug.c	/^	PDF_LIMAGE = 8,$/;"	e	enum:__anon14	file:
PDF_LLAUNCH	inc/pdf.h	/^	PDF_LLAUNCH,$/;"	e	enum:pdf_linkkind_e
PDF_LNAMED	inc/pdf.h	/^	PDF_LNAMED,$/;"	e	enum:pdf_linkkind_e
PDF_LPAGE	src/pdf_debug.c	/^	PDF_LPAGE = 32$/;"	e	enum:__anon14	file:
PDF_LRSRC	src/pdf_debug.c	/^	PDF_LRSRC = 2,$/;"	e	enum:__anon14	file:
PDF_LSHADE	src/pdf_debug.c	/^	PDF_LSHADE = 16,$/;"	e	enum:__anon14	file:
PDF_LURI	inc/pdf.h	/^	PDF_LURI,$/;"	e	enum:pdf_linkkind_e
PDF_LXREF	src/pdf_debug.c	/^	PDF_LXREF = 1,$/;"	e	enum:__anon14	file:
PDF_MCOLOR	inc/pdf.h	/^	PDF_MCOLOR,$/;"	e	enum:__anon33
PDF_MFILL	inc/pdf.h	/^	PDF_MFILL,$/;"	e	enum:__anon32
PDF_MNONE	inc/pdf.h	/^	PDF_MNONE,$/;"	e	enum:__anon33
PDF_MPATTERN	inc/pdf.h	/^	PDF_MPATTERN,$/;"	e	enum:__anon33
PDF_MSHADE	inc/pdf.h	/^	PDF_MSHADE,$/;"	e	enum:__anon33
PDF_MSTROKE	inc/pdf.h	/^	PDF_MSTROKE,$/;"	e	enum:__anon32
PDF_NTOKENS	inc/pdf.h	/^	PDF_NTOKENS$/;"	e	enum:__anon28
PDF_PERM_ACCESSIBILITY	inc/pdf.h	60;"	d
PDF_PERM_ASSEMBLE	inc/pdf.h	61;"	d
PDF_PERM_CHANGE	inc/pdf.h	56;"	d
PDF_PERM_COPY	inc/pdf.h	57;"	d
PDF_PERM_FILL_FORM	inc/pdf.h	59;"	d
PDF_PERM_HIGH_RES_PRINT	inc/pdf.h	62;"	d
PDF_PERM_NOTES	inc/pdf.h	58;"	d
PDF_PERM_PRINT	inc/pdf.h	55;"	d
PDF_TCARRAY	inc/pdf.h	/^	PDF_TOARRAY, PDF_TCARRAY,$/;"	e	enum:__anon28
PDF_TCBRACE	inc/pdf.h	/^	PDF_TOBRACE, PDF_TCBRACE,$/;"	e	enum:__anon28
PDF_TCDICT	inc/pdf.h	/^	PDF_TODICT, PDF_TCDICT,$/;"	e	enum:__anon28
PDF_TENDOBJ	inc/pdf.h	/^	PDF_TOBJ, PDF_TENDOBJ,$/;"	e	enum:__anon28
PDF_TENDSTREAM	inc/pdf.h	/^	PDF_TSTREAM, PDF_TENDSTREAM,$/;"	e	enum:__anon28
PDF_TEOF	inc/pdf.h	/^	PDF_TERROR, PDF_TEOF,$/;"	e	enum:__anon28
PDF_TERROR	inc/pdf.h	/^	PDF_TERROR, PDF_TEOF,$/;"	e	enum:__anon28
PDF_TFALSE	inc/pdf.h	/^	PDF_TR, PDF_TTRUE, PDF_TFALSE, PDF_TNULL,$/;"	e	enum:__anon28
PDF_TINT	inc/pdf.h	/^	PDF_TNAME, PDF_TINT, PDF_TREAL, PDF_TSTRING, PDF_TKEYWORD,$/;"	e	enum:__anon28
PDF_TKEYWORD	inc/pdf.h	/^	PDF_TNAME, PDF_TINT, PDF_TREAL, PDF_TSTRING, PDF_TKEYWORD,$/;"	e	enum:__anon28
PDF_TNAME	inc/pdf.h	/^	PDF_TNAME, PDF_TINT, PDF_TREAL, PDF_TSTRING, PDF_TKEYWORD,$/;"	e	enum:__anon28
PDF_TNULL	inc/pdf.h	/^	PDF_TR, PDF_TTRUE, PDF_TFALSE, PDF_TNULL,$/;"	e	enum:__anon28
PDF_TOARRAY	inc/pdf.h	/^	PDF_TOARRAY, PDF_TCARRAY,$/;"	e	enum:__anon28
PDF_TOBJ	inc/pdf.h	/^	PDF_TOBJ, PDF_TENDOBJ,$/;"	e	enum:__anon28
PDF_TOBRACE	inc/pdf.h	/^	PDF_TOBRACE, PDF_TCBRACE,$/;"	e	enum:__anon28
PDF_TODICT	inc/pdf.h	/^	PDF_TODICT, PDF_TCDICT,$/;"	e	enum:__anon28
PDF_TR	inc/pdf.h	/^	PDF_TR, PDF_TTRUE, PDF_TFALSE, PDF_TNULL,$/;"	e	enum:__anon28
PDF_TREAL	inc/pdf.h	/^	PDF_TNAME, PDF_TINT, PDF_TREAL, PDF_TSTRING, PDF_TKEYWORD,$/;"	e	enum:__anon28
PDF_TSTARTXREF	inc/pdf.h	/^	PDF_TXREF, PDF_TTRAILER, PDF_TSTARTXREF,$/;"	e	enum:__anon28
PDF_TSTREAM	inc/pdf.h	/^	PDF_TSTREAM, PDF_TENDSTREAM,$/;"	e	enum:__anon28
PDF_TSTRING	inc/pdf.h	/^	PDF_TNAME, PDF_TINT, PDF_TREAL, PDF_TSTRING, PDF_TKEYWORD,$/;"	e	enum:__anon28
PDF_TTRAILER	inc/pdf.h	/^	PDF_TXREF, PDF_TTRAILER, PDF_TSTARTXREF,$/;"	e	enum:__anon28
PDF_TTRUE	inc/pdf.h	/^	PDF_TR, PDF_TTRUE, PDF_TFALSE, PDF_TNULL,$/;"	e	enum:__anon28
PDF_TXREF	inc/pdf.h	/^	PDF_TXREF, PDF_TTRAILER, PDF_TSTARTXREF,$/;"	e	enum:__anon28
PSAUX_H_	freetype/internal/psaux.h	21;"	d
PSAux_Interface	freetype/internal/psaux.h	/^  typedef PSAux_ServiceRec   PSAux_Interface;$/;"	t
PSAux_Service	freetype/internal/psaux.h	/^  } PSAux_ServiceRec, *PSAux_Service;$/;"	t	typeref:struct:PSAux_ServiceRec_
PSAux_ServiceRec	freetype/internal/psaux.h	/^  } PSAux_ServiceRec, *PSAux_Service;$/;"	t	typeref:struct:PSAux_ServiceRec_
PSAux_ServiceRec_	freetype/internal/psaux.h	/^  typedef struct  PSAux_ServiceRec_$/;"	s
PSHINTS_H_	freetype/internal/pshints.h	22;"	d
PSH_Globals	freetype/internal/pshints.h	/^  typedef struct PSH_GlobalsRec_*  PSH_Globals;$/;"	t	typeref:struct:PSH_GlobalsRec_
PSH_Globals_DestroyFunc	freetype/internal/pshints.h	/^  (*PSH_Globals_DestroyFunc)( PSH_Globals  globals );$/;"	t
PSH_Globals_Funcs	freetype/internal/pshints.h	/^  } PSH_Globals_FuncsRec, *PSH_Globals_Funcs;$/;"	t	typeref:struct:PSH_Globals_FuncsRec_
PSH_Globals_FuncsRec	freetype/internal/pshints.h	/^  } PSH_Globals_FuncsRec, *PSH_Globals_Funcs;$/;"	t	typeref:struct:PSH_Globals_FuncsRec_
PSH_Globals_FuncsRec_	freetype/internal/pshints.h	/^  typedef struct  PSH_Globals_FuncsRec_$/;"	s
PSH_Globals_NewFunc	freetype/internal/pshints.h	/^  (*PSH_Globals_NewFunc)( FT_Memory     memory,$/;"	t
PSH_Globals_SetScaleFunc	freetype/internal/pshints.h	/^  (*PSH_Globals_SetScaleFunc)( PSH_Globals  globals,$/;"	t
PSHinter_Interface	freetype/internal/pshints.h	/^  } PSHinter_Interface;$/;"	t	typeref:struct:PSHinter_Interface_
PSHinter_Interface_	freetype/internal/pshints.h	/^  typedef struct  PSHinter_Interface_$/;"	s
PSHinter_Service	freetype/internal/pshints.h	/^  typedef PSHinter_Interface*  PSHinter_Service;$/;"	t
PS_Adobe_Std_StringsFunc	freetype/internal/services/svpscmap.h	/^  (*PS_Adobe_Std_StringsFunc)( FT_UInt  string_index );$/;"	t
PS_Blend	freetype/t1tables.h	/^  } PS_BlendRec, *PS_Blend;$/;"	t	typeref:struct:PS_BlendRec_
PS_BlendRec	freetype/t1tables.h	/^  } PS_BlendRec, *PS_Blend;$/;"	t	typeref:struct:PS_BlendRec_
PS_BlendRec_	freetype/t1tables.h	/^  typedef struct  PS_BlendRec_$/;"	s
PS_DICT_BLUE_FUZZ	freetype/t1tables.h	/^    PS_DICT_BLUE_FUZZ,              \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_SCALE	freetype/t1tables.h	/^    PS_DICT_BLUE_SCALE,             \/* FT_Fixed   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_SHIFT	freetype/t1tables.h	/^    PS_DICT_BLUE_SHIFT,             \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_VALUE	freetype/t1tables.h	/^    PS_DICT_BLUE_VALUE,             \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_CHAR_STRING	freetype/t1tables.h	/^    PS_DICT_CHAR_STRING,            \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_CHAR_STRING_KEY	freetype/t1tables.h	/^    PS_DICT_CHAR_STRING_KEY,        \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ENCODING_ENTRY	freetype/t1tables.h	/^    PS_DICT_ENCODING_ENTRY,         \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ENCODING_TYPE	freetype/t1tables.h	/^    PS_DICT_ENCODING_TYPE,          \/* T1_EncodingType *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_BLUE	freetype/t1tables.h	/^    PS_DICT_FAMILY_BLUE,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_NAME	freetype/t1tables.h	/^    PS_DICT_FAMILY_NAME,            \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_OTHER_BLUE	freetype/t1tables.h	/^    PS_DICT_FAMILY_OTHER_BLUE,      \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_BBOX	freetype/t1tables.h	/^    PS_DICT_FONT_BBOX,              \/* FT_Fixed        *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_MATRIX	freetype/t1tables.h	/^    PS_DICT_FONT_MATRIX,            \/* FT_Fixed        *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_NAME	freetype/t1tables.h	/^    PS_DICT_FONT_NAME,              \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_TYPE	freetype/t1tables.h	/^    PS_DICT_FONT_TYPE,              \/* FT_Byte         *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FORCE_BOLD	freetype/t1tables.h	/^    PS_DICT_FORCE_BOLD,             \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FS_TYPE	freetype/t1tables.h	/^    PS_DICT_FS_TYPE,                \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FULL_NAME	freetype/t1tables.h	/^    PS_DICT_FULL_NAME,              \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_IS_FIXED_PITCH	freetype/t1tables.h	/^    PS_DICT_IS_FIXED_PITCH,         \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ITALIC_ANGLE	freetype/t1tables.h	/^    PS_DICT_ITALIC_ANGLE,           \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_LANGUAGE_GROUP	freetype/t1tables.h	/^    PS_DICT_LANGUAGE_GROUP,         \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_LEN_IV	freetype/t1tables.h	/^    PS_DICT_LEN_IV,                 \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_MAX	freetype/t1tables.h	/^    PS_DICT_MAX = PS_DICT_ITALIC_ANGLE$/;"	e	enum:PS_Dict_Keys_
PS_DICT_MIN_FEATURE	freetype/t1tables.h	/^    PS_DICT_MIN_FEATURE,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NOTICE	freetype/t1tables.h	/^    PS_DICT_NOTICE,                 \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_BLUE_VALUES	freetype/t1tables.h	/^    PS_DICT_NUM_BLUE_VALUES,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_CHAR_STRINGS	freetype/t1tables.h	/^    PS_DICT_NUM_CHAR_STRINGS,       \/* FT_Int          *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_FAMILY_BLUES	freetype/t1tables.h	/^    PS_DICT_NUM_FAMILY_BLUES,       \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_FAMILY_OTHER_BLUES	freetype/t1tables.h	/^    PS_DICT_NUM_FAMILY_OTHER_BLUES, \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_OTHER_BLUES	freetype/t1tables.h	/^    PS_DICT_NUM_OTHER_BLUES,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_STEM_SNAP_H	freetype/t1tables.h	/^    PS_DICT_NUM_STEM_SNAP_H,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_STEM_SNAP_V	freetype/t1tables.h	/^    PS_DICT_NUM_STEM_SNAP_V,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_SUBRS	freetype/t1tables.h	/^    PS_DICT_NUM_SUBRS,              \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_OTHER_BLUE	freetype/t1tables.h	/^    PS_DICT_OTHER_BLUE,             \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_PAINT_TYPE	freetype/t1tables.h	/^    PS_DICT_PAINT_TYPE,             \/* FT_Byte         *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_PASSWORD	freetype/t1tables.h	/^    PS_DICT_PASSWORD,               \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_RND_STEM_UP	freetype/t1tables.h	/^    PS_DICT_RND_STEM_UP,            \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STD_HW	freetype/t1tables.h	/^    PS_DICT_STD_HW,                 \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STD_VW	freetype/t1tables.h	/^    PS_DICT_STD_VW,                 \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STEM_SNAP_H	freetype/t1tables.h	/^    PS_DICT_STEM_SNAP_H,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STEM_SNAP_V	freetype/t1tables.h	/^    PS_DICT_STEM_SNAP_V,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_SUBR	freetype/t1tables.h	/^    PS_DICT_SUBR,                   \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNDERLINE_POSITION	freetype/t1tables.h	/^    PS_DICT_UNDERLINE_POSITION,     \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNDERLINE_THICKNESS	freetype/t1tables.h	/^    PS_DICT_UNDERLINE_THICKNESS,    \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNIQUE_ID	freetype/t1tables.h	/^    PS_DICT_UNIQUE_ID,              \/* FT_Int          *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_VERSION	freetype/t1tables.h	/^    PS_DICT_VERSION,                \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_WEIGHT	freetype/t1tables.h	/^    PS_DICT_WEIGHT,                 \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DesignMap	freetype/t1tables.h	/^  } PS_DesignMapRec, *PS_DesignMap;$/;"	t	typeref:struct:PS_DesignMap_
PS_DesignMapRec	freetype/t1tables.h	/^  } PS_DesignMapRec, *PS_DesignMap;$/;"	t	typeref:struct:PS_DesignMap_
PS_DesignMap_	freetype/t1tables.h	/^  typedef struct  PS_DesignMap_$/;"	s
PS_Dict_Keys	freetype/t1tables.h	/^  } PS_Dict_Keys;$/;"	t	typeref:enum:PS_Dict_Keys_
PS_Dict_Keys_	freetype/t1tables.h	/^  typedef enum  PS_Dict_Keys_$/;"	g
PS_FontExtraRec	freetype/internal/t1types.h	/^  } PS_FontExtraRec;$/;"	t	typeref:struct:PS_FontExtraRec_
PS_FontExtraRec_	freetype/internal/t1types.h	/^  typedef struct  PS_FontExtraRec_$/;"	s
PS_FontInfo	freetype/t1tables.h	/^  typedef struct PS_FontInfoRec_*  PS_FontInfo;$/;"	t	typeref:struct:PS_FontInfoRec_
PS_FontInfoRec	freetype/t1tables.h	/^  } PS_FontInfoRec;$/;"	t	typeref:struct:PS_FontInfoRec_
PS_FontInfoRec_	freetype/t1tables.h	/^  typedef struct  PS_FontInfoRec_$/;"	s
PS_FreeGlyphNameFunc	freetype/internal/services/svpscmap.h	/^  (*PS_FreeGlyphNameFunc)( FT_Pointer  data,$/;"	t
PS_GetFontExtraFunc	freetype/internal/services/svpsinfo.h	/^  (*PS_GetFontExtraFunc)( FT_Face           face,$/;"	t
PS_GetFontInfoFunc	freetype/internal/services/svpsinfo.h	/^  (*PS_GetFontInfoFunc)( FT_Face          face,$/;"	t
PS_GetFontPrivateFunc	freetype/internal/services/svpsinfo.h	/^  (*PS_GetFontPrivateFunc)( FT_Face         face,$/;"	t
PS_GetFontValueFunc	freetype/internal/services/svpsinfo.h	/^  (*PS_GetFontValueFunc)( FT_Face       face,$/;"	t
PS_GetGlyphNameFunc	freetype/internal/services/svpscmap.h	/^  (*PS_GetGlyphNameFunc)( FT_Pointer  data,$/;"	t
PS_HasGlyphNamesFunc	freetype/internal/services/svpsinfo.h	/^  (*PS_HasGlyphNamesFunc)( FT_Face  face );$/;"	t
PS_Macintosh_NameFunc	freetype/internal/services/svpscmap.h	/^  (*PS_Macintosh_NameFunc)( FT_UInt  name_index );$/;"	t
PS_Parser	freetype/internal/psaux.h	/^  typedef struct PS_ParserRec_*  PS_Parser;$/;"	t	typeref:struct:PS_ParserRec_
PS_ParserRec	freetype/internal/psaux.h	/^  } PS_ParserRec;$/;"	t	typeref:struct:PS_ParserRec_
PS_ParserRec_	freetype/internal/psaux.h	/^  typedef struct  PS_ParserRec_$/;"	s
PS_Parser_Funcs	freetype/internal/psaux.h	/^  typedef const struct PS_Parser_FuncsRec_*  PS_Parser_Funcs;$/;"	t	typeref:struct:PS_Parser_FuncsRec_
PS_Parser_FuncsRec	freetype/internal/psaux.h	/^  } PS_Parser_FuncsRec;$/;"	t	typeref:struct:PS_Parser_FuncsRec_
PS_Parser_FuncsRec_	freetype/internal/psaux.h	/^  typedef struct  PS_Parser_FuncsRec_$/;"	s
PS_Private	freetype/t1tables.h	/^  typedef struct PS_PrivateRec_*  PS_Private;$/;"	t	typeref:struct:PS_PrivateRec_
PS_PrivateRec	freetype/t1tables.h	/^  } PS_PrivateRec;$/;"	t	typeref:struct:PS_PrivateRec_
PS_PrivateRec_	freetype/t1tables.h	/^  typedef struct  PS_PrivateRec_$/;"	s
PS_Table	freetype/internal/psaux.h	/^  typedef struct PS_TableRec_*              PS_Table;$/;"	t	typeref:struct:PS_TableRec_
PS_TableRec	freetype/internal/psaux.h	/^  } PS_TableRec;$/;"	t	typeref:struct:PS_TableRec_
PS_TableRec_	freetype/internal/psaux.h	/^  typedef struct  PS_TableRec_$/;"	s
PS_Table_Funcs	freetype/internal/psaux.h	/^  typedef const struct PS_Table_FuncsRec_*  PS_Table_Funcs;$/;"	t	typeref:struct:PS_Table_FuncsRec_
PS_Table_FuncsRec	freetype/internal/psaux.h	/^  } PS_Table_FuncsRec;$/;"	t	typeref:struct:PS_Table_FuncsRec_
PS_Table_FuncsRec_	freetype/internal/psaux.h	/^  typedef struct  PS_Table_FuncsRec_$/;"	s
PS_UniMap	freetype/internal/services/svpscmap.h	/^  } PS_UniMap;$/;"	t	typeref:struct:PS_UniMap_
PS_UniMap_	freetype/internal/services/svpscmap.h	/^  typedef struct  PS_UniMap_$/;"	s
PS_Unicode_ValueFunc	freetype/internal/services/svpscmap.h	/^  (*PS_Unicode_ValueFunc)( const char*  glyph_name );$/;"	t
PS_Unicodes	freetype/internal/services/svpscmap.h	/^  typedef struct PS_UnicodesRec_*  PS_Unicodes;$/;"	t	typeref:struct:PS_UnicodesRec_
PS_UnicodesRec	freetype/internal/services/svpscmap.h	/^  } PS_UnicodesRec;$/;"	t	typeref:struct:PS_UnicodesRec_
PS_UnicodesRec_	freetype/internal/services/svpscmap.h	/^  typedef struct  PS_UnicodesRec_$/;"	s
PS_Unicodes_CharIndexFunc	freetype/internal/services/svpscmap.h	/^  (*PS_Unicodes_CharIndexFunc)( PS_Unicodes  unicodes,$/;"	t
PS_Unicodes_CharNextFunc	freetype/internal/services/svpscmap.h	/^  (*PS_Unicodes_CharNextFunc)( PS_Unicodes  unicodes,$/;"	t
PS_Unicodes_InitFunc	freetype/internal/services/svpscmap.h	/^  (*PS_Unicodes_InitFunc)( FT_Memory             memory,$/;"	t
Pitch	freetype/tttables.h	/^    FT_UShort  Pitch;$/;"	m	struct:TT_PCLT_
RANGE_0_9	src/pdf_lex.c	18;"	d	file:
RANGE_A_F	src/pdf_lex.c	23;"	d	file:
RANGE_a_f	src/pdf_lex.c	21;"	d	file:
ROUND_F26DOT6	freetype/internal/ftcalc.h	409;"	d
Reserved	freetype/tttables.h	/^    FT_Byte    Reserved;$/;"	m	struct:TT_PCLT_
Reserved	freetype/tttables.h	/^    FT_Short   Reserved[4];$/;"	m	struct:TT_HoriHeader_
Reserved	freetype/tttables.h	/^    FT_Short   Reserved[4];$/;"	m	struct:TT_VertHeader_
Rune1	src/base_string.c	/^	Rune1 = (1<<(Bit1+0*Bitx))-1, \/* 0000 0000 0111 1111 *\/$/;"	e	enum:__anon2	file:
Rune2	src/base_string.c	/^	Rune2 = (1<<(Bit2+1*Bitx))-1, \/* 0000 0111 1111 1111 *\/$/;"	e	enum:__anon2	file:
Rune3	src/base_string.c	/^	Rune3 = (1<<(Bit3+2*Bitx))-1, \/* 1111 1111 1111 1111 *\/$/;"	e	enum:__anon2	file:
Rune4	src/base_string.c	/^	Rune4 = (1<<(Bit4+3*Bitx))-1, \/* 0001 1111 1111 1111 1111 1111 *\/$/;"	e	enum:__anon2	file:
Runeerror	src/base_string.c	/^	Runeerror = 0xFFFD, \/* decoding error in UTF *\/$/;"	e	enum:__anon1	file:
Runemax	src/base_string.c	/^	Runemax = 0x10FFFF, \/* maximum rune value *\/$/;"	e	enum:__anon1	file:
Runeself	src/base_string.c	/^	Runeself = 0x80, \/* rune and UTF sequences are the same (<) *\/$/;"	e	enum:__anon1	file:
Runesync	src/base_string.c	/^	Runesync = 0x80, \/* cannot represent part of a UTF sequence (<) *\/$/;"	e	enum:__anon1	file:
SDONE	src/filt_faxd.c	/^	SDONE		\/* all done *\/$/;"	e	enum:__anon6	file:
SEOL	src/filt_faxd.c	/^	SEOL,		\/* at eol, needs output buffer space *\/$/;"	e	enum:__anon6	file:
SFNT_H_	freetype/internal/sfnt.h	20;"	d
SFNT_Header	freetype/internal/tttypes.h	/^  } SFNT_HeaderRec, *SFNT_Header;$/;"	t	typeref:struct:SFNT_HeaderRec_
SFNT_HeaderRec	freetype/internal/tttypes.h	/^  } SFNT_HeaderRec, *SFNT_Header;$/;"	t	typeref:struct:SFNT_HeaderRec_
SFNT_HeaderRec_	freetype/internal/tttypes.h	/^  typedef struct  SFNT_HeaderRec_$/;"	s
SFNT_Interface	freetype/internal/sfnt.h	/^  } SFNT_Interface;$/;"	t	typeref:struct:SFNT_Interface_
SFNT_Interface_	freetype/internal/sfnt.h	/^  typedef struct  SFNT_Interface_$/;"	s
SFNT_Service	freetype/internal/sfnt.h	/^  typedef SFNT_Interface*   SFNT_Service;$/;"	t
SH1	src/filt_faxd.c	/^	SH1, SH2,	\/* in H part 1 and 2 (both makeup and terminating codes) *\/$/;"	e	enum:__anon6	file:
SH2	src/filt_faxd.c	/^	SH1, SH2,	\/* in H part 1 and 2 (both makeup and terminating codes) *\/$/;"	e	enum:__anon6	file:
SMAKEUP	src/filt_faxd.c	/^	SMAKEUP,	\/* got a 1d makeup code, waiting for terminating code *\/$/;"	e	enum:__anon6	file:
SNORMAL	src/filt_faxd.c	/^	SNORMAL,	\/* neutral state, waiting for any code *\/$/;"	e	enum:__anon6	file:
SOURCE	Makefile	/^SOURCE = $(wildcard src\/*.c) $(wildcard utils\/*.c) $(wildcard src\/*.cpp) $(wildcard utils\/*.cpp)  $/;"	m
SVBDF_H_	freetype/internal/services/svbdf.h	20;"	d
SVCID_H_	freetype/internal/services/svcid.h	20;"	d
SVFNTFMT_H_	freetype/internal/services/svfntfmt.h	20;"	d
SVGLDICT_H_	freetype/internal/services/svgldict.h	20;"	d
SVGXVAL_H_	freetype/internal/services/svgxval.h	29;"	d
SVKERN_H_	freetype/internal/services/svkern.h	20;"	d
SVMETRIC_H_	freetype/internal/services/svmetric.h	20;"	d
SVMM_H_	freetype/internal/services/svmm.h	20;"	d
SVOTVAL_H_	freetype/internal/services/svotval.h	20;"	d
SVPFR_H_	freetype/internal/services/svpfr.h	20;"	d
SVPOSTNM_H_	freetype/internal/services/svpostnm.h	20;"	d
SVPROP_H_	freetype/internal/services/svprop.h	20;"	d
SVPSCMAP_H_	freetype/internal/services/svpscmap.h	20;"	d
SVPSINFO_H_	freetype/internal/services/svpsinfo.h	20;"	d
SVSFNT_H_	freetype/internal/services/svsfnt.h	20;"	d
SVTTCMAP_H_	freetype/internal/services/svttcmap.h	23;"	d
SVTTENG_H_	freetype/internal/services/svtteng.h	20;"	d
SVTTGLYF_H_	freetype/internal/services/svttglyf.h	19;"	d
SVWINFNT_H_	freetype/internal/services/svwinfnt.h	20;"	d
SerifStyle	freetype/tttables.h	/^    FT_Byte    SerifStyle;$/;"	m	struct:TT_PCLT_
StrokeWeight	freetype/tttables.h	/^    FT_Char    StrokeWeight;$/;"	m	struct:TT_PCLT_
Style	freetype/tttables.h	/^    FT_UShort  Style;$/;"	m	struct:TT_PCLT_
SymbolSet	freetype/tttables.h	/^    FT_UShort  SymbolSet;$/;"	m	struct:TT_PCLT_
T1	src/base_string.c	/^	T1 = ((1<<(Bit1+1))-1) ^ 0xFF, \/* 0000 0000 *\/$/;"	e	enum:__anon2	file:
T1TABLES_H_	freetype/t1tables.h	21;"	d
T1TYPES_H_	freetype/internal/t1types.h	21;"	d
T1_BLEND_BLUE_SCALE	freetype/t1tables.h	/^    T1_BLEND_BLUE_SCALE,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_BLUE_SHIFT	freetype/t1tables.h	/^    T1_BLEND_BLUE_SHIFT,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_BLUE_VALUES	freetype/t1tables.h	/^    T1_BLEND_BLUE_VALUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FAMILY_BLUES	freetype/t1tables.h	/^    T1_BLEND_FAMILY_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FAMILY_OTHER_BLUES	freetype/t1tables.h	/^    T1_BLEND_FAMILY_OTHER_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FORCE_BOLD	freetype/t1tables.h	/^    T1_BLEND_FORCE_BOLD,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_ITALIC_ANGLE	freetype/t1tables.h	/^    T1_BLEND_ITALIC_ANGLE,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_MAX	freetype/t1tables.h	/^    T1_BLEND_MAX    \/* do not remove *\/$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_OTHER_BLUES	freetype/t1tables.h	/^    T1_BLEND_OTHER_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STANDARD_HEIGHT	freetype/t1tables.h	/^    T1_BLEND_STANDARD_HEIGHT,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STANDARD_WIDTH	freetype/t1tables.h	/^    T1_BLEND_STANDARD_WIDTH,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STEM_SNAP_HEIGHTS	freetype/t1tables.h	/^    T1_BLEND_STEM_SNAP_HEIGHTS,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STEM_SNAP_WIDTHS	freetype/t1tables.h	/^    T1_BLEND_STEM_SNAP_WIDTHS,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_UNDERLINE_POSITION	freetype/t1tables.h	/^    T1_BLEND_UNDERLINE_POSITION = 0,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_UNDERLINE_THICKNESS	freetype/t1tables.h	/^    T1_BLEND_UNDERLINE_THICKNESS,$/;"	e	enum:T1_Blend_Flags_
T1_Blend	freetype/t1tables.h	/^  typedef PS_BlendRec  T1_Blend;$/;"	t
T1_Blend_Flags	freetype/t1tables.h	/^  } T1_Blend_Flags;$/;"	t	typeref:enum:T1_Blend_Flags_
T1_Blend_Flags_	freetype/t1tables.h	/^  typedef enum  T1_Blend_Flags_$/;"	g
T1_Builder	freetype/internal/psaux.h	/^  typedef struct T1_BuilderRec_*  T1_Builder;$/;"	t	typeref:struct:T1_BuilderRec_
T1_BuilderRec	freetype/internal/psaux.h	/^  } T1_BuilderRec;$/;"	t	typeref:struct:T1_BuilderRec_
T1_BuilderRec_	freetype/internal/psaux.h	/^  typedef struct  T1_BuilderRec_$/;"	s
T1_Builder_Add_Contour_Func	freetype/internal/psaux.h	/^  (*T1_Builder_Add_Contour_Func)( T1_Builder  builder );$/;"	t
T1_Builder_Add_Point1_Func	freetype/internal/psaux.h	/^  (*T1_Builder_Add_Point1_Func)( T1_Builder  builder,$/;"	t
T1_Builder_Add_Point_Func	freetype/internal/psaux.h	/^  (*T1_Builder_Add_Point_Func)( T1_Builder  builder,$/;"	t
T1_Builder_Check_Points_Func	freetype/internal/psaux.h	/^  (*T1_Builder_Check_Points_Func)( T1_Builder  builder,$/;"	t
T1_Builder_Close_Contour_Func	freetype/internal/psaux.h	/^  (*T1_Builder_Close_Contour_Func)( T1_Builder  builder );$/;"	t
T1_Builder_Funcs	freetype/internal/psaux.h	/^  typedef const struct T1_Builder_FuncsRec_*  T1_Builder_Funcs;$/;"	t	typeref:struct:T1_Builder_FuncsRec_
T1_Builder_FuncsRec	freetype/internal/psaux.h	/^  } T1_Builder_FuncsRec;$/;"	t	typeref:struct:T1_Builder_FuncsRec_
T1_Builder_FuncsRec_	freetype/internal/psaux.h	/^  typedef struct  T1_Builder_FuncsRec_$/;"	s
T1_Builder_Start_Point_Func	freetype/internal/psaux.h	/^  (*T1_Builder_Start_Point_Func)( T1_Builder  builder,$/;"	t
T1_CMap_Classes	freetype/internal/psaux.h	/^  typedef const struct T1_CMap_ClassesRec_*  T1_CMap_Classes;$/;"	t	typeref:struct:T1_CMap_ClassesRec_
T1_CMap_ClassesRec	freetype/internal/psaux.h	/^  } T1_CMap_ClassesRec;$/;"	t	typeref:struct:T1_CMap_ClassesRec_
T1_CMap_ClassesRec_	freetype/internal/psaux.h	/^  typedef struct T1_CMap_ClassesRec_$/;"	s
T1_CONFIG_OPTION_NO_AFM	freetype/config/ftoption.h	789;"	d
T1_CONFIG_OPTION_NO_MM_SUPPORT	freetype/config/ftoption.h	798;"	d
T1_Decoder	freetype/internal/psaux.h	/^  typedef struct T1_DecoderRec_*              T1_Decoder;$/;"	t	typeref:struct:T1_DecoderRec_
T1_DecoderRec	freetype/internal/psaux.h	/^  } T1_DecoderRec;$/;"	t	typeref:struct:T1_DecoderRec_
T1_DecoderRec_	freetype/internal/psaux.h	/^  typedef struct  T1_DecoderRec_$/;"	s
T1_Decoder_Callback	freetype/internal/psaux.h	/^  (*T1_Decoder_Callback)( T1_Decoder  decoder,$/;"	t
T1_Decoder_Funcs	freetype/internal/psaux.h	/^  typedef const struct T1_Decoder_FuncsRec_*  T1_Decoder_Funcs;$/;"	t	typeref:struct:T1_Decoder_FuncsRec_
T1_Decoder_FuncsRec	freetype/internal/psaux.h	/^  } T1_Decoder_FuncsRec;$/;"	t	typeref:struct:T1_Decoder_FuncsRec_
T1_Decoder_FuncsRec_	freetype/internal/psaux.h	/^  typedef struct  T1_Decoder_FuncsRec_$/;"	s
T1_Decoder_Zone	freetype/internal/psaux.h	/^  } T1_Decoder_ZoneRec, *T1_Decoder_Zone;$/;"	t	typeref:struct:T1_Decoder_ZoneRec_
T1_Decoder_ZoneRec	freetype/internal/psaux.h	/^  } T1_Decoder_ZoneRec, *T1_Decoder_Zone;$/;"	t	typeref:struct:T1_Decoder_ZoneRec_
T1_Decoder_ZoneRec_	freetype/internal/psaux.h	/^  typedef struct  T1_Decoder_ZoneRec_$/;"	s
T1_DesignMap	freetype/t1tables.h	/^  typedef PS_DesignMapRec  T1_DesignMap;$/;"	t
T1_ENCODING_TYPE_ARRAY	freetype/t1tables.h	/^    T1_ENCODING_TYPE_ARRAY,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_EXPERT	freetype/t1tables.h	/^    T1_ENCODING_TYPE_EXPERT$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_ISOLATIN1	freetype/t1tables.h	/^    T1_ENCODING_TYPE_ISOLATIN1,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_NONE	freetype/t1tables.h	/^    T1_ENCODING_TYPE_NONE = 0,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_STANDARD	freetype/t1tables.h	/^    T1_ENCODING_TYPE_STANDARD,$/;"	e	enum:T1_EncodingType_
T1_Encoding	freetype/internal/t1types.h	/^  } T1_EncodingRec, *T1_Encoding;$/;"	t	typeref:struct:T1_EncodingRecRec_
T1_EncodingRec	freetype/internal/t1types.h	/^  } T1_EncodingRec, *T1_Encoding;$/;"	t	typeref:struct:T1_EncodingRecRec_
T1_EncodingRecRec_	freetype/internal/t1types.h	/^  typedef struct  T1_EncodingRecRec_$/;"	s
T1_EncodingType	freetype/t1tables.h	/^  } T1_EncodingType;$/;"	t	typeref:enum:T1_EncodingType_
T1_EncodingType_	freetype/t1tables.h	/^  typedef enum  T1_EncodingType_$/;"	g
T1_FIELD_BBOX	freetype/internal/psaux.h	309;"	d
T1_FIELD_BOOL	freetype/internal/psaux.h	290;"	d
T1_FIELD_CALLBACK	freetype/internal/psaux.h	329;"	d
T1_FIELD_DICT_FONTDICT	freetype/internal/psaux.h	244;"	d
T1_FIELD_DICT_PRIVATE	freetype/internal/psaux.h	245;"	d
T1_FIELD_FIXED	freetype/internal/psaux.h	296;"	d
T1_FIELD_FIXED_1000	freetype/internal/psaux.h	299;"	d
T1_FIELD_FIXED_TABLE	freetype/internal/psaux.h	317;"	d
T1_FIELD_FIXED_TABLE2	freetype/internal/psaux.h	325;"	d
T1_FIELD_KEY	freetype/internal/psaux.h	306;"	d
T1_FIELD_LOCATION_BBOX	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_BBOX,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_BLEND	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_BLEND,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_CID_INFO	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_CID_INFO,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FACE	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_FACE,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_DICT	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_FONT_DICT,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_EXTRA	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_FONT_EXTRA,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_INFO	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_FONT_INFO,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_LOADER	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_LOADER,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_MAX	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_MAX$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_PRIVATE	freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_PRIVATE,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_NUM	freetype/internal/psaux.h	293;"	d
T1_FIELD_NUM_TABLE	freetype/internal/psaux.h	313;"	d
T1_FIELD_NUM_TABLE2	freetype/internal/psaux.h	321;"	d
T1_FIELD_STRING	freetype/internal/psaux.h	303;"	d
T1_FIELD_TYPE_BBOX	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_BBOX,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_BOOL	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_BOOL,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_CALLBACK	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_CALLBACK,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_FIXED,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED_1000	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_FIXED_1000,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED_ARRAY	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_FIXED_ARRAY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_INTEGER	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_INTEGER,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_INTEGER_ARRAY	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_INTEGER_ARRAY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_KEY	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_KEY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_MAX	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_MAX$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_MM_BBOX	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_MM_BBOX,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_NONE	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_NONE = 0,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_STRING	freetype/internal/psaux.h	/^    T1_FIELD_TYPE_STRING,$/;"	e	enum:T1_FieldType_
T1_Face	freetype/internal/t1types.h	/^  typedef struct T1_FaceRec_*   T1_Face;$/;"	t	typeref:struct:T1_FaceRec_
T1_FaceRec	freetype/internal/t1types.h	/^  } T1_FaceRec;$/;"	t	typeref:struct:T1_FaceRec_
T1_FaceRec_	freetype/internal/t1types.h	/^  typedef struct  T1_FaceRec_$/;"	s
T1_Field	freetype/internal/psaux.h	/^  typedef struct T1_FieldRec_*   T1_Field;$/;"	t	typeref:struct:T1_FieldRec_
T1_FieldLocation	freetype/internal/psaux.h	/^  } T1_FieldLocation;$/;"	t	typeref:enum:T1_FieldLocation_
T1_FieldLocation_	freetype/internal/psaux.h	/^  typedef enum  T1_FieldLocation_$/;"	g
T1_FieldRec	freetype/internal/psaux.h	/^  } T1_FieldRec;$/;"	t	typeref:struct:T1_FieldRec_
T1_FieldRec_	freetype/internal/psaux.h	/^  typedef struct  T1_FieldRec_$/;"	s
T1_FieldType	freetype/internal/psaux.h	/^  } T1_FieldType;$/;"	t	typeref:enum:T1_FieldType_
T1_FieldType_	freetype/internal/psaux.h	/^  typedef enum  T1_FieldType_$/;"	g
T1_Field_ParseFunc	freetype/internal/psaux.h	/^  (*T1_Field_ParseFunc)( FT_Face     face,$/;"	t
T1_Font	freetype/internal/t1types.h	/^  } T1_FontRec, *T1_Font;$/;"	t	typeref:struct:T1_FontRec_
T1_FontInfo	freetype/t1tables.h	/^  typedef PS_FontInfoRec  T1_FontInfo;$/;"	t
T1_FontRec	freetype/internal/t1types.h	/^  } T1_FontRec, *T1_Font;$/;"	t	typeref:struct:T1_FontRec_
T1_FontRec_	freetype/internal/t1types.h	/^  typedef struct  T1_FontRec_$/;"	s
T1_Hints	freetype/internal/pshints.h	/^  typedef struct T1_HintsRec_*  T1_Hints;$/;"	t	typeref:struct:T1_HintsRec_
T1_Hints_ApplyFunc	freetype/internal/pshints.h	/^  (*T1_Hints_ApplyFunc)( T1_Hints        hints,$/;"	t
T1_Hints_CloseFunc	freetype/internal/pshints.h	/^  (*T1_Hints_CloseFunc)( T1_Hints  hints,$/;"	t
T1_Hints_Funcs	freetype/internal/pshints.h	/^  typedef const struct T1_Hints_FuncsRec_*  T1_Hints_Funcs;$/;"	t	typeref:struct:T1_Hints_FuncsRec_
T1_Hints_FuncsRec	freetype/internal/pshints.h	/^  } T1_Hints_FuncsRec;$/;"	t	typeref:struct:T1_Hints_FuncsRec_
T1_Hints_FuncsRec_	freetype/internal/pshints.h	/^  typedef struct  T1_Hints_FuncsRec_$/;"	s
T1_Hints_OpenFunc	freetype/internal/pshints.h	/^  (*T1_Hints_OpenFunc)( T1_Hints  hints );$/;"	t
T1_Hints_ResetFunc	freetype/internal/pshints.h	/^  (*T1_Hints_ResetFunc)( T1_Hints  hints,$/;"	t
T1_Hints_SetStem3Func	freetype/internal/pshints.h	/^  (*T1_Hints_SetStem3Func)( T1_Hints   hints,$/;"	t
T1_Hints_SetStemFunc	freetype/internal/pshints.h	/^  (*T1_Hints_SetStemFunc)( T1_Hints   hints,$/;"	t
T1_MAX_CHARSTRINGS_OPERANDS	freetype/config/ftoption.h	779;"	d
T1_MAX_DICT_DEPTH	freetype/config/ftoption.h	761;"	d
T1_MAX_MM_AXIS	freetype/t1tables.h	279;"	d
T1_MAX_MM_DESIGNS	freetype/t1tables.h	276;"	d
T1_MAX_MM_MAP_POINTS	freetype/t1tables.h	282;"	d
T1_MAX_SUBRS_CALLS	freetype/config/ftoption.h	769;"	d
T1_NEW_CALLBACK_FIELD	freetype/internal/psaux.h	259;"	d
T1_NEW_SIMPLE_FIELD	freetype/internal/psaux.h	249;"	d
T1_NEW_TABLE_FIELD	freetype/internal/psaux.h	268;"	d
T1_NEW_TABLE_FIELD2	freetype/internal/psaux.h	279;"	d
T1_ParseState	freetype/internal/psaux.h	/^  } T1_ParseState;$/;"	t	typeref:enum:T1_ParseState_
T1_ParseState_	freetype/internal/psaux.h	/^  typedef enum  T1_ParseState_$/;"	g
T1_Parse_Have_Moveto	freetype/internal/psaux.h	/^    T1_Parse_Have_Moveto,$/;"	e	enum:T1_ParseState_
T1_Parse_Have_Path	freetype/internal/psaux.h	/^    T1_Parse_Have_Path$/;"	e	enum:T1_ParseState_
T1_Parse_Have_Width	freetype/internal/psaux.h	/^    T1_Parse_Have_Width,$/;"	e	enum:T1_ParseState_
T1_Parse_Start	freetype/internal/psaux.h	/^    T1_Parse_Start,$/;"	e	enum:T1_ParseState_
T1_Private	freetype/t1tables.h	/^  typedef PS_PrivateRec  T1_Private;$/;"	t
T1_TOKEN_TYPE_ANY	freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_ANY,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_ARRAY	freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_ARRAY,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_KEY	freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_KEY, \/* aka `name' *\/$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_MAX	freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_MAX$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_NONE	freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_NONE = 0,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_STRING	freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_STRING,$/;"	e	enum:T1_TokenType_
T1_Token	freetype/internal/psaux.h	/^  typedef struct T1_TokenRec_*   T1_Token;$/;"	t	typeref:struct:T1_TokenRec_
T1_TokenRec	freetype/internal/psaux.h	/^  } T1_TokenRec;$/;"	t	typeref:struct:T1_TokenRec_
T1_TokenRec_	freetype/internal/psaux.h	/^  typedef struct  T1_TokenRec_$/;"	s
T1_TokenType	freetype/internal/psaux.h	/^  } T1_TokenType;$/;"	t	typeref:enum:T1_TokenType_
T1_TokenType_	freetype/internal/psaux.h	/^  typedef enum  T1_TokenType_$/;"	g
T2	src/base_string.c	/^	T2 = ((1<<(Bit2+1))-1) ^ 0xFF, \/* 1100 0000 *\/$/;"	e	enum:__anon2	file:
T2_Hints	freetype/internal/pshints.h	/^  typedef struct T2_HintsRec_*  T2_Hints;$/;"	t	typeref:struct:T2_HintsRec_
T2_Hints_ApplyFunc	freetype/internal/pshints.h	/^  (*T2_Hints_ApplyFunc)( T2_Hints        hints,$/;"	t
T2_Hints_CloseFunc	freetype/internal/pshints.h	/^  (*T2_Hints_CloseFunc)( T2_Hints  hints,$/;"	t
T2_Hints_CounterFunc	freetype/internal/pshints.h	/^  (*T2_Hints_CounterFunc)( T2_Hints        hints,$/;"	t
T2_Hints_Funcs	freetype/internal/pshints.h	/^  typedef const struct T2_Hints_FuncsRec_*  T2_Hints_Funcs;$/;"	t	typeref:struct:T2_Hints_FuncsRec_
T2_Hints_FuncsRec	freetype/internal/pshints.h	/^  } T2_Hints_FuncsRec;$/;"	t	typeref:struct:T2_Hints_FuncsRec_
T2_Hints_FuncsRec_	freetype/internal/pshints.h	/^  typedef struct  T2_Hints_FuncsRec_$/;"	s
T2_Hints_MaskFunc	freetype/internal/pshints.h	/^  (*T2_Hints_MaskFunc)( T2_Hints        hints,$/;"	t
T2_Hints_OpenFunc	freetype/internal/pshints.h	/^  (*T2_Hints_OpenFunc)( T2_Hints  hints );$/;"	t
T2_Hints_StemsFunc	freetype/internal/pshints.h	/^  (*T2_Hints_StemsFunc)( T2_Hints   hints,$/;"	t
T3	src/base_string.c	/^	T3 = ((1<<(Bit3+1))-1) ^ 0xFF, \/* 1110 0000 *\/$/;"	e	enum:__anon2	file:
T4	src/base_string.c	/^	T4 = ((1<<(Bit4+1))-1) ^ 0xFF, \/* 1111 0000 *\/$/;"	e	enum:__anon2	file:
T5	src/base_string.c	/^	T5 = ((1<<(Bit5+1))-1) ^ 0xFF, \/* 1111 1000 *\/$/;"	e	enum:__anon2	file:
TARGET	Makefile	/^TARGET = main$/;"	m
TBEGINBFCHAR	src/pdf_cmap_parse.c	/^	TBEGINBFCHAR,$/;"	e	enum:__anon15	file:
TBEGINBFRANGE	src/pdf_cmap_parse.c	/^	TBEGINBFRANGE,$/;"	e	enum:__anon15	file:
TBEGINCIDCHAR	src/pdf_cmap_parse.c	/^	TBEGINCIDCHAR,$/;"	e	enum:__anon15	file:
TBEGINCIDRANGE	src/pdf_cmap_parse.c	/^	TBEGINCIDRANGE,$/;"	e	enum:__anon15	file:
TBEGINCODESPACERANGE	src/pdf_cmap_parse.c	/^	TBEGINCODESPACERANGE,$/;"	e	enum:__anon15	file:
TENDBFCHAR	src/pdf_cmap_parse.c	/^	TENDBFCHAR,$/;"	e	enum:__anon15	file:
TENDBFRANGE	src/pdf_cmap_parse.c	/^	TENDBFRANGE,$/;"	e	enum:__anon15	file:
TENDCIDCHAR	src/pdf_cmap_parse.c	/^	TENDCIDCHAR,$/;"	e	enum:__anon15	file:
TENDCIDRANGE	src/pdf_cmap_parse.c	/^	TENDCIDRANGE,$/;"	e	enum:__anon15	file:
TENDCMAP	src/pdf_cmap_parse.c	/^	TENDCMAP$/;"	e	enum:__anon15	file:
TENDCODESPACERANGE	src/pdf_cmap_parse.c	/^	TENDCODESPACERANGE,$/;"	e	enum:__anon15	file:
TRUE	freetype/internal/ftobjs.h	53;"	d
TRUETYPE	src/pdf_font.c	/^enum { UNKNOWN, TYPE1, TRUETYPE };$/;"	e	enum:__anon16	file:
TTAGS_H_	freetype/tttags.h	20;"	d
TTAG_BASE	freetype/tttags.h	37;"	d
TTAG_BDF	freetype/tttags.h	39;"	d
TTAG_CBDT	freetype/tttags.h	43;"	d
TTAG_CBLC	freetype/tttags.h	44;"	d
TTAG_CFF	freetype/tttags.h	45;"	d
TTAG_CFF2	freetype/tttags.h	46;"	d
TTAG_CID	freetype/tttags.h	47;"	d
TTAG_DSIG	freetype/tttags.h	51;"	d
TTAG_EBDT	freetype/tttags.h	52;"	d
TTAG_EBLC	freetype/tttags.h	53;"	d
TTAG_EBSC	freetype/tttags.h	54;"	d
TTAG_FOND	freetype/tttags.h	56;"	d
TTAG_GDEF	freetype/tttags.h	60;"	d
TTAG_GPOS	freetype/tttags.h	62;"	d
TTAG_GSUB	freetype/tttags.h	63;"	d
TTAG_HVAR	freetype/tttags.h	65;"	d
TTAG_JSTF	freetype/tttags.h	70;"	d
TTAG_LTSH	freetype/tttags.h	75;"	d
TTAG_LWFN	freetype/tttags.h	76;"	d
TTAG_MATH	freetype/tttags.h	77;"	d
TTAG_META	freetype/tttags.h	79;"	d
TTAG_MMFX	freetype/tttags.h	80;"	d
TTAG_MMSD	freetype/tttags.h	81;"	d
TTAG_MVAR	freetype/tttags.h	84;"	d
TTAG_OS2	freetype/tttags.h	87;"	d
TTAG_OTTO	freetype/tttags.h	88;"	d
TTAG_PCLT	freetype/tttags.h	89;"	d
TTAG_POST	freetype/tttags.h	90;"	d
TTAG_SING	freetype/tttags.h	96;"	d
TTAG_TYP1	freetype/tttags.h	101;"	d
TTAG_VDMX	freetype/tttags.h	103;"	d
TTAG_VVAR	freetype/tttags.h	106;"	d
TTAG_avar	freetype/tttags.h	36;"	d
TTAG_bdat	freetype/tttags.h	38;"	d
TTAG_bhed	freetype/tttags.h	40;"	d
TTAG_bloc	freetype/tttags.h	41;"	d
TTAG_bsln	freetype/tttags.h	42;"	d
TTAG_cmap	freetype/tttags.h	48;"	d
TTAG_cvar	freetype/tttags.h	49;"	d
TTAG_cvt	freetype/tttags.h	50;"	d
TTAG_feat	freetype/tttags.h	55;"	d
TTAG_fpgm	freetype/tttags.h	57;"	d
TTAG_fvar	freetype/tttags.h	58;"	d
TTAG_gasp	freetype/tttags.h	59;"	d
TTAG_glyf	freetype/tttags.h	61;"	d
TTAG_gvar	freetype/tttags.h	64;"	d
TTAG_hdmx	freetype/tttags.h	66;"	d
TTAG_head	freetype/tttags.h	67;"	d
TTAG_hhea	freetype/tttags.h	68;"	d
TTAG_hmtx	freetype/tttags.h	69;"	d
TTAG_just	freetype/tttags.h	71;"	d
TTAG_kern	freetype/tttags.h	72;"	d
TTAG_lcar	freetype/tttags.h	73;"	d
TTAG_loca	freetype/tttags.h	74;"	d
TTAG_maxp	freetype/tttags.h	78;"	d
TTAG_mort	freetype/tttags.h	82;"	d
TTAG_morx	freetype/tttags.h	83;"	d
TTAG_name	freetype/tttags.h	85;"	d
TTAG_opbd	freetype/tttags.h	86;"	d
TTAG_post	freetype/tttags.h	91;"	d
TTAG_prep	freetype/tttags.h	92;"	d
TTAG_prop	freetype/tttags.h	93;"	d
TTAG_sbix	freetype/tttags.h	94;"	d
TTAG_sfnt	freetype/tttags.h	95;"	d
TTAG_trak	freetype/tttags.h	97;"	d
TTAG_true	freetype/tttags.h	98;"	d
TTAG_ttc	freetype/tttags.h	99;"	d
TTAG_ttcf	freetype/tttags.h	100;"	d
TTAG_typ1	freetype/tttags.h	102;"	d
TTAG_vhea	freetype/tttags.h	104;"	d
TTAG_vmtx	freetype/tttags.h	105;"	d
TTAG_wOFF	freetype/tttags.h	107;"	d
TTC_HeaderRec	freetype/internal/tttypes.h	/^  } TTC_HeaderRec;$/;"	t	typeref:struct:TTC_HeaderRec_
TTC_HeaderRec_	freetype/internal/tttypes.h	/^  typedef struct  TTC_HeaderRec_$/;"	s
TTNAMEID_H_	freetype/ttnameid.h	20;"	d
TTTABLES_H_	freetype/tttables.h	21;"	d
TTTYPES_H_	freetype/internal/tttypes.h	21;"	d
TTUNPAT_H_	freetype/ttunpat.h	23;"	d
TT_ADOBE_ID_CUSTOM	freetype/ttnameid.h	283;"	d
TT_ADOBE_ID_EXPERT	freetype/ttnameid.h	282;"	d
TT_ADOBE_ID_LATIN_1	freetype/ttnameid.h	284;"	d
TT_ADOBE_ID_STANDARD	freetype/ttnameid.h	281;"	d
TT_APPLE_ID_DEFAULT	freetype/ttnameid.h	128;"	d
TT_APPLE_ID_FULL_UNICODE	freetype/ttnameid.h	134;"	d
TT_APPLE_ID_ISO_10646	freetype/ttnameid.h	130;"	d
TT_APPLE_ID_UNICODE_1_1	freetype/ttnameid.h	129;"	d
TT_APPLE_ID_UNICODE_2_0	freetype/ttnameid.h	131;"	d
TT_APPLE_ID_UNICODE_32	freetype/ttnameid.h	132;"	d
TT_APPLE_ID_VARIANT_SELECTOR	freetype/ttnameid.h	133;"	d
TT_BDF	freetype/internal/tttypes.h	/^  } TT_BDFRec, *TT_BDF;$/;"	t	typeref:struct:TT_BDFRec_
TT_BDFRec	freetype/internal/tttypes.h	/^  } TT_BDFRec, *TT_BDF;$/;"	t	typeref:struct:TT_BDFRec_
TT_BDFRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_BDFRec_$/;"	s
TT_CMapInfo	freetype/internal/services/svttcmap.h	/^  } TT_CMapInfo;$/;"	t	typeref:struct:TT_CMapInfo_
TT_CMapInfo_	freetype/internal/services/svttcmap.h	/^  typedef struct  TT_CMapInfo_$/;"	s
TT_CMap_Info_GetFunc	freetype/internal/services/svttcmap.h	/^  (*TT_CMap_Info_GetFunc)( FT_CharMap    charmap,$/;"	t
TT_CONFIG_CMAP_FORMAT_0	freetype/config/ftoption.h	597;"	d
TT_CONFIG_CMAP_FORMAT_10	freetype/config/ftoption.h	602;"	d
TT_CONFIG_CMAP_FORMAT_12	freetype/config/ftoption.h	603;"	d
TT_CONFIG_CMAP_FORMAT_13	freetype/config/ftoption.h	604;"	d
TT_CONFIG_CMAP_FORMAT_14	freetype/config/ftoption.h	605;"	d
TT_CONFIG_CMAP_FORMAT_2	freetype/config/ftoption.h	598;"	d
TT_CONFIG_CMAP_FORMAT_4	freetype/config/ftoption.h	599;"	d
TT_CONFIG_CMAP_FORMAT_6	freetype/config/ftoption.h	600;"	d
TT_CONFIG_CMAP_FORMAT_8	freetype/config/ftoption.h	601;"	d
TT_CONFIG_OPTION_BDF	freetype/config/ftoption.h	725;"	d
TT_CONFIG_OPTION_BYTECODE_INTERPRETER	freetype/config/ftoption.h	627;"	d
TT_CONFIG_OPTION_COMPONENT_OFFSET_SCALED	freetype/config/ftoption.h	707;"	d
TT_CONFIG_OPTION_EMBEDDED_BITMAPS	freetype/config/ftoption.h	559;"	d
TT_CONFIG_OPTION_GX_VAR_SUPPORT	freetype/config/ftoption.h	717;"	d
TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES	freetype/config/ftoption.h	742;"	d
TT_CONFIG_OPTION_POSTSCRIPT_NAMES	freetype/config/ftoption.h	574;"	d
TT_CONFIG_OPTION_SFNT_NAMES	freetype/config/ftoption.h	588;"	d
TT_CONFIG_OPTION_SUBPIXEL_HINTING	freetype/config/ftoption.h	687;"	d
TT_Done_Face_Func	freetype/internal/sfnt.h	/^  (*TT_Done_Face_Func)( TT_Face  face );$/;"	t
TT_ExecContext	freetype/internal/tttypes.h	/^  typedef struct TT_ExecContextRec_*  TT_ExecContext;$/;"	t	typeref:struct:TT_ExecContextRec_
TT_FACE_FLAG_VAR_BSB	freetype/internal/tttypes.h	1120;"	d
TT_FACE_FLAG_VAR_FVAR	freetype/internal/tttypes.h	1110;"	d
TT_FACE_FLAG_VAR_HADVANCE	freetype/internal/tttypes.h	1113;"	d
TT_FACE_FLAG_VAR_LSB	freetype/internal/tttypes.h	1114;"	d
TT_FACE_FLAG_VAR_MVAR	freetype/internal/tttypes.h	1124;"	d
TT_FACE_FLAG_VAR_RSB	freetype/internal/tttypes.h	1115;"	d
TT_FACE_FLAG_VAR_TSB	freetype/internal/tttypes.h	1119;"	d
TT_FACE_FLAG_VAR_VADVANCE	freetype/internal/tttypes.h	1118;"	d
TT_FACE_FLAG_VAR_VORG	freetype/internal/tttypes.h	1121;"	d
TT_Face	freetype/internal/tttypes.h	/^  typedef struct TT_FaceRec_*  TT_Face;$/;"	t	typeref:struct:TT_FaceRec_
TT_FaceRec	freetype/internal/tttypes.h	/^  } TT_FaceRec;$/;"	t	typeref:struct:TT_FaceRec_
TT_FaceRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_FaceRec_$/;"	s
TT_Face_GetKerningFunc	freetype/internal/sfnt.h	/^  (*TT_Face_GetKerningFunc)( TT_Face  face,$/;"	t
TT_Find_SBit_Image_Func	freetype/internal/sfnt.h	/^  (*TT_Find_SBit_Image_Func)( TT_Face          face,$/;"	t
TT_Free_Table_Func	freetype/internal/sfnt.h	/^  (*TT_Free_Table_Func)( TT_Face  face );$/;"	t
TT_GASP_DOGRAY	freetype/internal/tttypes.h	391;"	d
TT_GASP_GRIDFIT	freetype/internal/tttypes.h	390;"	d
TT_GaspRange	freetype/internal/tttypes.h	/^  } TT_GaspRangeRec, *TT_GaspRange;$/;"	t	typeref:struct:TT_GaspRangeRec_
TT_GaspRangeRec	freetype/internal/tttypes.h	/^  } TT_GaspRangeRec, *TT_GaspRange;$/;"	t	typeref:struct:TT_GaspRangeRec_
TT_GaspRangeRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_GaspRangeRec_$/;"	s
TT_GaspRec	freetype/internal/tttypes.h	/^  } TT_GaspRec;$/;"	t	typeref:struct:TT_Gasp_
TT_Gasp_	freetype/internal/tttypes.h	/^  typedef struct  TT_Gasp_$/;"	s
TT_Get_Metrics_Func	freetype/internal/sfnt.h	/^  (*TT_Get_Metrics_Func)( TT_Face     face,$/;"	t
TT_Get_Name_Func	freetype/internal/sfnt.h	/^  (*TT_Get_Name_Func)( TT_Face      face,$/;"	t
TT_Get_Name_ID_Func	freetype/internal/sfnt.h	/^  (*TT_Get_Name_ID_Func)( TT_Face    face,$/;"	t
TT_Get_PS_Name_Func	freetype/internal/sfnt.h	/^  (*TT_Get_PS_Name_Func)( TT_Face      face,$/;"	t
TT_Glyf_GetLocationFunc	freetype/internal/services/svttglyf.h	/^  (*TT_Glyf_GetLocationFunc)( FT_Face    face,$/;"	t
TT_GlyphZone	freetype/internal/tttypes.h	/^  } TT_GlyphZoneRec, *TT_GlyphZone;$/;"	t	typeref:struct:TT_GlyphZoneRec_
TT_GlyphZoneRec	freetype/internal/tttypes.h	/^  } TT_GlyphZoneRec, *TT_GlyphZone;$/;"	t	typeref:struct:TT_GlyphZoneRec_
TT_GlyphZoneRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_GlyphZoneRec_$/;"	s
TT_Header	freetype/tttables.h	/^  } TT_Header;$/;"	t	typeref:struct:TT_Header_
TT_Header_	freetype/tttables.h	/^  typedef struct  TT_Header_$/;"	s
TT_HoriHeader	freetype/tttables.h	/^  } TT_HoriHeader;$/;"	t	typeref:struct:TT_HoriHeader_
TT_HoriHeader_	freetype/tttables.h	/^  typedef struct  TT_HoriHeader_$/;"	s
TT_INTERPRETER_VERSION_35	freetype/ftttdrv.h	315;"	d
TT_INTERPRETER_VERSION_38	freetype/ftttdrv.h	316;"	d
TT_INTERPRETER_VERSION_40	freetype/ftttdrv.h	317;"	d
TT_ISO_ID_10646	freetype/ttnameid.h	204;"	d
TT_ISO_ID_7BIT_ASCII	freetype/ttnameid.h	203;"	d
TT_ISO_ID_8859_1	freetype/ttnameid.h	205;"	d
TT_Init_Face_Func	freetype/internal/sfnt.h	/^  (*TT_Init_Face_Func)( FT_Stream      stream,$/;"	t
TT_Interpreter	freetype/internal/tttypes.h	/^  (*TT_Interpreter)( void*  exec_context );$/;"	t
TT_LangTag	freetype/internal/tttypes.h	/^  } TT_LangTagRec, *TT_LangTag;$/;"	t	typeref:struct:TT_LangTagRec_
TT_LangTagRec	freetype/internal/tttypes.h	/^  } TT_LangTagRec, *TT_LangTag;$/;"	t	typeref:struct:TT_LangTagRec_
TT_LangTagRec_	freetype/internal/tttypes.h	/^  typedef struct TT_LangTagRec_$/;"	s
TT_Load_Any_Func	freetype/internal/sfnt.h	/^  (*TT_Load_Any_Func)( TT_Face    face,$/;"	t
TT_Load_Face_Func	freetype/internal/sfnt.h	/^  (*TT_Load_Face_Func)( FT_Stream      stream,$/;"	t
TT_Load_Metrics_Func	freetype/internal/sfnt.h	/^  (*TT_Load_Metrics_Func)( TT_Face    face,$/;"	t
TT_Load_SBit_Image_Func	freetype/internal/sfnt.h	/^  (*TT_Load_SBit_Image_Func)( TT_Face              face,$/;"	t
TT_Load_SBit_Metrics_Func	freetype/internal/sfnt.h	/^  (*TT_Load_SBit_Metrics_Func)( FT_Stream        stream,$/;"	t
TT_Load_Strike_Metrics_Func	freetype/internal/sfnt.h	/^  (*TT_Load_Strike_Metrics_Func)( TT_Face           face,$/;"	t
TT_Load_Table_Func	freetype/internal/sfnt.h	/^  (*TT_Load_Table_Func)( TT_Face    face,$/;"	t
TT_Loader	freetype/internal/tttypes.h	/^  typedef struct TT_LoaderRec_*  TT_Loader;$/;"	t	typeref:struct:TT_LoaderRec_
TT_LoaderRec	freetype/internal/tttypes.h	/^  } TT_LoaderRec;$/;"	t	typeref:struct:TT_LoaderRec_
TT_LoaderRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_LoaderRec_$/;"	s
TT_Loader_EndGlyphFunc	freetype/internal/tttypes.h	/^  (*TT_Loader_EndGlyphFunc)( TT_Loader  loader );$/;"	t
TT_Loader_GotoTableFunc	freetype/internal/tttypes.h	/^  (*TT_Loader_GotoTableFunc)( TT_Face    face,$/;"	t
TT_Loader_ReadGlyphFunc	freetype/internal/tttypes.h	/^  (*TT_Loader_ReadGlyphFunc)( TT_Loader  loader );$/;"	t
TT_Loader_StartGlyphFunc	freetype/internal/tttypes.h	/^  (*TT_Loader_StartGlyphFunc)( TT_Loader  loader,$/;"	t
TT_LongMetrics	freetype/internal/tttypes.h	/^  } TT_LongMetricsRec, *TT_LongMetrics;$/;"	t	typeref:struct:TT_LongMetricsRec_
TT_LongMetricsRec	freetype/internal/tttypes.h	/^  } TT_LongMetricsRec, *TT_LongMetrics;$/;"	t	typeref:struct:TT_LongMetricsRec_
TT_LongMetricsRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_LongMetricsRec_$/;"	s
TT_MAC_ID_ARABIC	freetype/ttnameid.h	151;"	d
TT_MAC_ID_ARMENIAN	freetype/ttnameid.h	171;"	d
TT_MAC_ID_BENGALI	freetype/ttnameid.h	160;"	d
TT_MAC_ID_BURMESE	freetype/ttnameid.h	166;"	d
TT_MAC_ID_DEVANAGARI	freetype/ttnameid.h	156;"	d
TT_MAC_ID_GEEZ	freetype/ttnameid.h	176;"	d
TT_MAC_ID_GEORGIAN	freetype/ttnameid.h	170;"	d
TT_MAC_ID_GREEK	freetype/ttnameid.h	153;"	d
TT_MAC_ID_GUJARATI	freetype/ttnameid.h	158;"	d
TT_MAC_ID_GURMUKHI	freetype/ttnameid.h	157;"	d
TT_MAC_ID_HEBREW	freetype/ttnameid.h	152;"	d
TT_MAC_ID_JAPANESE	freetype/ttnameid.h	148;"	d
TT_MAC_ID_KANNADA	freetype/ttnameid.h	163;"	d
TT_MAC_ID_KHMER	freetype/ttnameid.h	167;"	d
TT_MAC_ID_KOREAN	freetype/ttnameid.h	150;"	d
TT_MAC_ID_LAOTIAN	freetype/ttnameid.h	169;"	d
TT_MAC_ID_MALAYALAM	freetype/ttnameid.h	164;"	d
TT_MAC_ID_MALDIVIAN	freetype/ttnameid.h	172;"	d
TT_MAC_ID_MONGOLIAN	freetype/ttnameid.h	175;"	d
TT_MAC_ID_ORIYA	freetype/ttnameid.h	159;"	d
TT_MAC_ID_ROMAN	freetype/ttnameid.h	147;"	d
TT_MAC_ID_RSYMBOL	freetype/ttnameid.h	155;"	d
TT_MAC_ID_RUSSIAN	freetype/ttnameid.h	154;"	d
TT_MAC_ID_SIMPLIFIED_CHINESE	freetype/ttnameid.h	173;"	d
TT_MAC_ID_SINDHI	freetype/ttnameid.h	179;"	d
TT_MAC_ID_SINHALESE	freetype/ttnameid.h	165;"	d
TT_MAC_ID_SLAVIC	freetype/ttnameid.h	177;"	d
TT_MAC_ID_TAMIL	freetype/ttnameid.h	161;"	d
TT_MAC_ID_TELUGU	freetype/ttnameid.h	162;"	d
TT_MAC_ID_THAI	freetype/ttnameid.h	168;"	d
TT_MAC_ID_TIBETAN	freetype/ttnameid.h	174;"	d
TT_MAC_ID_TRADITIONAL_CHINESE	freetype/ttnameid.h	149;"	d
TT_MAC_ID_UNINTERP	freetype/ttnameid.h	180;"	d
TT_MAC_ID_VIETNAMESE	freetype/ttnameid.h	178;"	d
TT_MAC_LANGID_AFRIKAANS	freetype/ttnameid.h	415;"	d
TT_MAC_LANGID_ALBANIAN	freetype/ttnameid.h	339;"	d
TT_MAC_LANGID_AMHARIC	freetype/ttnameid.h	390;"	d
TT_MAC_LANGID_ARABIC	freetype/ttnameid.h	315;"	d
TT_MAC_LANGID_ARMENIAN	freetype/ttnameid.h	355;"	d
TT_MAC_LANGID_ASSAMESE	freetype/ttnameid.h	373;"	d
TT_MAC_LANGID_AYMARA	freetype/ttnameid.h	406;"	d
TT_MAC_LANGID_AZERBAIJANI	freetype/ttnameid.h	352;"	d
TT_MAC_LANGID_AZERBAIJANI_ARABIC_SCRIPT	freetype/ttnameid.h	354;"	d
TT_MAC_LANGID_AZERBAIJANI_CYRILLIC_SCRIPT	freetype/ttnameid.h	353;"	d
TT_MAC_LANGID_AZERBAIJANI_ROMAN_SCRIPT	freetype/ttnameid.h	424;"	d
TT_MAC_LANGID_BASQUE	freetype/ttnameid.h	401;"	d
TT_MAC_LANGID_BENGALI	freetype/ttnameid.h	372;"	d
TT_MAC_LANGID_BRETON	freetype/ttnameid.h	416;"	d
TT_MAC_LANGID_BULGARIAN	freetype/ttnameid.h	347;"	d
TT_MAC_LANGID_BURMESE	freetype/ttnameid.h	382;"	d
TT_MAC_LANGID_BYELORUSSIAN	freetype/ttnameid.h	349;"	d
TT_MAC_LANGID_CATALAN	freetype/ttnameid.h	402;"	d
TT_MAC_LANGID_CHEWA	freetype/ttnameid.h	397;"	d
TT_MAC_LANGID_CHINESE_SIMPLIFIED	freetype/ttnameid.h	336;"	d
TT_MAC_LANGID_CHINESE_TRADITIONAL	freetype/ttnameid.h	322;"	d
TT_MAC_LANGID_CROATIAN	freetype/ttnameid.h	321;"	d
TT_MAC_LANGID_CZECH	freetype/ttnameid.h	341;"	d
TT_MAC_LANGID_DANISH	freetype/ttnameid.h	310;"	d
TT_MAC_LANGID_DUTCH	freetype/ttnameid.h	307;"	d
TT_MAC_LANGID_DZONGKHA	freetype/ttnameid.h	409;"	d
TT_MAC_LANGID_ENGLISH	freetype/ttnameid.h	303;"	d
TT_MAC_LANGID_ESPERANTO	freetype/ttnameid.h	399;"	d
TT_MAC_LANGID_ESTONIAN	freetype/ttnameid.h	330;"	d
TT_MAC_LANGID_FAEROESE	freetype/ttnameid.h	333;"	d
TT_MAC_LANGID_FARSI	freetype/ttnameid.h	334;"	d
TT_MAC_LANGID_FINNISH	freetype/ttnameid.h	316;"	d
TT_MAC_LANGID_FLEMISH	freetype/ttnameid.h	337;"	d
TT_MAC_LANGID_FRENCH	freetype/ttnameid.h	304;"	d
TT_MAC_LANGID_GALICIAN	freetype/ttnameid.h	414;"	d
TT_MAC_LANGID_GALLA	freetype/ttnameid.h	392;"	d
TT_MAC_LANGID_GEORGIAN	freetype/ttnameid.h	356;"	d
TT_MAC_LANGID_GERMAN	freetype/ttnameid.h	305;"	d
TT_MAC_LANGID_GREEK	freetype/ttnameid.h	317;"	d
TT_MAC_LANGID_GREEK_POLYTONIC	freetype/ttnameid.h	422;"	d
TT_MAC_LANGID_GREELANDIC	freetype/ttnameid.h	423;"	d
TT_MAC_LANGID_GUARANI	freetype/ttnameid.h	405;"	d
TT_MAC_LANGID_GUJARATI	freetype/ttnameid.h	374;"	d
TT_MAC_LANGID_HEBREW	freetype/ttnameid.h	313;"	d
TT_MAC_LANGID_HINDI	freetype/ttnameid.h	324;"	d
TT_MAC_LANGID_HUNGARIAN	freetype/ttnameid.h	329;"	d
TT_MAC_LANGID_ICELANDIC	freetype/ttnameid.h	318;"	d
TT_MAC_LANGID_INDONESIAN	freetype/ttnameid.h	386;"	d
TT_MAC_LANGID_INUKTITUT	freetype/ttnameid.h	417;"	d
TT_MAC_LANGID_IRISH	freetype/ttnameid.h	338;"	d
TT_MAC_LANGID_IRISH_GAELIC	freetype/ttnameid.h	420;"	d
TT_MAC_LANGID_ITALIAN	freetype/ttnameid.h	306;"	d
TT_MAC_LANGID_JAPANESE	freetype/ttnameid.h	314;"	d
TT_MAC_LANGID_JAVANESE	freetype/ttnameid.h	410;"	d
TT_MAC_LANGID_KANNADA	freetype/ttnameid.h	378;"	d
TT_MAC_LANGID_KASHMIRI	freetype/ttnameid.h	366;"	d
TT_MAC_LANGID_KAZAKH	freetype/ttnameid.h	351;"	d
TT_MAC_LANGID_KHMER	freetype/ttnameid.h	383;"	d
TT_MAC_LANGID_KIRGHIZ	freetype/ttnameid.h	358;"	d
TT_MAC_LANGID_KOREAN	freetype/ttnameid.h	326;"	d
TT_MAC_LANGID_KURDISH	freetype/ttnameid.h	365;"	d
TT_MAC_LANGID_LAO	freetype/ttnameid.h	384;"	d
TT_MAC_LANGID_LATIN	freetype/ttnameid.h	403;"	d
TT_MAC_LANGID_LETTISH	freetype/ttnameid.h	331;"	d
TT_MAC_LANGID_LITHUANIAN	freetype/ttnameid.h	327;"	d
TT_MAC_LANGID_MACEDONIAN	freetype/ttnameid.h	346;"	d
TT_MAC_LANGID_MALAGASY	freetype/ttnameid.h	398;"	d
TT_MAC_LANGID_MALAYALAM	freetype/ttnameid.h	377;"	d
TT_MAC_LANGID_MALAY_ARABIC_SCRIPT	freetype/ttnameid.h	389;"	d
TT_MAC_LANGID_MALAY_ROMAN_SCRIPT	freetype/ttnameid.h	388;"	d
TT_MAC_LANGID_MALTESE	freetype/ttnameid.h	319;"	d
TT_MAC_LANGID_MANX_GAELIC	freetype/ttnameid.h	419;"	d
TT_MAC_LANGID_MARATHI	freetype/ttnameid.h	371;"	d
TT_MAC_LANGID_MOLDAVIAN	freetype/ttnameid.h	357;"	d
TT_MAC_LANGID_MONGOLIAN	freetype/ttnameid.h	361;"	d
TT_MAC_LANGID_MONGOLIAN_CYRILLIC_SCRIPT	freetype/ttnameid.h	363;"	d
TT_MAC_LANGID_MONGOLIAN_MONGOLIAN_SCRIPT	freetype/ttnameid.h	362;"	d
TT_MAC_LANGID_NEPALI	freetype/ttnameid.h	369;"	d
TT_MAC_LANGID_NORWEGIAN	freetype/ttnameid.h	312;"	d
TT_MAC_LANGID_ORIYA	freetype/ttnameid.h	376;"	d
TT_MAC_LANGID_PASHTO	freetype/ttnameid.h	364;"	d
TT_MAC_LANGID_POLISH	freetype/ttnameid.h	328;"	d
TT_MAC_LANGID_PORTUGUESE	freetype/ttnameid.h	311;"	d
TT_MAC_LANGID_PUNJABI	freetype/ttnameid.h	375;"	d
TT_MAC_LANGID_QUECHUA	freetype/ttnameid.h	404;"	d
TT_MAC_LANGID_ROMANIAN	freetype/ttnameid.h	340;"	d
TT_MAC_LANGID_RUANDA	freetype/ttnameid.h	395;"	d
TT_MAC_LANGID_RUNDI	freetype/ttnameid.h	396;"	d
TT_MAC_LANGID_RUSSIAN	freetype/ttnameid.h	335;"	d
TT_MAC_LANGID_SAAMISK	freetype/ttnameid.h	332;"	d
TT_MAC_LANGID_SANSKRIT	freetype/ttnameid.h	370;"	d
TT_MAC_LANGID_SCOTTISH_GAELIC	freetype/ttnameid.h	418;"	d
TT_MAC_LANGID_SERBIAN	freetype/ttnameid.h	345;"	d
TT_MAC_LANGID_SINDHI	freetype/ttnameid.h	367;"	d
TT_MAC_LANGID_SINHALESE	freetype/ttnameid.h	381;"	d
TT_MAC_LANGID_SLOVAK	freetype/ttnameid.h	342;"	d
TT_MAC_LANGID_SLOVENIAN	freetype/ttnameid.h	343;"	d
TT_MAC_LANGID_SOMALI	freetype/ttnameid.h	393;"	d
TT_MAC_LANGID_SPANISH	freetype/ttnameid.h	309;"	d
TT_MAC_LANGID_SUNDANESE	freetype/ttnameid.h	411;"	d
TT_MAC_LANGID_SWAHILI	freetype/ttnameid.h	394;"	d
TT_MAC_LANGID_SWEDISH	freetype/ttnameid.h	308;"	d
TT_MAC_LANGID_TAGALOG	freetype/ttnameid.h	387;"	d
TT_MAC_LANGID_TAJIKI	freetype/ttnameid.h	359;"	d
TT_MAC_LANGID_TAMIL	freetype/ttnameid.h	379;"	d
TT_MAC_LANGID_TATAR	freetype/ttnameid.h	407;"	d
TT_MAC_LANGID_TELUGU	freetype/ttnameid.h	380;"	d
TT_MAC_LANGID_THAI	freetype/ttnameid.h	325;"	d
TT_MAC_LANGID_TIBETAN	freetype/ttnameid.h	368;"	d
TT_MAC_LANGID_TIGRINYA	freetype/ttnameid.h	391;"	d
TT_MAC_LANGID_TONGAN	freetype/ttnameid.h	421;"	d
TT_MAC_LANGID_TURKISH	freetype/ttnameid.h	320;"	d
TT_MAC_LANGID_TURKMEN	freetype/ttnameid.h	360;"	d
TT_MAC_LANGID_UIGHUR	freetype/ttnameid.h	408;"	d
TT_MAC_LANGID_UKRAINIAN	freetype/ttnameid.h	348;"	d
TT_MAC_LANGID_URDU	freetype/ttnameid.h	323;"	d
TT_MAC_LANGID_UZBEK	freetype/ttnameid.h	350;"	d
TT_MAC_LANGID_VIETNAMESE	freetype/ttnameid.h	385;"	d
TT_MAC_LANGID_WELSH	freetype/ttnameid.h	400;"	d
TT_MAC_LANGID_YIDDISH	freetype/ttnameid.h	344;"	d
TT_MS_ID_BIG_5	freetype/ttnameid.h	252;"	d
TT_MS_ID_GB2312	freetype/ttnameid.h	258;"	d
TT_MS_ID_JOHAB	freetype/ttnameid.h	254;"	d
TT_MS_ID_PRC	freetype/ttnameid.h	251;"	d
TT_MS_ID_SJIS	freetype/ttnameid.h	250;"	d
TT_MS_ID_SYMBOL_CS	freetype/ttnameid.h	248;"	d
TT_MS_ID_UCS_4	freetype/ttnameid.h	255;"	d
TT_MS_ID_UNICODE_CS	freetype/ttnameid.h	249;"	d
TT_MS_ID_WANSUNG	freetype/ttnameid.h	253;"	d
TT_MS_LANGID_AFRIKAANS_SOUTH_AFRICA	freetype/ttnameid.h	577;"	d
TT_MS_LANGID_ALBANIAN_ALBANIA	freetype/ttnameid.h	552;"	d
TT_MS_LANGID_ALSATIAN_FRANCE	freetype/ttnameid.h	650;"	d
TT_MS_LANGID_AMHARIC_ETHIOPIA	freetype/ttnameid.h	625;"	d
TT_MS_LANGID_ARABIC_ALGERIA	freetype/ttnameid.h	455;"	d
TT_MS_LANGID_ARABIC_BAHRAIN	freetype/ttnameid.h	465;"	d
TT_MS_LANGID_ARABIC_EGYPT	freetype/ttnameid.h	453;"	d
TT_MS_LANGID_ARABIC_GENERAL	freetype/ttnameid.h	661;"	d
TT_MS_LANGID_ARABIC_IRAQ	freetype/ttnameid.h	452;"	d
TT_MS_LANGID_ARABIC_JORDAN	freetype/ttnameid.h	461;"	d
TT_MS_LANGID_ARABIC_KUWAIT	freetype/ttnameid.h	463;"	d
TT_MS_LANGID_ARABIC_LEBANON	freetype/ttnameid.h	462;"	d
TT_MS_LANGID_ARABIC_LIBYA	freetype/ttnameid.h	454;"	d
TT_MS_LANGID_ARABIC_MOROCCO	freetype/ttnameid.h	456;"	d
TT_MS_LANGID_ARABIC_OMAN	freetype/ttnameid.h	458;"	d
TT_MS_LANGID_ARABIC_QATAR	freetype/ttnameid.h	466;"	d
TT_MS_LANGID_ARABIC_SAUDI_ARABIA	freetype/ttnameid.h	451;"	d
TT_MS_LANGID_ARABIC_SYRIA	freetype/ttnameid.h	460;"	d
TT_MS_LANGID_ARABIC_TUNISIA	freetype/ttnameid.h	457;"	d
TT_MS_LANGID_ARABIC_UAE	freetype/ttnameid.h	464;"	d
TT_MS_LANGID_ARABIC_YEMEN	freetype/ttnameid.h	459;"	d
TT_MS_LANGID_ARMENIAN_ARMENIA	freetype/ttnameid.h	567;"	d
TT_MS_LANGID_ASSAMESE_INDIA	freetype/ttnameid.h	610;"	d
TT_MS_LANGID_AZERI_AZERBAIJAN_CYRILLIC	freetype/ttnameid.h	569;"	d
TT_MS_LANGID_AZERI_AZERBAIJAN_LATIN	freetype/ttnameid.h	568;"	d
TT_MS_LANGID_BASHKIR_RUSSIA	freetype/ttnameid.h	638;"	d
TT_MS_LANGID_BASQUE_BASQUE	freetype/ttnameid.h	570;"	d
TT_MS_LANGID_BASQUE_SPAIN	freetype/ttnameid.h	700;"	d
TT_MS_LANGID_BELARUSIAN_BELARUS	freetype/ttnameid.h	560;"	d
TT_MS_LANGID_BENGALI_BANGLADESH	freetype/ttnameid.h	602;"	d
TT_MS_LANGID_BENGALI_INDIA	freetype/ttnameid.h	601;"	d
TT_MS_LANGID_BOSNIAN_BOSNIA_HERZEGOVINA	freetype/ttnameid.h	547;"	d
TT_MS_LANGID_BOSNIAN_BOSNIA_HERZ_CYRILLIC	freetype/ttnameid.h	550;"	d
TT_MS_LANGID_BRETON_FRANCE	freetype/ttnameid.h	645;"	d
TT_MS_LANGID_BULGARIAN_BULGARIA	freetype/ttnameid.h	467;"	d
TT_MS_LANGID_BURMESE_MYANMAR	freetype/ttnameid.h	740;"	d
TT_MS_LANGID_CATALAN_CATALAN	freetype/ttnameid.h	468;"	d
TT_MS_LANGID_CATALAN_SPAIN	freetype/ttnameid.h	662;"	d
TT_MS_LANGID_CHEROKEE_UNITED_STATES	freetype/ttnameid.h	748;"	d
TT_MS_LANGID_CHINESE_GENERAL	freetype/ttnameid.h	664;"	d
TT_MS_LANGID_CHINESE_HONG_KONG	freetype/ttnameid.h	471;"	d
TT_MS_LANGID_CHINESE_MACAO	freetype/ttnameid.h	473;"	d
TT_MS_LANGID_CHINESE_MACAU	freetype/ttnameid.h	665;"	d
TT_MS_LANGID_CHINESE_PRC	freetype/ttnameid.h	470;"	d
TT_MS_LANGID_CHINESE_SINGAPORE	freetype/ttnameid.h	472;"	d
TT_MS_LANGID_CHINESE_TAIWAN	freetype/ttnameid.h	469;"	d
TT_MS_LANGID_CLASSIC_LITHUANIAN_LITHUANIA	freetype/ttnameid.h	696;"	d
TT_MS_LANGID_CORSICAN_FRANCE	freetype/ttnameid.h	649;"	d
TT_MS_LANGID_CROATIAN_BOSNIA_HERZEGOVINA	freetype/ttnameid.h	546;"	d
TT_MS_LANGID_CROATIAN_CROATIA	freetype/ttnameid.h	543;"	d
TT_MS_LANGID_CZECH_CZECH_REPUBLIC	freetype/ttnameid.h	474;"	d
TT_MS_LANGID_DANISH_DENMARK	freetype/ttnameid.h	475;"	d
TT_MS_LANGID_DARI_AFGHANISTAN	freetype/ttnameid.h	655;"	d
TT_MS_LANGID_DHIVEHI_MALDIVES	freetype/ttnameid.h	631;"	d
TT_MS_LANGID_DIVEHI_MALDIVES	freetype/ttnameid.h	757;"	d
TT_MS_LANGID_DUTCH_BELGIUM	freetype/ttnameid.h	534;"	d
TT_MS_LANGID_DUTCH_NETHERLANDS	freetype/ttnameid.h	533;"	d
TT_MS_LANGID_DZONGHKA_BHUTAN	freetype/ttnameid.h	735;"	d
TT_MS_LANGID_EDO_NIGERIA	freetype/ttnameid.h	759;"	d
TT_MS_LANGID_ENGLISH_AUSTRALIA	freetype/ttnameid.h	484;"	d
TT_MS_LANGID_ENGLISH_BELIZE	freetype/ttnameid.h	491;"	d
TT_MS_LANGID_ENGLISH_CANADA	freetype/ttnameid.h	485;"	d
TT_MS_LANGID_ENGLISH_CARIBBEAN	freetype/ttnameid.h	490;"	d
TT_MS_LANGID_ENGLISH_GENERAL	freetype/ttnameid.h	669;"	d
TT_MS_LANGID_ENGLISH_HONG_KONG	freetype/ttnameid.h	671;"	d
TT_MS_LANGID_ENGLISH_INDIA	freetype/ttnameid.h	495;"	d
TT_MS_LANGID_ENGLISH_INDONESIA	freetype/ttnameid.h	670;"	d
TT_MS_LANGID_ENGLISH_IRELAND	freetype/ttnameid.h	487;"	d
TT_MS_LANGID_ENGLISH_JAMAICA	freetype/ttnameid.h	489;"	d
TT_MS_LANGID_ENGLISH_MALAYSIA	freetype/ttnameid.h	496;"	d
TT_MS_LANGID_ENGLISH_NEW_ZEALAND	freetype/ttnameid.h	486;"	d
TT_MS_LANGID_ENGLISH_PHILIPPINES	freetype/ttnameid.h	494;"	d
TT_MS_LANGID_ENGLISH_SINGAPORE	freetype/ttnameid.h	497;"	d
TT_MS_LANGID_ENGLISH_SOUTH_AFRICA	freetype/ttnameid.h	488;"	d
TT_MS_LANGID_ENGLISH_TRINIDAD	freetype/ttnameid.h	492;"	d
TT_MS_LANGID_ENGLISH_UNITED_KINGDOM	freetype/ttnameid.h	483;"	d
TT_MS_LANGID_ENGLISH_UNITED_STATES	freetype/ttnameid.h	482;"	d
TT_MS_LANGID_ENGLISH_ZIMBABWE	freetype/ttnameid.h	493;"	d
TT_MS_LANGID_ESTONIAN_ESTONIA	freetype/ttnameid.h	562;"	d
TT_MS_LANGID_FAEROESE_FAEROE_ISLANDS	freetype/ttnameid.h	579;"	d
TT_MS_LANGID_FARSI_IRAN	freetype/ttnameid.h	699;"	d
TT_MS_LANGID_FILIPINO_PHILIPPINES	freetype/ttnameid.h	630;"	d
TT_MS_LANGID_FINNISH_FINLAND	freetype/ttnameid.h	519;"	d
TT_MS_LANGID_FRENCH_BELGIUM	freetype/ttnameid.h	521;"	d
TT_MS_LANGID_FRENCH_CAMEROON	freetype/ttnameid.h	682;"	d
TT_MS_LANGID_FRENCH_CANADA	freetype/ttnameid.h	522;"	d
TT_MS_LANGID_FRENCH_CONGO	freetype/ttnameid.h	677;"	d
TT_MS_LANGID_FRENCH_COTE_D_IVOIRE	freetype/ttnameid.h	683;"	d
TT_MS_LANGID_FRENCH_FRANCE	freetype/ttnameid.h	520;"	d
TT_MS_LANGID_FRENCH_HAITI	freetype/ttnameid.h	686;"	d
TT_MS_LANGID_FRENCH_LUXEMBOURG	freetype/ttnameid.h	524;"	d
TT_MS_LANGID_FRENCH_MALI	freetype/ttnameid.h	684;"	d
TT_MS_LANGID_FRENCH_MONACO	freetype/ttnameid.h	525;"	d
TT_MS_LANGID_FRENCH_MOROCCO	freetype/ttnameid.h	685;"	d
TT_MS_LANGID_FRENCH_NORTH_AFRICA	freetype/ttnameid.h	687;"	d
TT_MS_LANGID_FRENCH_REUNION	freetype/ttnameid.h	676;"	d
TT_MS_LANGID_FRENCH_SENEGAL	freetype/ttnameid.h	681;"	d
TT_MS_LANGID_FRENCH_SWITZERLAND	freetype/ttnameid.h	523;"	d
TT_MS_LANGID_FRENCH_WEST_INDIES	freetype/ttnameid.h	675;"	d
TT_MS_LANGID_FRENCH_ZAIRE	freetype/ttnameid.h	679;"	d
TT_MS_LANGID_FRISIAN_NETHERLANDS	freetype/ttnameid.h	628;"	d
TT_MS_LANGID_FULFULDE_NIGERIA	freetype/ttnameid.h	760;"	d
TT_MS_LANGID_GALICIAN_GALICIAN	freetype/ttnameid.h	619;"	d
TT_MS_LANGID_GALICIAN_SPAIN	freetype/ttnameid.h	741;"	d
TT_MS_LANGID_GEORGIAN_GEORGIA	freetype/ttnameid.h	578;"	d
TT_MS_LANGID_GERMAN_AUSTRIA	freetype/ttnameid.h	478;"	d
TT_MS_LANGID_GERMAN_GERMANY	freetype/ttnameid.h	476;"	d
TT_MS_LANGID_GERMAN_LIECHTENSTEI	freetype/ttnameid.h	667;"	d
TT_MS_LANGID_GERMAN_LIECHTENSTEIN	freetype/ttnameid.h	480;"	d
TT_MS_LANGID_GERMAN_LUXEMBOURG	freetype/ttnameid.h	479;"	d
TT_MS_LANGID_GERMAN_SWITZERLAND	freetype/ttnameid.h	477;"	d
TT_MS_LANGID_GREEK_GREECE	freetype/ttnameid.h	481;"	d
TT_MS_LANGID_GREENLANDIC_GREENLAND	freetype/ttnameid.h	640;"	d
TT_MS_LANGID_GUARANI_PARAGUAY	freetype/ttnameid.h	772;"	d
TT_MS_LANGID_GUJARATI_INDIA	freetype/ttnameid.h	604;"	d
TT_MS_LANGID_HAUSA_NIGERIA	freetype/ttnameid.h	632;"	d
TT_MS_LANGID_HAWAIIAN_UNITED_STATES	freetype/ttnameid.h	773;"	d
TT_MS_LANGID_HEBREW_ISRAEL	freetype/ttnameid.h	526;"	d
TT_MS_LANGID_HINDI_INDIA	freetype/ttnameid.h	580;"	d
TT_MS_LANGID_HUNGARIAN_HUNGARY	freetype/ttnameid.h	527;"	d
TT_MS_LANGID_IBIBIO_NIGERIA	freetype/ttnameid.h	761;"	d
TT_MS_LANGID_ICELANDIC_ICELAND	freetype/ttnameid.h	528;"	d
TT_MS_LANGID_IGBO_NIGERIA	freetype/ttnameid.h	641;"	d
TT_MS_LANGID_INDONESIAN_INDONESIA	freetype/ttnameid.h	558;"	d
TT_MS_LANGID_INUKTITUT_CANADA	freetype/ttnameid.h	623;"	d
TT_MS_LANGID_INUKTITUT_CANADA_LATIN	freetype/ttnameid.h	624;"	d
TT_MS_LANGID_IRISH_GAELIC_IRELAND	freetype/ttnameid.h	715;"	d
TT_MS_LANGID_IRISH_IRELAND	freetype/ttnameid.h	591;"	d
TT_MS_LANGID_ISIXHOSA_SOUTH_AFRICA	freetype/ttnameid.h	575;"	d
TT_MS_LANGID_ISIZULU_SOUTH_AFRICA	freetype/ttnameid.h	576;"	d
TT_MS_LANGID_ITALIAN_ITALY	freetype/ttnameid.h	529;"	d
TT_MS_LANGID_ITALIAN_SWITZERLAND	freetype/ttnameid.h	530;"	d
TT_MS_LANGID_JAPANESE_JAPAN	freetype/ttnameid.h	531;"	d
TT_MS_LANGID_KANNADA_INDIA	freetype/ttnameid.h	608;"	d
TT_MS_LANGID_KANURI_NIGERIA	freetype/ttnameid.h	766;"	d
TT_MS_LANGID_KASHMIRI_INDIA	freetype/ttnameid.h	754;"	d
TT_MS_LANGID_KASHMIRI_PAKISTAN	freetype/ttnameid.h	752;"	d
TT_MS_LANGID_KASHMIRI_SASIA	freetype/ttnameid.h	753;"	d
TT_MS_LANGID_KAZAKH_KAZAKHSTAN	freetype/ttnameid.h	594;"	d
TT_MS_LANGID_KAZAK_KAZAKSTAN	freetype/ttnameid.h	718;"	d
TT_MS_LANGID_KHMER_CAMBODIA	freetype/ttnameid.h	617;"	d
TT_MS_LANGID_KICHE_GUATEMALA	freetype/ttnameid.h	652;"	d
TT_MS_LANGID_KINYARWANDA_RWANDA	freetype/ttnameid.h	653;"	d
TT_MS_LANGID_KIRGHIZ_KIRGHIZSTAN	freetype/ttnameid.h	722;"	d
TT_MS_LANGID_KIRGHIZ_KIRGHIZ_REPUBLIC	freetype/ttnameid.h	720;"	d
TT_MS_LANGID_KISWAHILI_KENYA	freetype/ttnameid.h	596;"	d
TT_MS_LANGID_KONKANI_INDIA	freetype/ttnameid.h	620;"	d
TT_MS_LANGID_KOREAN_EXTENDED_WANSUNG_KOREA	freetype/ttnameid.h	688;"	d
TT_MS_LANGID_KOREAN_JOHAB_KOREA	freetype/ttnameid.h	690;"	d
TT_MS_LANGID_KOREAN_KOREA	freetype/ttnameid.h	532;"	d
TT_MS_LANGID_KYRGYZ_KYRGYZSTAN	freetype/ttnameid.h	595;"	d
TT_MS_LANGID_LAO_LAOS	freetype/ttnameid.h	618;"	d
TT_MS_LANGID_LATIN	freetype/ttnameid.h	774;"	d
TT_MS_LANGID_LATVIAN_LATVIA	freetype/ttnameid.h	563;"	d
TT_MS_LANGID_LITHUANIAN_LITHUANIA	freetype/ttnameid.h	564;"	d
TT_MS_LANGID_LOWER_SORBIAN_GERMANY	freetype/ttnameid.h	572;"	d
TT_MS_LANGID_LUXEMBOURGISH_LUXEMBOURG	freetype/ttnameid.h	639;"	d
TT_MS_LANGID_MACEDONIAN_MACEDONIA	freetype/ttnameid.h	573;"	d
TT_MS_LANGID_MALAYALAM_INDIA	freetype/ttnameid.h	609;"	d
TT_MS_LANGID_MALAY_BRUNEI_DARUSSALAM	freetype/ttnameid.h	593;"	d
TT_MS_LANGID_MALAY_MALAYSIA	freetype/ttnameid.h	592;"	d
TT_MS_LANGID_MALTESE_MALTA	freetype/ttnameid.h	581;"	d
TT_MS_LANGID_MANIPURI_INDIA	freetype/ttnameid.h	743;"	d
TT_MS_LANGID_MAORI_NEW_ZEALAND	freetype/ttnameid.h	647;"	d
TT_MS_LANGID_MAPUDUNGUN_CHILE	freetype/ttnameid.h	643;"	d
TT_MS_LANGID_MARATHI_INDIA	freetype/ttnameid.h	611;"	d
TT_MS_LANGID_MOHAWK_MOHAWK	freetype/ttnameid.h	644;"	d
TT_MS_LANGID_MOLDAVIAN_MOLDAVIA	freetype/ttnameid.h	693;"	d
TT_MS_LANGID_MONGOLIAN_MONGOLIA	freetype/ttnameid.h	613;"	d
TT_MS_LANGID_MONGOLIAN_MONGOLIA_MONGOLIAN	freetype/ttnameid.h	731;"	d
TT_MS_LANGID_MONGOLIAN_PRC	freetype/ttnameid.h	614;"	d
TT_MS_LANGID_NEPALI_INDIA	freetype/ttnameid.h	756;"	d
TT_MS_LANGID_NEPALI_NEPAL	freetype/ttnameid.h	627;"	d
TT_MS_LANGID_NORWEGIAN_NORWAY_BOKMAL	freetype/ttnameid.h	535;"	d
TT_MS_LANGID_NORWEGIAN_NORWAY_NYNORSK	freetype/ttnameid.h	536;"	d
TT_MS_LANGID_OCCITAN_FRANCE	freetype/ttnameid.h	648;"	d
TT_MS_LANGID_ODIA_INDIA	freetype/ttnameid.h	605;"	d
TT_MS_LANGID_ORIYA_INDIA	freetype/ttnameid.h	729;"	d
TT_MS_LANGID_OROMO_ETHIOPIA	freetype/ttnameid.h	767;"	d
TT_MS_LANGID_PAPIAMENTU_NETHERLANDS_ANTILLES	freetype/ttnameid.h	778;"	d
TT_MS_LANGID_PASHTO_AFGHANISTAN	freetype/ttnameid.h	629;"	d
TT_MS_LANGID_POLISH_POLAND	freetype/ttnameid.h	537;"	d
TT_MS_LANGID_PORTUGUESE_BRAZIL	freetype/ttnameid.h	538;"	d
TT_MS_LANGID_PORTUGUESE_PORTUGAL	freetype/ttnameid.h	539;"	d
TT_MS_LANGID_PUNJABI_ARABIC_PAKISTAN	freetype/ttnameid.h	728;"	d
TT_MS_LANGID_PUNJABI_INDIA	freetype/ttnameid.h	603;"	d
TT_MS_LANGID_QUECHUA_BOLIVIA	freetype/ttnameid.h	634;"	d
TT_MS_LANGID_QUECHUA_ECUADOR	freetype/ttnameid.h	635;"	d
TT_MS_LANGID_QUECHUA_PERU	freetype/ttnameid.h	636;"	d
TT_MS_LANGID_RHAETO_ROMANIC_SWITZERLAND	freetype/ttnameid.h	691;"	d
TT_MS_LANGID_ROMANIAN_ROMANIA	freetype/ttnameid.h	541;"	d
TT_MS_LANGID_ROMANSH_SWITZERLAND	freetype/ttnameid.h	540;"	d
TT_MS_LANGID_RUSSIAN_MOLDAVIA	freetype/ttnameid.h	694;"	d
TT_MS_LANGID_RUSSIAN_RUSSIA	freetype/ttnameid.h	542;"	d
TT_MS_LANGID_SAAMI_LAPONIA	freetype/ttnameid.h	713;"	d
TT_MS_LANGID_SAMI_INARI_FINLAND	freetype/ttnameid.h	590;"	d
TT_MS_LANGID_SAMI_LULE_NORWAY	freetype/ttnameid.h	585;"	d
TT_MS_LANGID_SAMI_LULE_SWEDEN	freetype/ttnameid.h	586;"	d
TT_MS_LANGID_SAMI_NORTHERN_FINLAND	freetype/ttnameid.h	584;"	d
TT_MS_LANGID_SAMI_NORTHERN_NORWAY	freetype/ttnameid.h	582;"	d
TT_MS_LANGID_SAMI_NORTHERN_SWEDEN	freetype/ttnameid.h	583;"	d
TT_MS_LANGID_SAMI_SKOLT_FINLAND	freetype/ttnameid.h	589;"	d
TT_MS_LANGID_SAMI_SOUTHERN_NORWAY	freetype/ttnameid.h	587;"	d
TT_MS_LANGID_SAMI_SOUTHERN_SWEDEN	freetype/ttnameid.h	588;"	d
TT_MS_LANGID_SANSKRIT_INDIA	freetype/ttnameid.h	612;"	d
TT_MS_LANGID_SCOTTISH_GAELIC_UNITED_KINGDOM	freetype/ttnameid.h	716;"	d
TT_MS_LANGID_SEPEDI_SOUTH_AFRICA	freetype/ttnameid.h	762;"	d
TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_CYRILLIC	freetype/ttnameid.h	549;"	d
TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_LATIN	freetype/ttnameid.h	548;"	d
TT_MS_LANGID_SERBIAN_SERBIA_CYRILLIC	freetype/ttnameid.h	545;"	d
TT_MS_LANGID_SERBIAN_SERBIA_LATIN	freetype/ttnameid.h	544;"	d
TT_MS_LANGID_SESOTHO_SA_LEBOA_SOUTH_AFRICA	freetype/ttnameid.h	637;"	d
TT_MS_LANGID_SETSWANA_SOUTH_AFRICA	freetype/ttnameid.h	574;"	d
TT_MS_LANGID_SINDHI_INDIA	freetype/ttnameid.h	744;"	d
TT_MS_LANGID_SINDHI_PAKISTAN	freetype/ttnameid.h	745;"	d
TT_MS_LANGID_SINHALA_SRI_LANKA	freetype/ttnameid.h	622;"	d
TT_MS_LANGID_SINHALESE_SRI_LANKA	freetype/ttnameid.h	746;"	d
TT_MS_LANGID_SLOVAK_SLOVAKIA	freetype/ttnameid.h	551;"	d
TT_MS_LANGID_SLOVENE_SLOVENIA	freetype/ttnameid.h	697;"	d
TT_MS_LANGID_SLOVENIAN_SLOVENIA	freetype/ttnameid.h	561;"	d
TT_MS_LANGID_SOMALI_SOMALIA	freetype/ttnameid.h	775;"	d
TT_MS_LANGID_SORBIAN_GERMANY	freetype/ttnameid.h	702;"	d
TT_MS_LANGID_SOTHO_SOUTHERN_SOUTH_AFRICA	freetype/ttnameid.h	764;"	d
TT_MS_LANGID_SPANISH_ARGENTINA	freetype/ttnameid.h	508;"	d
TT_MS_LANGID_SPANISH_BOLIVIA	freetype/ttnameid.h	513;"	d
TT_MS_LANGID_SPANISH_CHILE	freetype/ttnameid.h	510;"	d
TT_MS_LANGID_SPANISH_COLOMBIA	freetype/ttnameid.h	506;"	d
TT_MS_LANGID_SPANISH_COSTA_RICA	freetype/ttnameid.h	502;"	d
TT_MS_LANGID_SPANISH_DOMINICAN_REPUBLIC	freetype/ttnameid.h	504;"	d
TT_MS_LANGID_SPANISH_ECUADOR	freetype/ttnameid.h	509;"	d
TT_MS_LANGID_SPANISH_EL_SALVADOR	freetype/ttnameid.h	514;"	d
TT_MS_LANGID_SPANISH_GUATEMALA	freetype/ttnameid.h	501;"	d
TT_MS_LANGID_SPANISH_HONDURAS	freetype/ttnameid.h	515;"	d
TT_MS_LANGID_SPANISH_LATIN_AMERICA	freetype/ttnameid.h	674;"	d
TT_MS_LANGID_SPANISH_MEXICO	freetype/ttnameid.h	499;"	d
TT_MS_LANGID_SPANISH_NICARAGUA	freetype/ttnameid.h	516;"	d
TT_MS_LANGID_SPANISH_PANAMA	freetype/ttnameid.h	503;"	d
TT_MS_LANGID_SPANISH_PARAGUAY	freetype/ttnameid.h	512;"	d
TT_MS_LANGID_SPANISH_PERU	freetype/ttnameid.h	507;"	d
TT_MS_LANGID_SPANISH_PUERTO_RICO	freetype/ttnameid.h	517;"	d
TT_MS_LANGID_SPANISH_SPAIN_INTERNATIONAL_SORT	freetype/ttnameid.h	672;"	d
TT_MS_LANGID_SPANISH_SPAIN_MODERN_SORT	freetype/ttnameid.h	500;"	d
TT_MS_LANGID_SPANISH_SPAIN_TRADITIONAL_SORT	freetype/ttnameid.h	498;"	d
TT_MS_LANGID_SPANISH_UNITED_STATES	freetype/ttnameid.h	518;"	d
TT_MS_LANGID_SPANISH_URUGUAY	freetype/ttnameid.h	511;"	d
TT_MS_LANGID_SPANISH_VENEZUELA	freetype/ttnameid.h	505;"	d
TT_MS_LANGID_SUTU_SOUTH_AFRICA	freetype/ttnameid.h	704;"	d
TT_MS_LANGID_SWAHILI_KENYA	freetype/ttnameid.h	724;"	d
TT_MS_LANGID_SWEDISH_FINLAND	freetype/ttnameid.h	554;"	d
TT_MS_LANGID_SWEDISH_SWEDEN	freetype/ttnameid.h	553;"	d
TT_MS_LANGID_SYRIAC_SYRIA	freetype/ttnameid.h	621;"	d
TT_MS_LANGID_TAJIK_TAJIKISTAN	freetype/ttnameid.h	565;"	d
TT_MS_LANGID_TAMAZIGHT_ALGERIA	freetype/ttnameid.h	626;"	d
TT_MS_LANGID_TAMAZIGHT_MOROCCO	freetype/ttnameid.h	749;"	d
TT_MS_LANGID_TAMAZIGHT_MOROCCO_LATIN	freetype/ttnameid.h	750;"	d
TT_MS_LANGID_TAMIL_INDIA	freetype/ttnameid.h	606;"	d
TT_MS_LANGID_TATAR_RUSSIA	freetype/ttnameid.h	600;"	d
TT_MS_LANGID_TATAR_TATARSTAN	freetype/ttnameid.h	726;"	d
TT_MS_LANGID_TELUGU_INDIA	freetype/ttnameid.h	607;"	d
TT_MS_LANGID_THAI_THAILAND	freetype/ttnameid.h	555;"	d
TT_MS_LANGID_TIBETAN_BHUTAN	freetype/ttnameid.h	736;"	d
TT_MS_LANGID_TIBETAN_CHINA	freetype/ttnameid.h	733;"	d
TT_MS_LANGID_TIBETAN_PRC	freetype/ttnameid.h	615;"	d
TT_MS_LANGID_TIGRIGNA_ERYTHREA	freetype/ttnameid.h	769;"	d
TT_MS_LANGID_TIGRIGNA_ERYTREA	freetype/ttnameid.h	770;"	d
TT_MS_LANGID_TIGRIGNA_ETHIOPIA	freetype/ttnameid.h	768;"	d
TT_MS_LANGID_TSONGA_SOUTH_AFRICA	freetype/ttnameid.h	705;"	d
TT_MS_LANGID_TSWANA_SOUTH_AFRICA	freetype/ttnameid.h	706;"	d
TT_MS_LANGID_TURKISH_TURKEY	freetype/ttnameid.h	556;"	d
TT_MS_LANGID_TURKMEN_TURKMENISTAN	freetype/ttnameid.h	597;"	d
TT_MS_LANGID_UIGHUR_CHINA	freetype/ttnameid.h	779;"	d
TT_MS_LANGID_UIGHUR_PRC	freetype/ttnameid.h	646;"	d
TT_MS_LANGID_UKRAINIAN_UKRAINE	freetype/ttnameid.h	559;"	d
TT_MS_LANGID_UPPER_SORBIAN_GERMANY	freetype/ttnameid.h	571;"	d
TT_MS_LANGID_URDU_INDIA	freetype/ttnameid.h	695;"	d
TT_MS_LANGID_URDU_PAKISTAN	freetype/ttnameid.h	557;"	d
TT_MS_LANGID_UZBEK_UZBEKISTAN_CYRILLIC	freetype/ttnameid.h	599;"	d
TT_MS_LANGID_UZBEK_UZBEKISTAN_LATIN	freetype/ttnameid.h	598;"	d
TT_MS_LANGID_VENDA_SOUTH_AFRICA	freetype/ttnameid.h	708;"	d
TT_MS_LANGID_VIETNAMESE_VIET_NAM	freetype/ttnameid.h	566;"	d
TT_MS_LANGID_WELSH_UNITED_KINGDOM	freetype/ttnameid.h	616;"	d
TT_MS_LANGID_WELSH_WALES	freetype/ttnameid.h	738;"	d
TT_MS_LANGID_WOLOF_SENEGAL	freetype/ttnameid.h	654;"	d
TT_MS_LANGID_XHOSA_SOUTH_AFRICA	freetype/ttnameid.h	709;"	d
TT_MS_LANGID_YAKUT_RUSSIA	freetype/ttnameid.h	651;"	d
TT_MS_LANGID_YIDDISH_GERMANY	freetype/ttnameid.h	717;"	d
TT_MS_LANGID_YI_CHINA	freetype/ttnameid.h	776;"	d
TT_MS_LANGID_YI_PRC	freetype/ttnameid.h	642;"	d
TT_MS_LANGID_YORUBA_NIGERIA	freetype/ttnameid.h	633;"	d
TT_MS_LANGID_ZULU_SOUTH_AFRICA	freetype/ttnameid.h	711;"	d
TT_MaxProfile	freetype/tttables.h	/^  } TT_MaxProfile;$/;"	t	typeref:struct:TT_MaxProfile_
TT_MaxProfile_	freetype/tttables.h	/^  typedef struct  TT_MaxProfile_$/;"	s
TT_NAME_ID_CID_FINDFONT_NAME	freetype/ttnameid.h	819;"	d
TT_NAME_ID_COPYRIGHT	freetype/ttnameid.h	793;"	d
TT_NAME_ID_DARK_BACKGROUND	freetype/ttnameid.h	827;"	d
TT_NAME_ID_DESCRIPTION	freetype/ttnameid.h	805;"	d
TT_NAME_ID_DESIGNER	freetype/ttnameid.h	804;"	d
TT_NAME_ID_DESIGNER_URL	freetype/ttnameid.h	807;"	d
TT_NAME_ID_FONT_FAMILY	freetype/ttnameid.h	794;"	d
TT_NAME_ID_FONT_SUBFAMILY	freetype/ttnameid.h	795;"	d
TT_NAME_ID_FULL_NAME	freetype/ttnameid.h	797;"	d
TT_NAME_ID_LICENSE	freetype/ttnameid.h	808;"	d
TT_NAME_ID_LICENSE_URL	freetype/ttnameid.h	809;"	d
TT_NAME_ID_LIGHT_BACKGROUND	freetype/ttnameid.h	826;"	d
TT_NAME_ID_MAC_FULL_NAME	freetype/ttnameid.h	813;"	d
TT_NAME_ID_MANUFACTURER	freetype/ttnameid.h	803;"	d
TT_NAME_ID_PREFERRED_FAMILY	freetype/ttnameid.h	833;"	d
TT_NAME_ID_PREFERRED_SUBFAMILY	freetype/ttnameid.h	834;"	d
TT_NAME_ID_PS_NAME	freetype/ttnameid.h	799;"	d
TT_NAME_ID_SAMPLE_TEXT	freetype/ttnameid.h	816;"	d
TT_NAME_ID_TRADEMARK	freetype/ttnameid.h	800;"	d
TT_NAME_ID_TYPOGRAPHIC_FAMILY	freetype/ttnameid.h	811;"	d
TT_NAME_ID_TYPOGRAPHIC_SUBFAMILY	freetype/ttnameid.h	812;"	d
TT_NAME_ID_UNIQUE_ID	freetype/ttnameid.h	796;"	d
TT_NAME_ID_VARIATIONS_PREFIX	freetype/ttnameid.h	830;"	d
TT_NAME_ID_VENDOR_URL	freetype/ttnameid.h	806;"	d
TT_NAME_ID_VERSION_STRING	freetype/ttnameid.h	798;"	d
TT_NAME_ID_WWS_FAMILY	freetype/ttnameid.h	822;"	d
TT_NAME_ID_WWS_SUBFAMILY	freetype/ttnameid.h	823;"	d
TT_Name	freetype/internal/tttypes.h	/^  } TT_NameRec, *TT_Name;$/;"	t	typeref:struct:TT_NameRec_
TT_NameRec	freetype/internal/tttypes.h	/^  } TT_NameRec, *TT_Name;$/;"	t	typeref:struct:TT_NameRec_
TT_NameRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_NameRec_$/;"	s
TT_NameTable	freetype/internal/tttypes.h	/^  } TT_NameTableRec, *TT_NameTable;$/;"	t	typeref:struct:TT_NameTableRec_
TT_NameTableRec	freetype/internal/tttypes.h	/^  } TT_NameTableRec, *TT_NameTable;$/;"	t	typeref:struct:TT_NameTableRec_
TT_NameTableRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_NameTableRec_$/;"	s
TT_OS2	freetype/tttables.h	/^  } TT_OS2;$/;"	t	typeref:struct:TT_OS2_
TT_OS2_	freetype/tttables.h	/^  typedef struct  TT_OS2_$/;"	s
TT_PCLT	freetype/tttables.h	/^  } TT_PCLT;$/;"	t	typeref:struct:TT_PCLT_
TT_PCLT_	freetype/tttables.h	/^  typedef struct  TT_PCLT_$/;"	s
TT_PLATFORM_ADOBE	freetype/ttnameid.h	91;"	d
TT_PLATFORM_APPLE_UNICODE	freetype/ttnameid.h	86;"	d
TT_PLATFORM_CUSTOM	freetype/ttnameid.h	90;"	d
TT_PLATFORM_ISO	freetype/ttnameid.h	88;"	d
TT_PLATFORM_MACINTOSH	freetype/ttnameid.h	87;"	d
TT_PLATFORM_MICROSOFT	freetype/ttnameid.h	89;"	d
TT_Post_20	freetype/internal/tttypes.h	/^  } TT_Post_20Rec, *TT_Post_20;$/;"	t	typeref:struct:TT_Post_20Rec_
TT_Post_20Rec	freetype/internal/tttypes.h	/^  } TT_Post_20Rec, *TT_Post_20;$/;"	t	typeref:struct:TT_Post_20Rec_
TT_Post_20Rec_	freetype/internal/tttypes.h	/^  typedef struct  TT_Post_20Rec_$/;"	s
TT_Post_25	freetype/internal/tttypes.h	/^  } TT_Post_25Rec, *TT_Post_25;$/;"	t	typeref:struct:TT_Post_25_
TT_Post_25Rec	freetype/internal/tttypes.h	/^  } TT_Post_25Rec, *TT_Post_25;$/;"	t	typeref:struct:TT_Post_25_
TT_Post_25_	freetype/internal/tttypes.h	/^  typedef struct  TT_Post_25_$/;"	s
TT_Post_Names	freetype/internal/tttypes.h	/^  } TT_Post_NamesRec, *TT_Post_Names;$/;"	t	typeref:struct:TT_Post_NamesRec_
TT_Post_NamesRec	freetype/internal/tttypes.h	/^  } TT_Post_NamesRec, *TT_Post_Names;$/;"	t	typeref:struct:TT_Post_NamesRec_
TT_Post_NamesRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_Post_NamesRec_$/;"	s
TT_Postscript	freetype/tttables.h	/^  } TT_Postscript;$/;"	t	typeref:struct:TT_Postscript_
TT_Postscript_	freetype/tttables.h	/^  typedef struct  TT_Postscript_$/;"	s
TT_SBIT_TABLE_TYPE_CBLC	freetype/internal/tttypes.h	/^    TT_SBIT_TABLE_TYPE_CBLC, \/* `CBLC' (Google)     *\/$/;"	e	enum:TT_SbitTableType_
TT_SBIT_TABLE_TYPE_EBLC	freetype/internal/tttypes.h	/^    TT_SBIT_TABLE_TYPE_EBLC, \/* `EBLC' (Microsoft), *\/$/;"	e	enum:TT_SbitTableType_
TT_SBIT_TABLE_TYPE_MAX	freetype/internal/tttypes.h	/^    TT_SBIT_TABLE_TYPE_MAX$/;"	e	enum:TT_SbitTableType_
TT_SBIT_TABLE_TYPE_NONE	freetype/internal/tttypes.h	/^    TT_SBIT_TABLE_TYPE_NONE = 0,$/;"	e	enum:TT_SbitTableType_
TT_SBIT_TABLE_TYPE_SBIX	freetype/internal/tttypes.h	/^    TT_SBIT_TABLE_TYPE_SBIX, \/* `sbix' (Apple)      *\/$/;"	e	enum:TT_SbitTableType_
TT_SBit_Component	freetype/internal/tttypes.h	/^  } TT_SBit_ComponentRec, *TT_SBit_Component;$/;"	t	typeref:struct:TT_SBit_ComponentRec_
TT_SBit_ComponentRec	freetype/internal/tttypes.h	/^  } TT_SBit_ComponentRec, *TT_SBit_Component;$/;"	t	typeref:struct:TT_SBit_ComponentRec_
TT_SBit_ComponentRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_ComponentRec_$/;"	s
TT_SBit_LineMetrics	freetype/internal/tttypes.h	/^  } TT_SBit_LineMetricsRec, *TT_SBit_LineMetrics;$/;"	t	typeref:struct:TT_SBit_LineMetricsRec_
TT_SBit_LineMetricsRec	freetype/internal/tttypes.h	/^  } TT_SBit_LineMetricsRec, *TT_SBit_LineMetrics;$/;"	t	typeref:struct:TT_SBit_LineMetricsRec_
TT_SBit_LineMetricsRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_LineMetricsRec_$/;"	s
TT_SBit_Metrics	freetype/internal/tttypes.h	/^  } TT_SBit_MetricsRec, *TT_SBit_Metrics;$/;"	t	typeref:struct:TT_SBit_MetricsRec_
TT_SBit_MetricsRec	freetype/internal/tttypes.h	/^  } TT_SBit_MetricsRec, *TT_SBit_Metrics;$/;"	t	typeref:struct:TT_SBit_MetricsRec_
TT_SBit_MetricsRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_MetricsRec_$/;"	s
TT_SBit_Range	freetype/internal/tttypes.h	/^  } TT_SBit_RangeRec, *TT_SBit_Range;$/;"	t	typeref:struct:TT_SBit_RangeRec_
TT_SBit_RangeRec	freetype/internal/tttypes.h	/^  } TT_SBit_RangeRec, *TT_SBit_Range;$/;"	t	typeref:struct:TT_SBit_RangeRec_
TT_SBit_RangeRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_RangeRec_$/;"	s
TT_SBit_Scale	freetype/internal/tttypes.h	/^  } TT_SBit_ScaleRec, *TT_SBit_Scale;$/;"	t	typeref:struct:TT_SBit_ScaleRec_
TT_SBit_ScaleRec	freetype/internal/tttypes.h	/^  } TT_SBit_ScaleRec, *TT_SBit_Scale;$/;"	t	typeref:struct:TT_SBit_ScaleRec_
TT_SBit_ScaleRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_ScaleRec_$/;"	s
TT_SBit_SmallMetrics	freetype/internal/tttypes.h	/^  } TT_SBit_SmallMetricsRec, *TT_SBit_SmallMetrics;$/;"	t	typeref:struct:TT_SBit_Small_Metrics_
TT_SBit_SmallMetricsRec	freetype/internal/tttypes.h	/^  } TT_SBit_SmallMetricsRec, *TT_SBit_SmallMetrics;$/;"	t	typeref:struct:TT_SBit_Small_Metrics_
TT_SBit_Small_Metrics_	freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_Small_Metrics_$/;"	s
TT_SBit_Strike	freetype/internal/tttypes.h	/^  } TT_SBit_StrikeRec, *TT_SBit_Strike;$/;"	t	typeref:struct:TT_SBit_StrikeRec_
TT_SBit_StrikeRec	freetype/internal/tttypes.h	/^  } TT_SBit_StrikeRec, *TT_SBit_Strike;$/;"	t	typeref:struct:TT_SBit_StrikeRec_
TT_SBit_StrikeRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_StrikeRec_$/;"	s
TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY	freetype/config/ftoption.h	949;"	d
TT_SUPPORT_SUBPIXEL_HINTING_MINIMAL	freetype/config/ftoption.h	953;"	d
TT_SbitTableType	freetype/internal/tttypes.h	/^  } TT_SbitTableType;$/;"	t	typeref:enum:TT_SbitTableType_
TT_SbitTableType_	freetype/internal/tttypes.h	/^  typedef enum TT_SbitTableType_$/;"	g
TT_Set_SBit_Strike_Func	freetype/internal/sfnt.h	/^  (*TT_Set_SBit_Strike_Func)( TT_Face          face,$/;"	t
TT_ShortMetrics	freetype/internal/tttypes.h	/^  typedef FT_Short  TT_ShortMetrics;$/;"	t
TT_Size	freetype/internal/tttypes.h	/^  typedef struct TT_SizeRec_*  TT_Size;$/;"	t	typeref:struct:TT_SizeRec_
TT_Table	freetype/internal/tttypes.h	/^  } TT_TableRec, *TT_Table;$/;"	t	typeref:struct:TT_TableRec_
TT_TableRec	freetype/internal/tttypes.h	/^  } TT_TableRec, *TT_Table;$/;"	t	typeref:struct:TT_TableRec_
TT_TableRec_	freetype/internal/tttypes.h	/^  typedef struct  TT_TableRec_$/;"	s
TT_UCR_ALPHABETIC_PRESENTATION_FORMS	freetype/ttnameid.h	1050;"	d
TT_UCR_ANCIENT_GREEK_NUMBERS	freetype/ttnameid.h	1166;"	d
TT_UCR_ANCIENT_SYMBOLS	freetype/ttnameid.h	1202;"	d
TT_UCR_ARABIC	freetype/ttnameid.h	892;"	d
TT_UCR_ARABIC_PRESENTATION_A	freetype/ttnameid.h	1220;"	d
TT_UCR_ARABIC_PRESENTATION_B	freetype/ttnameid.h	1222;"	d
TT_UCR_ARABIC_PRESENTATION_FORMS_A	freetype/ttnameid.h	1052;"	d
TT_UCR_ARABIC_PRESENTATION_FORMS_B	freetype/ttnameid.h	1066;"	d
TT_UCR_ARMENIAN	freetype/ttnameid.h	885;"	d
TT_UCR_ARROWS	freetype/ttnameid.h	957;"	d
TT_UCR_BALINESE	freetype/ttnameid.h	923;"	d
TT_UCR_BASIC_LATIN	freetype/ttnameid.h	851;"	d
TT_UCR_BENGALI	freetype/ttnameid.h	899;"	d
TT_UCR_BLOCK_ELEMENTS	freetype/ttnameid.h	980;"	d
TT_UCR_BOPOMOFO	freetype/ttnameid.h	997;"	d
TT_UCR_BOX_DRAWING	freetype/ttnameid.h	978;"	d
TT_UCR_BRAILLE	freetype/ttnameid.h	1102;"	d
TT_UCR_BUGINESE	freetype/ttnameid.h	1150;"	d
TT_UCR_CANADIAN_ABORIGINAL_SYLLABICS	freetype/ttnameid.h	1090;"	d
TT_UCR_CHAM	freetype/ttnameid.h	1200;"	d
TT_UCR_CHEROKEE	freetype/ttnameid.h	1088;"	d
TT_UCR_CJK_COMPATIBILITY	freetype/ttnameid.h	1008;"	d
TT_UCR_CJK_COMPATIBILITY_FORMS	freetype/ttnameid.h	1061;"	d
TT_UCR_CJK_COMPATIBILITY_IDEOGRAPHS	freetype/ttnameid.h	1046;"	d
TT_UCR_CJK_MISC	freetype/ttnameid.h	1002;"	d
TT_UCR_CJK_SYMBOLS	freetype/ttnameid.h	988;"	d
TT_UCR_CJK_UNIFIED_IDEOGRAPHS	freetype/ttnameid.h	1034;"	d
TT_UCR_COMBINING_DIACRITICAL_MARKS	freetype/ttnameid.h	870;"	d
TT_UCR_COMBINING_DIACRITICAL_MARKS_SYMB	freetype/ttnameid.h	947;"	d
TT_UCR_COMBINING_DIACRITICS	freetype/ttnameid.h	1225;"	d
TT_UCR_COMBINING_DIACRITICS_SYMB	freetype/ttnameid.h	1227;"	d
TT_UCR_COMBINING_HALF_MARKS	freetype/ttnameid.h	1058;"	d
TT_UCR_CONTROL_PICTURES	freetype/ttnameid.h	972;"	d
TT_UCR_COPTIC	freetype/ttnameid.h	875;"	d
TT_UCR_COUNTING_ROD_NUMERALS	freetype/ttnameid.h	1186;"	d
TT_UCR_CUNEIFORM	freetype/ttnameid.h	1183;"	d
TT_UCR_CURRENCY_SYMBOLS	freetype/ttnameid.h	945;"	d
TT_UCR_CYPRIOT_SYLLABARY	freetype/ttnameid.h	1176;"	d
TT_UCR_CYRILLIC	freetype/ttnameid.h	880;"	d
TT_UCR_DESERET	freetype/ttnameid.h	1120;"	d
TT_UCR_DEVANAGARI	freetype/ttnameid.h	897;"	d
TT_UCR_DINGBATS	freetype/ttnameid.h	986;"	d
TT_UCR_ENCLOSED_ALPHANUMERICS	freetype/ttnameid.h	976;"	d
TT_UCR_ENCLOSED_CJK_LETTERS_MONTHS	freetype/ttnameid.h	1006;"	d
TT_UCR_ETHIOPIC	freetype/ttnameid.h	1084;"	d
TT_UCR_GAME_TILES	freetype/ttnameid.h	1213;"	d
TT_UCR_GENERAL_PUNCTUATION	freetype/ttnameid.h	936;"	d
TT_UCR_GEOMETRIC_SHAPES	freetype/ttnameid.h	982;"	d
TT_UCR_GEORGIAN	freetype/ttnameid.h	920;"	d
TT_UCR_GLAGOLITIC	freetype/ttnameid.h	1152;"	d
TT_UCR_GOTHIC	freetype/ttnameid.h	1118;"	d
TT_UCR_GREEK	freetype/ttnameid.h	873;"	d
TT_UCR_GREEK_EXTENDED	freetype/ttnameid.h	933;"	d
TT_UCR_GUJARATI	freetype/ttnameid.h	903;"	d
TT_UCR_GURMUKHI	freetype/ttnameid.h	901;"	d
TT_UCR_HALFWIDTH_FULLWIDTH_FORMS	freetype/ttnameid.h	1068;"	d
TT_UCR_HANGUL	freetype/ttnameid.h	1010;"	d
TT_UCR_HANGUL_COMPATIBILITY_JAMO	freetype/ttnameid.h	1000;"	d
TT_UCR_HANGUL_JAMO	freetype/ttnameid.h	925;"	d
TT_UCR_HEBREW	freetype/ttnameid.h	887;"	d
TT_UCR_HIRAGANA	freetype/ttnameid.h	990;"	d
TT_UCR_IPA_EXTENSIONS	freetype/ttnameid.h	861;"	d
TT_UCR_KANBUN	freetype/ttnameid.h	1003;"	d
TT_UCR_KANNADA	freetype/ttnameid.h	911;"	d
TT_UCR_KATAKANA	freetype/ttnameid.h	993;"	d
TT_UCR_KAYAH_LI	freetype/ttnameid.h	1196;"	d
TT_UCR_KHAROSHTHI	freetype/ttnameid.h	1178;"	d
TT_UCR_KHMER	freetype/ttnameid.h	1097;"	d
TT_UCR_LAO	freetype/ttnameid.h	917;"	d
TT_UCR_LATIN1_SUPPLEMENT	freetype/ttnameid.h	853;"	d
TT_UCR_LATIN_EXTENDED_A	freetype/ttnameid.h	855;"	d
TT_UCR_LATIN_EXTENDED_ADDITIONAL	freetype/ttnameid.h	929;"	d
TT_UCR_LATIN_EXTENDED_B	freetype/ttnameid.h	857;"	d
TT_UCR_LEPCHA	freetype/ttnameid.h	1190;"	d
TT_UCR_LETTERLIKE_SYMBOLS	freetype/ttnameid.h	950;"	d
TT_UCR_LIMBU	freetype/ttnameid.h	1140;"	d
TT_UCR_LINEAR_B	freetype/ttnameid.h	1162;"	d
TT_UCR_MALAYALAM	freetype/ttnameid.h	913;"	d
TT_UCR_MATHEMATICAL_OPERATORS	freetype/ttnameid.h	965;"	d
TT_UCR_MATH_ALPHANUMERIC_SYMBOLS	freetype/ttnameid.h	1128;"	d
TT_UCR_MISCELLANEOUS_SYMBOLS	freetype/ttnameid.h	984;"	d
TT_UCR_MISCELLANEOUS_TECHNICAL	freetype/ttnameid.h	970;"	d
TT_UCR_MONGOLIAN	freetype/ttnameid.h	1100;"	d
TT_UCR_MUSICAL_SYMBOLS	freetype/ttnameid.h	1124;"	d
TT_UCR_MYANMAR	freetype/ttnameid.h	1080;"	d
TT_UCR_NEW_TAI_LUE	freetype/ttnameid.h	1144;"	d
TT_UCR_NKO	freetype/ttnameid.h	895;"	d
TT_UCR_NON_PLANE_0	freetype/ttnameid.h	1024;"	d
TT_UCR_NUMBER_FORMS	freetype/ttnameid.h	952;"	d
TT_UCR_OCR	freetype/ttnameid.h	974;"	d
TT_UCR_OGHAM	freetype/ttnameid.h	1092;"	d
TT_UCR_OLD_ANATOLIAN	freetype/ttnameid.h	1208;"	d
TT_UCR_OLD_ITALIC	freetype/ttnameid.h	1116;"	d
TT_UCR_OLD_PERSIAN	freetype/ttnameid.h	1170;"	d
TT_UCR_OL_CHIKI	freetype/ttnameid.h	1192;"	d
TT_UCR_ORIYA	freetype/ttnameid.h	905;"	d
TT_UCR_OSMANYA	freetype/ttnameid.h	1174;"	d
TT_UCR_PHAGSPA	freetype/ttnameid.h	1004;"	d
TT_UCR_PHAISTOS_DISC	freetype/ttnameid.h	1204;"	d
TT_UCR_PHILIPPINE	freetype/ttnameid.h	1111;"	d
TT_UCR_PHOENICIAN	freetype/ttnameid.h	1026;"	d
TT_UCR_PRIVATE_USE	freetype/ttnameid.h	1042;"	d
TT_UCR_PRIVATE_USE_SUPPLEMENTARY	freetype/ttnameid.h	1131;"	d
TT_UCR_REJANG	freetype/ttnameid.h	1198;"	d
TT_UCR_RUNIC	freetype/ttnameid.h	1094;"	d
TT_UCR_SAURASHTRA	freetype/ttnameid.h	1194;"	d
TT_UCR_SHAVIAN	freetype/ttnameid.h	1172;"	d
TT_UCR_SINHALA	freetype/ttnameid.h	1078;"	d
TT_UCR_SMALL_FORM_VARIANTS	freetype/ttnameid.h	1064;"	d
TT_UCR_SPACING_MODIFIER	freetype/ttnameid.h	866;"	d
TT_UCR_SPECIALS	freetype/ttnameid.h	1070;"	d
TT_UCR_SUNDANESE	freetype/ttnameid.h	1188;"	d
TT_UCR_SUPERSCRIPTS_SUBSCRIPTS	freetype/ttnameid.h	943;"	d
TT_UCR_SURROGATES	freetype/ttnameid.h	1021;"	d
TT_UCR_SYLOTI_NAGRI	freetype/ttnameid.h	1158;"	d
TT_UCR_SYRIAC	freetype/ttnameid.h	1074;"	d
TT_UCR_TAGS	freetype/ttnameid.h	1138;"	d
TT_UCR_TAI_LE	freetype/ttnameid.h	1142;"	d
TT_UCR_TAI_XUAN_JING	freetype/ttnameid.h	1180;"	d
TT_UCR_TAMIL	freetype/ttnameid.h	907;"	d
TT_UCR_TELUGU	freetype/ttnameid.h	909;"	d
TT_UCR_THAANA	freetype/ttnameid.h	1076;"	d
TT_UCR_THAI	freetype/ttnameid.h	915;"	d
TT_UCR_TIBETAN	freetype/ttnameid.h	1072;"	d
TT_UCR_TIFINAGH	freetype/ttnameid.h	1154;"	d
TT_UCR_UGARITIC	freetype/ttnameid.h	1168;"	d
TT_UCR_VAI	freetype/ttnameid.h	889;"	d
TT_UCR_VARIATION_SELECTORS	freetype/ttnameid.h	1135;"	d
TT_UCR_YI	freetype/ttnameid.h	1105;"	d
TT_UCR_YIJING	freetype/ttnameid.h	1156;"	d
TT_USE_BYTECODE_INTERPRETER	freetype/config/ftoption.h	945;"	d
TT_VertHeader	freetype/tttables.h	/^  } TT_VertHeader;$/;"	t	typeref:struct:TT_VertHeader_
TT_VertHeader_	freetype/tttables.h	/^  typedef struct  TT_VertHeader_$/;"	s
TUSECMAP	src/pdf_cmap_parse.c	/^	TUSECMAP = PDF_NTOKENS,$/;"	e	enum:__anon15	file:
TYPE1	src/pdf_font.c	/^enum { UNKNOWN, TYPE1, TRUETYPE };$/;"	e	enum:__anon16	file:
Table_Version	freetype/tttables.h	/^    FT_Fixed   Table_Version;$/;"	m	struct:TT_Header_
Tag	freetype/internal/tttypes.h	/^    FT_ULong  Tag;           \/* table ID                  *\/$/;"	m	struct:WOFF_TableRec_
Tag	freetype/internal/tttypes.h	/^    FT_ULong  Tag;        \/*        table type *\/$/;"	m	struct:TT_TableRec_
Testx	src/base_string.c	/^	Testx = Maskx ^ 0xFF,	\/* 1100 0000 *\/$/;"	e	enum:__anon2	file:
TrackKerns	freetype/internal/t1types.h	/^    AFM_TrackKern  TrackKerns;   \/* free if non-NULL *\/$/;"	m	struct:AFM_FontInfoRec_
Tx	src/base_string.c	/^	Tx = ((1<<(Bitx+1))-1) ^ 0xFF, \/* 1000 0000 *\/$/;"	e	enum:__anon2	file:
TypeFace	freetype/tttables.h	/^    FT_Char    TypeFace[16];$/;"	m	struct:TT_PCLT_
TypeFamily	freetype/tttables.h	/^    FT_UShort  TypeFamily;$/;"	m	struct:TT_PCLT_
UNCOMPRESSED	src/filt_faxd.c	/^	UNCOMPRESSED = -3$/;"	e	enum:__anon4	file:
UNKNOWN	src/pdf_font.c	/^enum { UNKNOWN, TYPE1, TRUETYPE };$/;"	e	enum:__anon16	file:
UTFmax	src/base_string.c	/^	UTFmax = 4, \/* maximum bytes per rune *\/$/;"	e	enum:__anon1	file:
Units_Per_EM	freetype/tttables.h	/^    FT_UShort  Units_Per_EM;$/;"	m	struct:TT_Header_
V0	src/filt_faxd.c	/^	V0 = 3,$/;"	e	enum:__anon5	file:
VL1	src/filt_faxd.c	/^	VL1 = 4,$/;"	e	enum:__anon5	file:
VL2	src/filt_faxd.c	/^	VL2 = 5,$/;"	e	enum:__anon5	file:
VL3	src/filt_faxd.c	/^	VL3 = 6$/;"	e	enum:__anon5	file:
VR1	src/filt_faxd.c	/^	VR1 = 2,$/;"	e	enum:__anon5	file:
VR2	src/filt_faxd.c	/^	VR2 = 1,$/;"	e	enum:__anon5	file:
VR3	src/filt_faxd.c	/^	VR3 = 0,$/;"	e	enum:__anon5	file:
Version	freetype/tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_HoriHeader_
Version	freetype/tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_PCLT_
Version	freetype/tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_VertHeader_
WAIT	inc/mypdf.h	/^enum { ARROW, HAND, WAIT };$/;"	e	enum:__anon17
WOFF_Header	freetype/internal/tttypes.h	/^  } WOFF_HeaderRec, *WOFF_Header;$/;"	t	typeref:struct:WOFF_HeaderRec_
WOFF_HeaderRec	freetype/internal/tttypes.h	/^  } WOFF_HeaderRec, *WOFF_Header;$/;"	t	typeref:struct:WOFF_HeaderRec_
WOFF_HeaderRec_	freetype/internal/tttypes.h	/^  typedef struct  WOFF_HeaderRec_$/;"	s
WOFF_Table	freetype/internal/tttypes.h	/^  } WOFF_TableRec, *WOFF_Table;$/;"	t	typeref:struct:WOFF_TableRec_
WOFF_TableRec	freetype/internal/tttypes.h	/^  } WOFF_TableRec, *WOFF_Table;$/;"	t	typeref:struct:WOFF_TableRec_
WOFF_TableRec_	freetype/internal/tttypes.h	/^  typedef struct  WOFF_TableRec_$/;"	s
WidthType	freetype/tttables.h	/^    FT_Char    WidthType;$/;"	m	struct:TT_PCLT_
ZEROS	src/filt_faxd.c	/^	ZEROS = -2, \/* EOL follows, possibly with more padding first *\/$/;"	e	enum:__anon4	file:
_FITZ_H_	inc/fitz.h	2;"	d
_MUPDF_H_	inc/pdf.h	2;"	d
__FTERRORS_H__	freetype/fterrors.h	113;"	d
__FTERRORS_H__	src/res_font.c	106;"	d	file:
__printflike	inc/fitz.h	102;"	d
__printflike	inc/fitz.h	105;"	d
_notdef	src/pdf_fontenc.c	4;"	d	file:
a	freetype/freetype.h	/^  FT_CeilFix( FT_Fixed  a );$/;"	v
a	freetype/freetype.h	/^  FT_FloorFix( FT_Fixed  a );$/;"	v
a	freetype/freetype.h	/^  FT_RoundFix( FT_Fixed  a );$/;"	v
a	inc/fitz.h	/^		} a;$/;"	m	union:fz_obj_s::__anon19	typeref:struct:fz_obj_s::__anon19::__anon21
a	inc/fitz.h	/^	float a, b, c, d, e, f;$/;"	m	struct:fz_matrix_s
a	src/filt_faxd.c	/^	int a, c, dim, eolc;$/;"	m	struct:fz_faxd_s	file:
abitmap	freetype/ftbitmap.h	/^  FT_Bitmap_Init( FT_Bitmap  *abitmap );$/;"	v
abitmap	freetype/ftbitmap.h	/^  FT_Bitmap_New( FT_Bitmap  *abitmap );$/;"	v
access_glyph_frame	freetype/internal/tttypes.h	/^    TT_Loader_StartGlyphFunc  access_glyph_frame;$/;"	m	struct:TT_FaceRec_
accumulate	inc/pdf.h	/^	int accumulate;$/;"	m	struct:pdf_csi_s
achVendID	freetype/tttables.h	/^    FT_Char    achVendID[4];$/;"	m	struct:TT_OS2_
add	freetype/internal/psaux.h	/^    (*add)( PS_Table  table,$/;"	m	struct:PS_Table_FuncsRec_
add_contour	freetype/internal/psaux.h	/^    T1_Builder_Add_Contour_Func    add_contour;$/;"	m	struct:T1_Builder_FuncsRec_
add_point	freetype/internal/psaux.h	/^    T1_Builder_Add_Point_Func      add_point;$/;"	m	struct:T1_Builder_FuncsRec_
add_point1	freetype/internal/psaux.h	/^    T1_Builder_Add_Point1_Func     add_point1;$/;"	m	struct:T1_Builder_FuncsRec_
addrange	src/pdf_cmap.c	/^addrange(pdf_cmap *cmap, int low, int high, int flag, int offset)$/;"	f	file:
addtable	src/pdf_cmap.c	/^addtable(pdf_cmap *cmap, int value)$/;"	f	file:
adjdown	inc/fitz.h	/^	int adjup, adjdown;$/;"	m	struct:fz_edge_s
adjup	inc/fitz.h	/^	int adjup, adjdown;$/;"	m	struct:fz_edge_s
advance	freetype/freetype.h	/^    FT_Vector         advance;$/;"	m	struct:FT_GlyphSlotRec_
advance	freetype/ftglyph.h	/^    FT_Vector              advance;$/;"	m	struct:FT_GlyphRec_
advance	freetype/ftincrem.h	/^    FT_Long  advance;$/;"	m	struct:FT_Incremental_MetricsRec_
advance	freetype/internal/psaux.h	/^    FT_Vector       advance;$/;"	m	struct:T1_BuilderRec_
advance	freetype/internal/tttypes.h	/^    FT_Byte  advance;$/;"	m	struct:TT_SBit_Small_Metrics_
advance	freetype/internal/tttypes.h	/^    FT_Int           advance;$/;"	m	struct:TT_LoaderRec_
advance	freetype/internal/tttypes.h	/^    FT_UShort  advance;$/;"	m	struct:TT_LongMetricsRec_
advance_Height_Max	freetype/tttables.h	/^    FT_UShort  advance_Height_Max;      \/* advance height maximum *\/$/;"	m	struct:TT_VertHeader_
advance_Width_Max	freetype/tttables.h	/^    FT_UShort  advance_Width_Max;      \/* advance width maximum *\/$/;"	m	struct:TT_HoriHeader_
advance_v	freetype/ftincrem.h	/^    FT_Long  advance_v;     \/* since 2.3.12 *\/$/;"	m	struct:FT_Incremental_MetricsRec_
afm_data	freetype/internal/t1types.h	/^    const void*     afm_data;$/;"	m	struct:T1_FaceRec_
afm_parser_funcs	freetype/internal/psaux.h	/^    const AFM_Parser_FuncsRec*  afm_parser_funcs;$/;"	m	struct:PSAux_ServiceRec_
age	src/pdf_store.c	/^	int age;$/;"	m	struct:pdf_item_s	file:
alibrary	freetype/freetype.h	/^  FT_Init_FreeType( FT_Library  *alibrary );$/;"	v
alloc	freetype/ftsystem.h	/^    FT_Alloc_Func    alloc;$/;"	m	struct:FT_MemoryRec_
alpha	inc/fitz.h	/^	float alpha;$/;"	m	struct:fz_displaynode_s
alpha	inc/pdf.h	/^	float alpha;$/;"	m	struct:pdf_material_s
angle	freetype/fttrigon.h	/^  FT_Cos( FT_Angle  angle );$/;"	v
angle	freetype/fttrigon.h	/^  FT_Sin( FT_Angle  angle );$/;"	v
angle	freetype/fttrigon.h	/^  FT_Tan( FT_Angle  angle );$/;"	v
annots	inc/pdf.h	/^	pdf_annot *annots;$/;"	m	struct:pdf_page_s
ap	inc/pdf.h	/^	pdf_xobject *ap;$/;"	m	struct:pdf_annot_s
apply	freetype/internal/pshints.h	/^    T1_Hints_ApplyFunc     apply;$/;"	m	struct:T1_Hints_FuncsRec_
apply	freetype/internal/pshints.h	/^    T2_Hints_ApplyFunc    apply;$/;"	m	struct:T2_Hints_FuncsRec_
arg1	freetype/internal/ftgloadr.h	/^    FT_Int     arg1;$/;"	m	struct:FT_SubGlyphRec_
arg2	freetype/internal/ftgloadr.h	/^    FT_Int     arg2;$/;"	m	struct:FT_SubGlyphRec_
array	inc/pdf.h	/^	fz_obj *array;$/;"	m	struct:pdf_csi_s
array_max	freetype/internal/psaux.h	/^    FT_UInt             array_max;    \/* maximum number of elements for *\/$/;"	m	struct:T1_FieldRec_
ascender	freetype/freetype.h	/^    FT_Pos     ascender;    \/* ascender in 26.6 frac. pixels          *\/$/;"	m	struct:FT_Size_Metrics_
ascender	freetype/freetype.h	/^    FT_Short          ascender;$/;"	m	struct:FT_FaceRec_
ascender	freetype/internal/tttypes.h	/^    FT_Char  ascender;$/;"	m	struct:TT_SBit_LineMetricsRec_
ascent	freetype/ftwinfnt.h	/^    FT_UShort  ascent;$/;"	m	struct:FT_WinFNT_HeaderRec_
ascent	inc/pdf.h	/^	float ascent;$/;"	m	struct:pdf_fontdesc_s
atom	freetype/ftbdf.h	/^      const char*     atom;$/;"	m	union:BDF_PropertyRec_::__anon35
attach_file	freetype/internal/ftdriver.h	/^    FT_Face_AttachFunc       attach_file;$/;"	m	struct:FT_Driver_ClassRec_
auto_hinter	freetype/internal/ftobjs.h	/^    FT_Module          auto_hinter;$/;"	m	struct:FT_LibraryRec_
autofit	freetype/internal/ftpic.h	/^    void*  autofit;$/;"	m	struct:FT_PIC_Container_
autohint	freetype/freetype.h	/^    FT_Generic        autohint;   \/* face-specific auto-hinter data *\/$/;"	m	struct:FT_FaceRec_
autohint_metrics	freetype/internal/ftobjs.h	/^    FT_Size_Metrics  autohint_metrics;$/;"	m	struct:FT_Size_InternalRec_
autohint_mode	freetype/internal/ftobjs.h	/^    FT_Render_Mode   autohint_mode;$/;"	m	struct:FT_Size_InternalRec_
avail	inc/fitz.h	/^	int avail;$/;"	m	struct:fz_stream_s
available_sizes	freetype/freetype.h	/^    FT_Bitmap_Size*   available_sizes;$/;"	m	struct:FT_FaceRec_
avg_width	freetype/ftwinfnt.h	/^    FT_UShort  avg_width;$/;"	m	struct:FT_WinFNT_HeaderRec_
axis	freetype/ftmm.h	/^    FT_MM_Axis  axis[T1_MAX_MM_AXIS];$/;"	m	struct:FT_Multi_Master_
axis	freetype/ftmm.h	/^    FT_Var_Axis*         axis;$/;"	m	struct:FT_MM_Var_
axis_names	freetype/t1tables.h	/^    FT_String*       axis_names[T1_MAX_MM_AXIS];$/;"	m	struct:PS_BlendRec_
b	inc/fitz.h	/^		int b;$/;"	m	union:fz_obj_s::__anon19
b	inc/fitz.h	/^	float a, b, c, d, e, f;$/;"	m	struct:fz_matrix_s
background	inc/fitz.h	/^	float background[FZ_MAXCOLORS];$/;"	m	struct:fz_shade_s
base	freetype/ftsystem.h	/^    unsigned char*       base;$/;"	m	struct:FT_StreamRec_
base	freetype/internal/ftgloadr.h	/^    FT_GlyphLoadRec  base;$/;"	m	struct:FT_GlyphLoaderRec_
base	freetype/internal/ftpic.h	/^    void*  base;$/;"	m	struct:FT_PIC_Container_
base	freetype/internal/ftvalid.h	/^    const FT_Byte*      base;        \/* address of table in memory       *\/$/;"	m	struct:FT_ValidatorRec_
base	freetype/internal/psaux.h	/^    FT_Byte*   base;$/;"	m	struct:PS_ParserRec_
base	freetype/internal/psaux.h	/^    FT_Byte*  base;$/;"	m	struct:T1_Decoder_ZoneRec_
base	freetype/internal/psaux.h	/^    FT_Outline*     base;$/;"	m	struct:T1_BuilderRec_
base	freetype/internal/tttypes.h	/^    TT_GlyphZoneRec  base;$/;"	m	struct:TT_LoaderRec_
basefontnames	src/pdf_font.c	/^static char *basefontnames[14][7] =$/;"	v	file:
basefonts	src/pdf_fontfile.c	/^} basefonts[] = {$/;"	v	typeref:struct:__anon10	file:
bbox	freetype/freetype.h	/^    FT_BBox           bbox;$/;"	m	struct:FT_FaceRec_
bbox	freetype/internal/psaux.h	/^    FT_BBox         bbox;          \/* bounding box *\/$/;"	m	struct:T1_BuilderRec_
bbox	freetype/internal/tttypes.h	/^    FT_BBox          bbox;$/;"	m	struct:TT_LoaderRec_
bbox	inc/fitz.h	/^	fz_bbox bbox;$/;"	m	struct:fz_gel_s
bbox	inc/fitz.h	/^	fz_bbox bbox;$/;"	m	struct:fz_textchar_s
bbox	inc/fitz.h	/^	fz_rect bbox;		\/* can be fz_infiniterect *\/$/;"	m	struct:fz_shade_s
bbox	inc/fitz.h	/^	fz_rect bbox;$/;"	m	struct:fz_font_s
bbox	inc/pdf.h	/^	fz_rect bbox;$/;"	m	struct:pdf_pattern_s
bbox	inc/pdf.h	/^	fz_rect bbox;$/;"	m	struct:pdf_xobject_s
bboxes	freetype/t1tables.h	/^    FT_BBox*         bboxes    [T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_
bdf	freetype/internal/tttypes.h	/^    TT_BDFRec             bdf;$/;"	m	struct:TT_FaceRec_
bearing	freetype/internal/tttypes.h	/^    FT_Short   bearing;$/;"	m	struct:TT_LongMetricsRec_
bearingX	freetype/internal/tttypes.h	/^    FT_Char  bearingX;$/;"	m	struct:TT_SBit_Small_Metrics_
bearingY	freetype/internal/tttypes.h	/^    FT_Char  bearingY;$/;"	m	struct:TT_SBit_Small_Metrics_
bearing_x	freetype/ftincrem.h	/^    FT_Long  bearing_x;$/;"	m	struct:FT_Incremental_MetricsRec_
bearing_y	freetype/ftincrem.h	/^    FT_Long  bearing_y;$/;"	m	struct:FT_Incremental_MetricsRec_
begingroup	inc/fitz.h	/^	void (*begingroup)(void *, fz_rect, int isolated, int knockout, fz_blendmode blendmode, float alpha);$/;"	m	struct:fz_device_s
beginmask	inc/fitz.h	/^	void (*beginmask)(void *, fz_rect, int luminosity, fz_colorspace *cs, float *bc);$/;"	m	struct:fz_device_s
bidx	src/filt_faxd.c	/^	int bidx;$/;"	m	struct:fz_faxd_s	file:
binary_data	freetype/internal/t1types.h	/^    FT_Byte*         binary_data; \/* used if hex data has been converted *\/$/;"	m	struct:CID_FaceRec_
bit_depth	freetype/internal/tttypes.h	/^    FT_Byte                 bit_depth;$/;"	m	struct:TT_SBit_StrikeRec_
bit_set	freetype/ftimage.h	/^    FT_Raster_BitSet_Func   bit_set;      \/* unused *\/$/;"	m	struct:FT_Raster_Params_
bit_test	freetype/ftimage.h	/^    FT_Raster_BitTest_Func  bit_test;     \/* unused *\/$/;"	m	struct:FT_Raster_Params_
bitmap	freetype/freetype.h	/^    FT_Bitmap         bitmap;$/;"	m	struct:FT_GlyphSlotRec_
bitmap	freetype/ftglyph.h	/^    FT_Bitmap    bitmap;$/;"	m	struct:FT_BitmapGlyphRec_
bitmap_left	freetype/freetype.h	/^    FT_Int            bitmap_left;$/;"	m	struct:FT_GlyphSlotRec_
bitmap_top	freetype/freetype.h	/^    FT_Int            bitmap_top;$/;"	m	struct:FT_GlyphSlotRec_
bits	inc/fitz.h	/^	int bits;$/;"	m	struct:fz_stream_s
bits_offset	freetype/ftwinfnt.h	/^    FT_ULong   bits_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_
bits_pointer	freetype/ftwinfnt.h	/^    FT_ULong   bits_pointer;$/;"	m	struct:FT_WinFNT_HeaderRec_
black_spans	freetype/ftimage.h	/^    FT_SpanFunc             black_spans;  \/* unused *\/$/;"	m	struct:FT_Raster_Params_
blackis1	src/filt_faxd.c	/^	int blackis1;$/;"	m	struct:fz_faxd_s	file:
blend	freetype/internal/psaux.h	/^    PS_Blend             blend;       \/* for multiple master support *\/$/;"	m	struct:T1_DecoderRec_
blend	freetype/internal/t1types.h	/^    PS_Blend        blend;$/;"	m	struct:T1_FaceRec_
blend	freetype/internal/tttypes.h	/^    GX_Blend              blend;$/;"	m	struct:TT_FaceRec_
blend_bitflags	freetype/t1tables.h	/^    FT_ULong         blend_bitflags;$/;"	m	struct:PS_BlendRec_
blend_points	freetype/t1tables.h	/^    FT_Fixed*  blend_points;$/;"	m	struct:PS_DesignMap_
blendmode	inc/fitz.h	/^		fz_blendmode blendmode;$/;"	m	union:fz_displaynode_s::__anon27
blendmode	inc/pdf.h	/^	fz_blendmode blendmode;$/;"	m	struct:pdf_gstate_s
block	freetype/internal/psaux.h	/^    FT_Byte*           block;          \/* current memory block           *\/$/;"	m	struct:PS_TableRec_
blue_fuzz	freetype/t1tables.h	/^    FT_Int     blue_fuzz;$/;"	m	struct:PS_PrivateRec_
blue_scale	freetype/t1tables.h	/^    FT_Fixed   blue_scale;$/;"	m	struct:PS_PrivateRec_
blue_shift	freetype/t1tables.h	/^    FT_Int     blue_shift;$/;"	m	struct:PS_PrivateRec_
blue_values	freetype/t1tables.h	/^    FT_Short   blue_values[14];$/;"	m	struct:PS_PrivateRec_
bp	inc/fitz.h	/^	unsigned char *bp, *rp, *wp, *ep;$/;"	m	struct:fz_stream_s
bp	src/filt_basic.c	/^	unsigned char bp[4];$/;"	m	struct:fz_a85d_s	file:
bp	src/filt_lzwd.c	/^	unsigned char bp[MAXLENGTH];$/;"	m	struct:fz_lzwd_s	file:
bpc	src/filt_predict.c	/^	int bpc;$/;"	m	struct:fz_predict_s	file:
bpp	src/filt_predict.c	/^	int bpp;$/;"	m	struct:fz_predict_s	file:
break_char	freetype/ftwinfnt.h	/^    FT_Byte    break_char;$/;"	m	struct:FT_WinFNT_HeaderRec_
buf	inc/fitz.h	/^			char buf[1];$/;"	m	struct:fz_obj_s::__anon19::__anon20
buf	inc/fitz.h	/^	unsigned char buf[4096];$/;"	m	struct:fz_stream_s
buf	inc/fitz.h	/^	unsigned long buf[68]; \/* unaligned data *\/$/;"	m	struct:fz_aes_s
buf	src/obj_print.c	/^	char *buf;$/;"	m	struct:fmt	file:
buffer	freetype/ftcache.h	/^    FT_Byte*  buffer;$/;"	m	struct:FTC_SBitRec_
buffer	freetype/ftimage.h	/^    unsigned char*  buffer;$/;"	m	struct:FT_Bitmap_
buffer	inc/fitz.h	/^	unsigned char buffer[64];$/;"	m	struct:fz_md5_s
buffer	inc/fitz.h	/^	} buffer;$/;"	m	struct:fz_sha256_s	typeref:union:fz_sha256_s::__anon18
buildchar	freetype/internal/psaux.h	/^    FT_Long*             buildchar;$/;"	m	struct:T1_DecoderRec_
buildchar	freetype/internal/t1types.h	/^    FT_Long*         buildchar;$/;"	m	struct:T1_FaceRec_
builder	freetype/internal/psaux.h	/^    T1_BuilderRec        builder;$/;"	m	struct:T1_DecoderRec_
buildfilter	src/pdf_stream.c	/^buildfilter(fz_stream *chain, pdf_xref * xref, fz_obj * f, fz_obj * p, int num, int gen)$/;"	f	file:
buildfilterchain	src/pdf_stream.c	/^buildfilterchain(fz_stream *chain, pdf_xref *xref, fz_obj *fs, fz_obj *ps, int num, int gen)$/;"	f	file:
byte_len	freetype/internal/tttypes.h	/^    FT_Int           byte_len;$/;"	m	struct:TT_LoaderRec_
bytes_per_row	freetype/ftwinfnt.h	/^    FT_UShort  bytes_per_row;$/;"	m	struct:FT_WinFNT_HeaderRec_
c	inc/fitz.h	/^	float a, b, c, d, e, f;$/;"	m	struct:fz_matrix_s
c	inc/fitz.h	/^	int c;$/;"	m	struct:fz_textchar_s
c	src/filt_basic.c	/^	int run, n, c;$/;"	m	struct:fz_rld_s	file:
c	src/filt_faxd.c	/^	int a, c, dim, eolc;$/;"	m	struct:fz_faxd_s	file:
cache	inc/mypdf.h	/^	fz_glyphcache *cache;$/;"	m	struct:mypdf_s
cap	inc/fitz.h	/^			int cap;$/;"	m	struct:fz_obj_s::__anon19::__anon21
cap	inc/fitz.h	/^			int cap;$/;"	m	struct:fz_obj_s::__anon19::__anon22
cap	inc/fitz.h	/^	int cap, len;$/;"	m	struct:fz_buffer_s
cap	inc/fitz.h	/^	int cap;$/;"	m	struct:fz_ael_s
cap	inc/fitz.h	/^	int cap;$/;"	m	struct:fz_gel_s
cap	inc/fitz.h	/^	int len, cap;$/;"	m	struct:fz_path_s
cap	inc/fitz.h	/^	int len, cap;$/;"	m	struct:fz_text_s
cap	inc/fitz.h	/^	int len, cap;$/;"	m	struct:fz_textspan_s
cap	src/obj_print.c	/^	int cap;$/;"	m	struct:fmt	file:
capacity	freetype/internal/psaux.h	/^    FT_Offset          capacity;       \/* current size of memory block   *\/$/;"	m	struct:PS_TableRec_
capheight	inc/pdf.h	/^	float capheight;$/;"	m	struct:pdf_fontdesc_s
cardinal	freetype/ftbdf.h	/^      FT_UInt32       cardinal;$/;"	m	union:BDF_PropertyRec_::__anon35
caret_Offset	freetype/tttables.h	/^    FT_Short   caret_Offset;$/;"	m	struct:TT_HoriHeader_
caret_Offset	freetype/tttables.h	/^    FT_Short   caret_Offset;$/;"	m	struct:TT_VertHeader_
caret_Slope_Rise	freetype/tttables.h	/^    FT_Short   caret_Slope_Rise;$/;"	m	struct:TT_HoriHeader_
caret_Slope_Rise	freetype/tttables.h	/^    FT_Short   caret_Slope_Rise;$/;"	m	struct:TT_VertHeader_
caret_Slope_Run	freetype/tttables.h	/^    FT_Short   caret_Slope_Run;$/;"	m	struct:TT_HoriHeader_
caret_Slope_Run	freetype/tttables.h	/^    FT_Short   caret_Slope_Run;$/;"	m	struct:TT_VertHeader_
caret_offset	freetype/internal/tttypes.h	/^    FT_Char  caret_offset;$/;"	m	struct:TT_SBit_LineMetricsRec_
caret_slope_denominator	freetype/internal/tttypes.h	/^    FT_Char  caret_slope_denominator;$/;"	m	struct:TT_SBit_LineMetricsRec_
caret_slope_numerator	freetype/internal/tttypes.h	/^    FT_Char  caret_slope_numerator;$/;"	m	struct:TT_SBit_LineMetricsRec_
cdv_idx	freetype/internal/t1types.h	/^    FT_Int           cdv_idx;$/;"	m	struct:T1_FaceRec_
cf	inc/pdf.h	/^	fz_obj *cf;$/;"	m	struct:pdf_crypt_s
cf_2d_decode	src/filt_faxd.c	/^const cfd_node cf_2d_decode[] = {$/;"	v
cf_black_decode	src/filt_faxd.c	/^const cfd_node cf_black_decode[] = {$/;"	v
cf_uncompressed_decode	src/filt_faxd.c	/^const cfd_node cf_uncompressed_decode[] = {$/;"	v
cf_white_decode	src/filt_faxd.c	/^const cfd_node cf_white_decode[] = {$/;"	v
cfd_2d_initial_bits	src/filt_faxd.c	/^	cfd_2d_initial_bits = 7,$/;"	e	enum:__anon3	file:
cfd_black_initial_bits	src/filt_faxd.c	/^	cfd_black_initial_bits = 7,$/;"	e	enum:__anon3	file:
cfd_node	src/filt_faxd.c	/^typedef struct cfd_node_s cfd_node;$/;"	t	typeref:struct:cfd_node_s	file:
cfd_node_s	src/filt_faxd.c	/^struct cfd_node_s$/;"	s	file:
cfd_uncompressed_initial_bits	src/filt_faxd.c	/^	cfd_uncompressed_initial_bits = 6	\/* must be 6 *\/$/;"	e	enum:__anon3	file:
cfd_white_initial_bits	src/filt_faxd.c	/^	cfd_white_initial_bits = 8,$/;"	e	enum:__anon3	file:
cff	freetype/internal/ftpic.h	/^    void*  cff;$/;"	m	struct:FT_PIC_Container_
cff	src/pdf_fontfile.c	/^	const unsigned char *cff;$/;"	m	struct:__anon10	file:
chain	src/filt_basic.c	/^	fz_stream *chain;$/;"	m	struct:fz_a85d_s	file:
chain	src/filt_basic.c	/^	fz_stream *chain;$/;"	m	struct:fz_ahxd_s	file:
chain	src/filt_basic.c	/^	fz_stream *chain;$/;"	m	struct:fz_rld_s	file:
chain	src/filt_basic.c	/^	fz_stream *chain;$/;"	m	struct:nullfilter	file:
chain	src/filt_faxd.c	/^	fz_stream *chain;$/;"	m	struct:fz_faxd_s	file:
chain	src/filt_flate.c	/^	fz_stream *chain;$/;"	m	struct:fz_flate_s	file:
chain	src/filt_lzwd.c	/^	fz_stream *chain;$/;"	m	struct:fz_lzwd_s	file:
chain	src/filt_predict.c	/^	fz_stream *chain;$/;"	m	struct:fz_predict_s	file:
char_index	freetype/internal/ftobjs.h	/^    FT_CMap_CharIndexFunc  char_index;$/;"	m	struct:FT_CMap_ClassRec_
char_index	freetype/internal/t1types.h	/^    FT_UShort*   char_index;$/;"	m	struct:T1_EncodingRecRec_
char_name	freetype/internal/t1types.h	/^    FT_String**  char_name;$/;"	m	struct:T1_EncodingRecRec_
char_next	freetype/internal/ftobjs.h	/^    FT_CMap_CharNextFunc   char_next;$/;"	m	struct:FT_CMap_ClassRec_
char_var_default	freetype/internal/ftobjs.h	/^    FT_CMap_CharVarIsDefaultFunc  char_var_default;$/;"	m	struct:FT_CMap_ClassRec_
char_var_index	freetype/internal/ftobjs.h	/^    FT_CMap_CharVarIndexFunc      char_var_index;$/;"	m	struct:FT_CMap_ClassRec_
charmap	freetype/freetype.h	/^    FT_CharMap        charmap;$/;"	m	struct:FT_FaceRec_
charmap	freetype/freetype.h	/^  FT_Get_Charmap_Index( FT_CharMap  charmap );$/;"	v
charmap	freetype/internal/ftobjs.h	/^    FT_CharMapRec  charmap;$/;"	m	struct:FT_CMapRec_
charmap	freetype/tttables.h	/^  FT_Get_CMap_Format( FT_CharMap  charmap );$/;"	v
charmap	freetype/tttables.h	/^  FT_Get_CMap_Language_ID( FT_CharMap  charmap );$/;"	v
charmaprecs	freetype/internal/t1types.h	/^    FT_CharMapRec   charmaprecs[2];$/;"	m	struct:T1_FaceRec_
charmaps	freetype/freetype.h	/^    FT_CharMap*       charmaps;$/;"	m	struct:FT_FaceRec_
charmaps	freetype/internal/t1types.h	/^    FT_CharMap      charmaps[2];$/;"	m	struct:T1_FaceRec_
charset	freetype/ftwinfnt.h	/^    FT_Byte    charset;$/;"	m	struct:FT_WinFNT_HeaderRec_
charspace	inc/pdf.h	/^	float charspace;$/;"	m	struct:pdf_gstate_s
charstrings	freetype/internal/t1types.h	/^    FT_Byte**        charstrings;       \/* array of glyph charstrings *\/$/;"	m	struct:T1_FontRec_
charstrings_block	freetype/internal/t1types.h	/^    FT_Byte*         charstrings_block;$/;"	m	struct:T1_FontRec_
charstrings_len	freetype/internal/t1types.h	/^    FT_UInt*         charstrings_len;$/;"	m	struct:T1_FontRec_
chartorune	src/base_string.c	/^chartorune(int *rune, char *str)$/;"	f
charvariant_list	freetype/internal/ftobjs.h	/^    FT_CMap_CharVariantListFunc   charvariant_list;$/;"	m	struct:FT_CMap_ClassRec_
check_points	freetype/internal/psaux.h	/^    T1_Builder_Check_Points_Func   check_points;$/;"	m	struct:T1_Builder_FuncsRec_
child	inc/pdf.h	/^	pdf_outline *child;$/;"	m	struct:pdf_outline_s
cid	freetype/internal/t1types.h	/^    CID_FaceInfoRec  cid;$/;"	m	struct:CID_FaceRec_
cid_count	freetype/t1tables.h	/^    FT_ULong        cid_count;$/;"	m	struct:CID_FaceInfoRec_
cid_font_name	freetype/t1tables.h	/^    FT_String*      cid_font_name;$/;"	m	struct:CID_FaceInfoRec_
cid_font_type	freetype/t1tables.h	/^    FT_Int          cid_font_type;$/;"	m	struct:CID_FaceInfoRec_
cid_stream	freetype/internal/t1types.h	/^    FT_Stream        cid_stream;$/;"	m	struct:CID_FaceRec_
cid_version	freetype/t1tables.h	/^    FT_Fixed        cid_version;$/;"	m	struct:CID_FaceInfoRec_
cidmap_offset	freetype/t1tables.h	/^    FT_ULong        cidmap_offset;$/;"	m	struct:CID_FaceInfoRec_
cidtogid	inc/pdf.h	/^	unsigned short *cidtogid;$/;"	m	struct:pdf_fontdesc_s
cidtoucs	inc/pdf.h	/^	unsigned short *cidtoucs;$/;"	m	struct:pdf_fontdesc_s
ckern_validate_func	freetype/internal/services/svgxval.h	/^  (*ckern_validate_func)( FT_Face   face,$/;"	t
clazz	freetype/ftglyph.h	/^    const FT_Glyph_Class*  clazz;$/;"	m	struct:FT_GlyphRec_
clazz	freetype/internal/ftobjs.h	/^    FT_CMap_Class  clazz;$/;"	m	struct:FT_CMapRec_
clazz	freetype/internal/ftobjs.h	/^    FT_Driver_Class  clazz;$/;"	m	struct:FT_DriverRec_
clazz	freetype/internal/ftobjs.h	/^    FT_Module_Class*  clazz;$/;"	m	struct:FT_ModuleRec_
clazz	freetype/internal/ftobjs.h	/^    FT_Renderer_Class*      clazz;$/;"	m	struct:FT_RendererRec_
cleanfontname	src/pdf_font.c	/^static char *cleanfontname(char *fontname)$/;"	f	file:
clip	inc/fitz.h	/^	fz_bbox clip;$/;"	m	struct:fz_gel_s
clip	inc/pdf.h	/^	int clip;$/;"	m	struct:pdf_csi_s
clip_box	freetype/ftimage.h	/^    FT_BBox                 clip_box;$/;"	m	struct:FT_Raster_Params_
clipdepth	inc/pdf.h	/^	int clipdepth;$/;"	m	struct:pdf_gstate_s
clipevenodd	inc/pdf.h	/^	int clipevenodd;$/;"	m	struct:pdf_csi_s
clipimagemask	inc/fitz.h	/^	void (*clipimagemask)(void *, fz_pixmap *img, fz_matrix ctm);$/;"	m	struct:fz_device_s
clippath	inc/fitz.h	/^	void (*clippath)(void *, fz_path *, int evenodd, fz_matrix);$/;"	m	struct:fz_device_s
clipstrokepath	inc/fitz.h	/^	void (*clipstrokepath)(void *, fz_path *, fz_strokestate *, fz_matrix);$/;"	m	struct:fz_device_s
clipstroketext	inc/fitz.h	/^	void (*clipstroketext)(void *, fz_text *, fz_strokestate *, fz_matrix);$/;"	m	struct:fz_device_s
cliptext	inc/fitz.h	/^	void (*cliptext)(void *, fz_text *, fz_matrix, int accumulate);$/;"	m	struct:fz_device_s
close	freetype/ftsystem.h	/^    FT_Stream_CloseFunc  close;$/;"	m	struct:FT_StreamRec_
close	freetype/internal/pshints.h	/^    T1_Hints_CloseFunc     close;$/;"	m	struct:T1_Hints_FuncsRec_
close	freetype/internal/pshints.h	/^    T2_Hints_CloseFunc    close;$/;"	m	struct:T2_Hints_FuncsRec_
close	inc/fitz.h	/^	void (*close)(fz_stream *stm);$/;"	m	struct:fz_stream_s
close_contour	freetype/internal/psaux.h	/^    T1_Builder_Close_Contour_Func  close_contour;$/;"	m	struct:T1_Builder_FuncsRec_
closea85d	src/filt_basic.c	/^closea85d(fz_stream *stm)$/;"	f	file:
closeahxd	src/filt_basic.c	/^closeahxd(fz_stream *stm)$/;"	f	file:
closebuffer	src/stm_open.c	/^static void closebuffer(fz_stream *stm)$/;"	f	file:
closefaxd	src/filt_faxd.c	/^closefaxd(fz_stream *stm)$/;"	f	file:
closefile	src/stm_open.c	/^static void closefile(fz_stream *stm)$/;"	f	file:
closeflated	src/filt_flate.c	/^closeflated(fz_stream *stm)$/;"	f	file:
closelzwd	src/filt_lzwd.c	/^closelzwd(fz_stream *stm)$/;"	f	file:
closenull	src/filt_basic.c	/^closenull(fz_stream *stm)$/;"	f	file:
closepredict	src/filt_predict.c	/^closepredict(fz_stream *stm)$/;"	f	file:
closerld	src/filt_basic.c	/^closerld(fz_stream *stm)$/;"	f	file:
cmap	freetype/internal/ftobjs.h	/^  FT_CMap_Done( FT_CMap  cmap );$/;"	v
cmap	freetype/internal/services/svpscmap.h	/^    FT_CMapRec  cmap;$/;"	m	struct:PS_UnicodesRec_
cmap_size	freetype/internal/tttypes.h	/^    FT_ULong              cmap_size;$/;"	m	struct:TT_FaceRec_
cmap_table	freetype/internal/tttypes.h	/^    FT_Byte*              cmap_table;   \/* extracted `cmap' table *\/$/;"	m	struct:TT_FaceRec_
cmapname	inc/pdf.h	/^	char cmapname[32];$/;"	m	struct:pdf_cmap_s
cmd	inc/fitz.h	/^	fz_displaycommand cmd;$/;"	m	struct:fz_displaynode_s
cmph	src/pdf_fontmtx.c	/^static int cmph(const void *a0, const void *b0)$/;"	f	file:
cmprange	src/pdf_cmap.c	/^static int cmprange(const void *va, const void *vb)$/;"	f	file:
cmpv	src/pdf_fontmtx.c	/^static int cmpv(const void *a0, const void *b0)$/;"	f	file:
code	freetype/internal/t1types.h	/^    FT_Byte**  code;$/;"	m	struct:CID_SubrsRec_
code	src/filt_lzwd.c	/^	int code;			\/* current code *\/$/;"	m	struct:fz_lzwd_s	file:
code_first	freetype/internal/t1types.h	/^    FT_Int       code_first;$/;"	m	struct:T1_EncodingRecRec_
code_last	freetype/internal/t1types.h	/^    FT_Int       code_last;$/;"	m	struct:T1_EncodingRecRec_
codebits	src/filt_lzwd.c	/^	int codebits;			\/* num bits\/code *\/$/;"	m	struct:fz_lzwd_s	file:
col	src/obj_print.c	/^	int col;$/;"	m	struct:fmt	file:
color	inc/fitz.h	/^	float color[FZ_MAXCOLORS];$/;"	m	struct:fz_displaynode_s
color_ref	freetype/internal/tttypes.h	/^    FT_ULong                color_ref;$/;"	m	struct:TT_SBit_StrikeRec_
color_table_offset	freetype/ftwinfnt.h	/^    FT_UShort  color_table_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_
colors	src/filt_predict.c	/^	int colors;$/;"	m	struct:fz_predict_s	file:
colorspace	inc/fitz.h	/^	fz_colorspace *colorspace;$/;"	m	struct:fz_displaynode_s
colorspace	inc/fitz.h	/^	fz_colorspace *colorspace;$/;"	m	struct:fz_pixmap_s
colorspace	inc/pdf.h	/^	fz_colorspace *colorspace;$/;"	m	struct:pdf_xobject_s
columns	src/filt_faxd.c	/^	int columns;$/;"	m	struct:fz_faxd_s	file:
columns	src/filt_predict.c	/^	int columns;$/;"	m	struct:fz_predict_s	file:
compare	freetype/internal/fthash.h	/^    FT_Hash_CompareFunc  compare;$/;"	m	struct:FT_HashRec_
composites	freetype/internal/tttypes.h	/^    FT_ListRec       composites;$/;"	m	struct:TT_LoaderRec_
conic_to	freetype/ftimage.h	/^    FT_Outline_ConicToFunc  conic_to;$/;"	m	struct:FT_Outline_Funcs_
contents	inc/pdf.h	/^	fz_buffer *contents;$/;"	m	struct:pdf_page_s
contents	inc/pdf.h	/^	fz_buffer *contents;$/;"	m	struct:pdf_pattern_s
contents	inc/pdf.h	/^	fz_buffer *contents;$/;"	m	struct:pdf_xobject_s
contours	freetype/ftimage.h	/^    short*      contours;        \/* the contour end points             *\/$/;"	m	struct:FT_Outline_
contours	freetype/internal/tttypes.h	/^    FT_UShort*  contours;    \/* contour end points          *\/$/;"	m	struct:TT_GlyphZoneRec_
control_data	freetype/freetype.h	/^    void*             control_data;$/;"	m	struct:FT_GlyphSlotRec_
control_len	freetype/freetype.h	/^    long              control_len;$/;"	m	struct:FT_GlyphSlotRec_
coords	freetype/ftmm.h	/^    FT_Fixed*  coords;$/;"	m	struct:FT_Var_Named_Style_
copyright	freetype/ftwinfnt.h	/^    FT_Byte    copyright[60];$/;"	m	struct:FT_WinFNT_HeaderRec_
count	freetype/internal/tttypes.h	/^    FT_Long    count;$/;"	m	struct:TTC_HeaderRec_
count	inc/fitz.h	/^	unsigned int count[2];$/;"	m	struct:fz_md5_s
count	inc/fitz.h	/^	unsigned int count[2];$/;"	m	struct:fz_sha256_s
count	inc/pdf.h	/^	int count;$/;"	m	struct:pdf_outline_s
count_offset	freetype/internal/psaux.h	/^    FT_UInt             count_offset; \/* offset of element count for    *\/$/;"	m	struct:T1_FieldRec_
counter	freetype/internal/pshints.h	/^    T2_Hints_CounterFunc  counter;$/;"	m	struct:T2_Hints_FuncsRec_
coverage	freetype/ftimage.h	/^    unsigned char   coverage;$/;"	m	struct:FT_Span_
cplusplus_typeof	freetype/internal/ftmemory.h	/^  cplusplus_typeof(        T*,$/;"	f
create	freetype/internal/pshints.h	/^    PSH_Globals_NewFunc       create;$/;"	m	struct:PSH_Globals_FuncsRec_
cropbox	src/pdf_pagetree.c	/^	fz_obj *cropbox;$/;"	m	struct:info	file:
crypt	inc/pdf.h	/^	pdf_crypt *crypt;$/;"	m	struct:pdf_xref_s
cs	inc/fitz.h	/^	fz_colorspace *cs;$/;"	m	struct:fz_shade_s
cs	inc/pdf.h	/^	fz_colorspace *cs;$/;"	m	struct:pdf_material_s
cspace	inc/pdf.h	/^	} cspace[40];$/;"	m	struct:pdf_cmap_s	typeref:struct:pdf_cmap_s::__anon31
ctm	inc/fitz.h	/^	fz_matrix ctm;$/;"	m	struct:fz_displaynode_s
ctm	inc/pdf.h	/^	fz_matrix ctm;$/;"	m	struct:pdf_gstate_s
cubic_to	freetype/ftimage.h	/^    FT_Outline_CubicToFunc  cubic_to;$/;"	m	struct:FT_Outline_Funcs_
cur	freetype/internal/tttypes.h	/^    FT_Vector*  cur;         \/* current point coordinates   *\/$/;"	m	struct:TT_GlyphZoneRec_
cur_renderer	freetype/internal/ftobjs.h	/^    FT_Renderer        cur_renderer;     \/* current outline renderer *\/$/;"	m	struct:FT_LibraryRec_
current	freetype/internal/ftgloadr.h	/^    FT_GlyphLoadRec  current;$/;"	m	struct:FT_GlyphLoaderRec_
current	freetype/internal/psaux.h	/^    FT_Outline*     current;$/;"	m	struct:T1_BuilderRec_
cursor	freetype/ftsystem.h	/^    unsigned char*       cursor;$/;"	m	struct:FT_StreamRec_
cursor	freetype/internal/psaux.h	/^    FT_Byte*   cursor;$/;"	m	struct:PS_ParserRec_
cursor	freetype/internal/psaux.h	/^    FT_Byte*  cursor;$/;"	m	struct:T1_Decoder_ZoneRec_
cursor	freetype/internal/psaux.h	/^    FT_Offset          cursor;         \/* current cursor in memory block *\/$/;"	m	struct:PS_TableRec_
cursor	freetype/internal/tttypes.h	/^    FT_Byte*         cursor;$/;"	m	struct:TT_LoaderRec_
custom	freetype/internal/psaux.h	/^    FT_CMap_Class  custom;$/;"	m	struct:T1_CMap_ClassesRec_
cvt	freetype/internal/tttypes.h	/^    FT_Short*             cvt;$/;"	m	struct:TT_FaceRec_
cvt_program	freetype/internal/tttypes.h	/^    FT_Byte*              cvt_program;$/;"	m	struct:TT_FaceRec_
cvt_program_size	freetype/internal/tttypes.h	/^    FT_ULong              cvt_program_size;$/;"	m	struct:TT_FaceRec_
cvt_size	freetype/internal/tttypes.h	/^    FT_ULong              cvt_size;$/;"	m	struct:TT_FaceRec_
d	inc/fitz.h	/^		} d;$/;"	m	union:fz_obj_s::__anon19	typeref:struct:fz_obj_s::__anon19::__anon22
d	inc/fitz.h	/^	float a, b, c, d, e, f;$/;"	m	struct:fz_matrix_s
dashlen	inc/fitz.h	/^	int dashlen;$/;"	m	struct:fz_strokestate_s
dashlist	inc/fitz.h	/^	float dashlist[32];$/;"	m	struct:fz_strokestate_s
dashphase	inc/fitz.h	/^	float dashphase;$/;"	m	struct:fz_strokestate_s
data	freetype/freetype.h	/^    FT_Pointer  data;$/;"	m	struct:FT_Parameter_
data	freetype/fttypes.h	/^    void*                 data;$/;"	m	struct:FT_Generic_
data	freetype/fttypes.h	/^    void*        data;$/;"	m	struct:FT_ListNodeRec_
data	freetype/internal/fthash.h	/^    size_t      data;$/;"	m	struct:FT_HashnodeRec_
data	inc/fitz.h	/^	unsigned char *data;$/;"	m	struct:fz_buffer_s
data	inc/fitz.h	/^	void *data;$/;"	m	struct:fz_colorspace_s
data_offset	freetype/t1tables.h	/^    FT_ULong        data_offset;$/;"	m	struct:CID_FaceInfoRec_
dead	inc/fitz.h	/^	int dead;$/;"	m	struct:fz_stream_s
debug_hooks	freetype/internal/ftobjs.h	/^    FT_DebugHook_Func  debug_hooks[4];$/;"	m	struct:FT_LibraryRec_
dec1d	src/filt_faxd.c	/^dec1d(fz_faxd *fax)$/;"	f	file:
dec2d	src/filt_faxd.c	/^dec2d(fz_faxd *fax)$/;"	f	file:
def	freetype/ftmm.h	/^    FT_Fixed    def;$/;"	m	struct:FT_Var_Axis_
default_char	freetype/ftwinfnt.h	/^    FT_Byte    default_char;$/;"	m	struct:FT_WinFNT_HeaderRec_
default_design_vector	freetype/t1tables.h	/^    FT_UInt          default_design_vector[T1_MAX_MM_DESIGNS];$/;"	m	struct:PS_BlendRec_
default_weight_vector	freetype/t1tables.h	/^    FT_Fixed*        default_weight_vector;$/;"	m	struct:PS_BlendRec_
degree	freetype/internal/t1types.h	/^    FT_Int    degree;$/;"	m	struct:AFM_TrackKernRec_
delta	freetype/ftimage.h	/^    FT_Pos                  delta;$/;"	m	struct:FT_Outline_Funcs_
descender	freetype/freetype.h	/^    FT_Pos     descender;   \/* descender in 26.6 frac. pixels         *\/$/;"	m	struct:FT_Size_Metrics_
descender	freetype/freetype.h	/^    FT_Short          descender;$/;"	m	struct:FT_FaceRec_
descender	freetype/internal/tttypes.h	/^    FT_Char  descender;$/;"	m	struct:TT_SBit_LineMetricsRec_
descent	inc/pdf.h	/^	float descent;$/;"	m	struct:pdf_fontdesc_s
descriptor	freetype/ftsystem.h	/^    FT_StreamDesc        descriptor;$/;"	m	struct:FT_StreamRec_
design_map	freetype/t1tables.h	/^    PS_DesignMapRec  design_map[T1_MAX_MM_AXIS];$/;"	m	struct:PS_BlendRec_
design_points	freetype/t1tables.h	/^    FT_Long*   design_points;$/;"	m	struct:PS_DesignMap_
design_pos	freetype/t1tables.h	/^    FT_Fixed*        design_pos[T1_MAX_MM_DESIGNS];$/;"	m	struct:PS_BlendRec_
dest	inc/pdf.h	/^	fz_obj *dest;$/;"	m	struct:pdf_link_s
destroy	freetype/internal/pshints.h	/^    PSH_Globals_DestroyFunc   destroy;$/;"	m	struct:PSH_Globals_FuncsRec_
dev	inc/pdf.h	/^	fz_device *dev;$/;"	m	struct:pdf_csi_s
device_offset	freetype/ftwinfnt.h	/^    FT_ULong   device_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_
dhmtx	inc/pdf.h	/^	pdf_hmtx dhmtx;$/;"	m	struct:pdf_fontdesc_s
dict	freetype/internal/psaux.h	/^    FT_UInt             dict;         \/* where we expect it             *\/$/;"	m	struct:T1_FieldRec_
die	src/pdfshow.c	/^void die(fz_error error)$/;"	f
dim	src/filt_faxd.c	/^	int a, c, dim, eolc;$/;"	m	struct:fz_faxd_s	file:
dir_tables	freetype/internal/tttypes.h	/^    TT_Table              dir_tables;$/;"	m	struct:TT_FaceRec_
doblend	freetype/internal/tttypes.h	/^    FT_Bool               doblend;$/;"	m	struct:TT_FaceRec_
doctitle	inc/mypdf.h	/^	char *doctitle;$/;"	m	struct:mypdf_s
done	freetype/internal/ftobjs.h	/^    FT_CMap_DoneFunc       done;$/;"	m	struct:FT_CMap_ClassRec_
done	freetype/internal/psaux.h	/^    (*done)( AFM_Parser  parser );$/;"	m	struct:AFM_Parser_FuncsRec_
done	freetype/internal/psaux.h	/^    (*done)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_
done	freetype/internal/psaux.h	/^    (*done)( PS_Table  table );$/;"	m	struct:PS_Table_FuncsRec_
done	freetype/internal/psaux.h	/^    (*done)( T1_Builder   builder );$/;"	m	struct:T1_Builder_FuncsRec_
done	freetype/internal/psaux.h	/^    (*done)( T1_Decoder  decoder );$/;"	m	struct:T1_Decoder_FuncsRec_
done_face	freetype/internal/ftdriver.h	/^    FT_Face_DoneFunc         done_face;$/;"	m	struct:FT_Driver_ClassRec_
done_face	freetype/internal/sfnt.h	/^    TT_Done_Face_Func            done_face;$/;"	m	struct:SFNT_Interface_
done_global_hints	freetype/internal/autohint.h	/^    FT_AutoHinter_GlobalDoneFunc   done_global_hints;$/;"	m	struct:FT_AutoHinter_InterfaceRec_
done_size	freetype/internal/ftdriver.h	/^    FT_Size_DoneFunc         done_size;$/;"	m	struct:FT_Driver_ClassRec_
done_slot	freetype/internal/ftdriver.h	/^    FT_Slot_DoneFunc         done_slot;$/;"	m	struct:FT_Driver_ClassRec_
driver	freetype/freetype.h	/^    FT_Driver         driver;$/;"	m	struct:FT_FaceRec_
driver	freetype/freetype.h	/^    FT_Module       driver;$/;"	m	struct:FT_Open_Args_
dropfunc	src/pdf_store.c	/^	void *dropfunc;$/;"	m	struct:pdf_item_s	file:
dropfunc	src/pdf_store.c	/^	void *dropfunc;$/;"	m	struct:refkey	file:
dst	src/filt_faxd.c	/^	unsigned char *dst;$/;"	m	struct:fz_faxd_s	file:
dvmtx	inc/pdf.h	/^	pdf_vmtx dvmtx;$/;"	m	struct:pdf_fontdesc_s
e	inc/fitz.h	/^	float a, b, c, d, e, f;$/;"	m	struct:fz_matrix_s
e	inc/fitz.h	/^	int x, e, h, y;$/;"	m	struct:fz_edge_s
earlychange	src/filt_lzwd.c	/^	int earlychange;$/;"	m	struct:fz_lzwd_s	file:
eatbits	src/filt_faxd.c	/^eatbits(fz_faxd *fax, int nbits)$/;"	f	file:
ebdt_size	freetype/internal/tttypes.h	/^    FT_ULong              ebdt_size;$/;"	m	struct:TT_FaceRec_
ebdt_start	freetype/internal/tttypes.h	/^    FT_ULong              ebdt_start;  \/* either `CBDT', `EBDT', or `bdat' *\/$/;"	m	struct:TT_FaceRec_
edges	inc/fitz.h	/^	fz_edge **edges;$/;"	m	struct:fz_ael_s
edges	inc/fitz.h	/^	fz_edge *edges;$/;"	m	struct:fz_gel_s
elements	freetype/internal/psaux.h	/^    FT_Byte**          elements;       \/* addresses of table elements *\/$/;"	m	struct:PS_TableRec_
els	inc/fitz.h	/^	fz_pathel *els;$/;"	m	struct:fz_path_s
els	inc/fitz.h	/^	fz_textel *els;$/;"	m	struct:fz_text_s
encodedbytealign	src/filt_faxd.c	/^	int encodedbytealign;$/;"	m	struct:fz_faxd_s	file:
encoding	freetype/freetype.h	/^    FT_Encoding  encoding;$/;"	m	struct:FT_CharMapRec_
encoding	freetype/internal/t1types.h	/^    T1_EncodingRec   encoding;$/;"	m	struct:T1_FontRec_
encoding	inc/pdf.h	/^	pdf_cmap *encoding;$/;"	m	struct:pdf_fontdesc_s
encodingID	freetype/internal/tttypes.h	/^    FT_UShort  encodingID;$/;"	m	struct:TT_NameRec_
encoding_id	freetype/freetype.h	/^    FT_UShort    encoding_id;$/;"	m	struct:FT_CharMapRec_
encoding_id	freetype/ftsnames.h	/^    FT_UShort  encoding_id;$/;"	m	struct:FT_SfntName_
encoding_type	freetype/internal/t1types.h	/^    T1_EncodingType  encoding_type;$/;"	m	struct:T1_FontRec_
encryptmetadata	inc/pdf.h	/^	int encryptmetadata;$/;"	m	struct:pdf_crypt_s
end_glyph	freetype/internal/tttypes.h	/^    FT_UShort               end_glyph;$/;"	m	struct:TT_SBit_StrikeRec_
endgroup	inc/fitz.h	/^	void (*endgroup)(void *);$/;"	m	struct:fz_device_s
endmask	inc/fitz.h	/^	void (*endmask)(void *);$/;"	m	struct:fz_device_s
endofblock	src/filt_faxd.c	/^	int endofblock;$/;"	m	struct:fz_faxd_s	file:
endofline	src/filt_faxd.c	/^	int endofline;$/;"	m	struct:fz_faxd_s	file:
entry	src/pdf_repair.c	/^struct entry$/;"	s	file:
entry_selector	freetype/internal/tttypes.h	/^    FT_UShort  entry_selector;$/;"	m	struct:SFNT_HeaderRec_
ents	src/base_hash.c	/^	fz_hashentry *ents;$/;"	m	struct:fz_hashtable_s	file:
eod	src/filt_basic.c	/^	int eod;$/;"	m	struct:fz_a85d_s	file:
eod	src/filt_basic.c	/^	int eod;$/;"	m	struct:fz_ahxd_s	file:
eod	src/filt_lzwd.c	/^	int eod;$/;"	m	struct:fz_lzwd_s	file:
eol	inc/fitz.h	/^	int eol;$/;"	m	struct:fz_textspan_s
eolc	src/filt_faxd.c	/^	int a, c, dim, eolc;$/;"	m	struct:fz_faxd_s	file:
ep	inc/fitz.h	/^	unsigned char *bp, *rp, *wp, *ep;$/;"	m	struct:fz_stream_s
err	src/res_font.c	/^	int err;$/;"	m	struct:ft_error	file:
error	freetype/internal/ftvalid.h	/^    FT_Error            error;       \/* error returned. 0 means success  *\/$/;"	m	struct:FT_ValidatorRec_
error	freetype/internal/psaux.h	/^    FT_Error   error;$/;"	m	struct:PS_ParserRec_
exec	freetype/internal/tttypes.h	/^    TT_ExecContext   exec;$/;"	m	struct:TT_LoaderRec_
expansion_factor	freetype/t1tables.h	/^    FT_Fixed       expansion_factor;$/;"	m	struct:CID_FaceDictRec_
expansion_factor	freetype/t1tables.h	/^    FT_Fixed   expansion_factor;$/;"	m	struct:PS_PrivateRec_
expert	freetype/internal/psaux.h	/^    FT_CMap_Class  expert;$/;"	m	struct:T1_CMap_ClassesRec_
extend	inc/fitz.h	/^	int extend[2];$/;"	m	struct:fz_shade_s
extensions	freetype/freetype.h	/^    void*             extensions; \/* unused                         *\/$/;"	m	struct:FT_FaceRec_
extentflags	inc/pdf.h	/^	unsigned short extentflags;$/;"	m	struct:pdf_range_s
external_leading	freetype/ftwinfnt.h	/^    FT_UShort  external_leading;$/;"	m	struct:FT_WinFNT_HeaderRec_
extra	freetype/internal/tttypes.h	/^    FT_Generic            extra;$/;"	m	struct:TT_FaceRec_
extra_points	freetype/internal/ftgloadr.h	/^    FT_Vector*   extra_points;  \/* extra points table        *\/$/;"	m	struct:FT_GlyphLoadRec_
extra_points2	freetype/internal/ftgloadr.h	/^    FT_Vector*   extra_points2; \/* second extra points table *\/$/;"	m	struct:FT_GlyphLoadRec_
f	inc/fitz.h	/^		float f;$/;"	m	union:fz_obj_s::__anon19
f	inc/fitz.h	/^	float a, b, c, d, e, f;$/;"	m	struct:fz_matrix_s
face	freetype/freetype.h	/^    FT_Face           face;      \/* parent face object              *\/$/;"	m	struct:FT_SizeRec_
face	freetype/freetype.h	/^    FT_Face           face;$/;"	m	struct:FT_GlyphSlotRec_
face	freetype/freetype.h	/^    FT_Face      face;$/;"	m	struct:FT_CharMapRec_
face	freetype/freetype.h	/^  FT_Done_Face( FT_Face  face );$/;"	v
face	freetype/freetype.h	/^  FT_Face_CheckTrueTypePatents( FT_Face  face );$/;"	v
face	freetype/freetype.h	/^  FT_Face_GetVariantSelectors( FT_Face  face );$/;"	v
face	freetype/freetype.h	/^  FT_Get_FSType_Flags( FT_Face  face );$/;"	v
face	freetype/freetype.h	/^  FT_Get_Postscript_Name( FT_Face  face );$/;"	v
face	freetype/freetype.h	/^  FT_Reference_Face( FT_Face  face );$/;"	v
face	freetype/ftautoh.h	/^    FT_Face     face;$/;"	m	struct:FT_Prop_GlyphToScriptMap_
face	freetype/ftautoh.h	/^    FT_Face  face;$/;"	m	struct:FT_Prop_IncreaseXHeight_
face	freetype/ftfntfmt.h	/^  FT_Get_Font_Format( FT_Face  face );$/;"	v
face	freetype/ftfntfmt.h	/^  FT_Get_X11_Font_Format( FT_Face  face );$/;"	v
face	freetype/ftsnames.h	/^  FT_Get_Sfnt_Name_Count( FT_Face  face );$/;"	v
face	freetype/internal/psaux.h	/^    FT_Face         face;$/;"	m	struct:T1_BuilderRec_
face	freetype/internal/tttypes.h	/^    TT_Face          face;$/;"	m	struct:TT_LoaderRec_
face	freetype/t1tables.h	/^  FT_Has_PS_Glyph_Names( FT_Face  face );$/;"	v
face_flags	freetype/freetype.h	/^    FT_Long           face_flags;$/;"	m	struct:FT_FaceRec_
face_id	freetype/ftcache.h	/^    FTC_FaceID  face_id;$/;"	m	struct:FTC_ImageTypeRec_
face_id	freetype/ftcache.h	/^    FTC_FaceID  face_id;$/;"	m	struct:FTC_ScalerRec_
face_index	freetype/freetype.h	/^    FT_Long           face_index;$/;"	m	struct:FT_FaceRec_
face_name_offset	freetype/ftwinfnt.h	/^    FT_ULong   face_name_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_
face_object_size	freetype/internal/ftdriver.h	/^    FT_Long                  face_object_size;$/;"	m	struct:FT_Driver_ClassRec_
faces_list	freetype/internal/ftobjs.h	/^    FT_ListRec       faces_list;$/;"	m	struct:FT_DriverRec_
family_blues	freetype/t1tables.h	/^    FT_Short   family_blues      [14];$/;"	m	struct:PS_PrivateRec_
family_name	freetype/freetype.h	/^    FT_String*        family_name;$/;"	m	struct:FT_FaceRec_
family_name	freetype/t1tables.h	/^    FT_String*  family_name;$/;"	m	struct:PS_FontInfoRec_
family_other_blues	freetype/t1tables.h	/^    FT_Short   family_other_blues[10];$/;"	m	struct:PS_PrivateRec_
fd_bytes	freetype/t1tables.h	/^    FT_Int          fd_bytes;$/;"	m	struct:CID_FaceInfoRec_
file	inc/pdf.h	/^	fz_stream *file;$/;"	m	struct:pdf_xref_s
file_size	freetype/ftwinfnt.h	/^    FT_ULong   file_size;$/;"	m	struct:FT_WinFNT_HeaderRec_
file_type	freetype/ftwinfnt.h	/^    FT_UShort  file_type;$/;"	m	struct:FT_WinFNT_HeaderRec_
filename	src/main.c	/^static char *filename;$/;"	v	file:
filesize	inc/pdf.h	/^	int filesize;$/;"	m	struct:pdf_xref_s
fill	inc/pdf.h	/^	pdf_material fill;$/;"	m	struct:pdf_gstate_s
fillbits	src/filt_faxd.c	/^fillbits(fz_faxd *fax)$/;"	f	file:
fillimage	inc/fitz.h	/^	void (*fillimage)(void *, fz_pixmap *img, fz_matrix ctm, float alpha);$/;"	m	struct:fz_device_s
fillimagemask	inc/fitz.h	/^	void (*fillimagemask)(void *, fz_pixmap *img, fz_matrix ctm, fz_colorspace *, float *color, float alpha);$/;"	m	struct:fz_device_s
fillpath	inc/fitz.h	/^	void (*fillpath)(void *, fz_path *, int evenodd, fz_matrix, fz_colorspace *, float *color, float alpha);$/;"	m	struct:fz_device_s
fillshade	inc/fitz.h	/^	void (*fillshade)(void *, fz_shade *shd, fz_matrix ctm, float alpha);$/;"	m	struct:fz_device_s
filltext	inc/fitz.h	/^	void (*filltext)(void *, fz_text *, fz_matrix, fz_colorspace *, float *color, float alpha);$/;"	m	struct:fz_device_s
finalizer	freetype/fttypes.h	/^    FT_Generic_Finalizer  finalizer;$/;"	m	struct:FT_Generic_
findchanging	src/filt_faxd.c	/^findchanging(const unsigned char *line, int x, int w)$/;"	f	file:
findchangingcolor	src/filt_faxd.c	/^findchangingcolor(const unsigned char *line, int x, int w, int color)$/;"	f	file:
first	inc/fitz.h	/^	fz_displaynode *first;$/;"	m	struct:fz_displaylist_s
first_char	freetype/ftwinfnt.h	/^    FT_Byte    first_char;$/;"	m	struct:FT_WinFNT_HeaderRec_
first_glyph	freetype/internal/tttypes.h	/^    FT_UShort           first_glyph;$/;"	m	struct:TT_SBit_RangeRec_
first_point	freetype/internal/tttypes.h	/^    FT_UShort   first_point; \/* offset of first (#0) point  *\/$/;"	m	struct:TT_GlyphZoneRec_
firstchar	src/filt_lzwd.c	/^	unsigned char firstchar;	\/* first token of string *\/$/;"	m	struct:lzw_code_s	file:
flag	inc/fitz.h	/^	int flag; \/* evenodd, accumulate, isolated\/knockout... *\/$/;"	m	struct:fz_displaynode_s
flags	freetype/freetype.h	/^    FT_UInt         flags;$/;"	m	struct:FT_Open_Args_
flags	freetype/ftcache.h	/^    FT_Int32    flags;$/;"	m	struct:FTC_ImageTypeRec_
flags	freetype/ftimage.h	/^    int                     flags;$/;"	m	struct:FT_Raster_Params_
flags	freetype/ftimage.h	/^    int         flags;           \/* outline masks                      *\/$/;"	m	struct:FT_Outline_
flags	freetype/ftwinfnt.h	/^    FT_ULong   flags;$/;"	m	struct:FT_WinFNT_HeaderRec_
flags	freetype/internal/ftgloadr.h	/^    FT_UShort  flags;$/;"	m	struct:FT_SubGlyphRec_
flags	freetype/internal/ftobjs.h	/^    FT_UInt         flags;$/;"	m	struct:FT_Slot_InternalRec_
flags	freetype/internal/tttypes.h	/^    FT_Char                 flags;$/;"	m	struct:TT_SBit_StrikeRec_
flags	inc/pdf.h	/^	int flags;$/;"	m	struct:pdf_fontdesc_s
flavor	freetype/internal/tttypes.h	/^    FT_ULong   flavor;$/;"	m	struct:WOFF_HeaderRec_
flex_state	freetype/internal/psaux.h	/^    FT_Int               flex_state;$/;"	m	struct:T1_DecoderRec_
flex_vectors	freetype/internal/psaux.h	/^    FT_Vector            flex_vectors[7];$/;"	m	struct:T1_DecoderRec_
fmt	src/obj_print.c	/^struct fmt$/;"	s	file:
fmtarray	src/obj_print.c	/^static void fmtarray(struct fmt *fmt, fz_obj *obj)$/;"	f	file:
fmtdict	src/obj_print.c	/^static void fmtdict(struct fmt *fmt, fz_obj *obj)$/;"	f	file:
fmthex	src/obj_print.c	/^static void fmthex(struct fmt *fmt, fz_obj *obj)$/;"	f	file:
fmtindent	src/obj_print.c	/^static inline void fmtindent(struct fmt *fmt)$/;"	f	file:
fmtname	src/obj_print.c	/^static void fmtname(struct fmt *fmt, fz_obj *obj)$/;"	f	file:
fmtobj	src/obj_print.c	/^static void fmtobj(struct fmt *fmt, fz_obj *obj)$/;"	f	file:
fmtputc	src/obj_print.c	/^static inline void fmtputc(struct fmt *fmt, int c)$/;"	f	file:
fmtputs	src/obj_print.c	/^static inline void fmtputs(struct fmt *fmt, char *s)$/;"	f	file:
fmtsep	src/obj_print.c	/^static inline void fmtsep(struct fmt *fmt)$/;"	f	file:
fmtstr	src/obj_print.c	/^static void fmtstr(struct fmt *fmt, fz_obj *obj)$/;"	f	file:
font	inc/fitz.h	/^	fz_font *font;$/;"	m	struct:fz_text_s
font	inc/fitz.h	/^	fz_font *font;$/;"	m	struct:fz_textspan_s
font	inc/pdf.h	/^	fz_font *font;$/;"	m	struct:pdf_fontdesc_s
font	inc/pdf.h	/^	pdf_fontdesc *font;$/;"	m	struct:pdf_gstate_s
font_bbox	freetype/internal/t1types.h	/^    FT_BBox          font_bbox;$/;"	m	struct:T1_FontRec_
font_bbox	freetype/t1tables.h	/^    FT_BBox         font_bbox;$/;"	m	struct:CID_FaceInfoRec_
font_dicts	freetype/t1tables.h	/^    CID_FaceDict    font_dicts;$/;"	m	struct:CID_FaceInfoRec_
font_extra	freetype/internal/t1types.h	/^    PS_FontExtraRec  font_extra;        \/* font info extra fields *\/$/;"	m	struct:T1_FontRec_
font_extra	freetype/internal/t1types.h	/^    PS_FontExtraRec  font_extra;$/;"	m	struct:CID_FaceRec_
font_id	freetype/internal/t1types.h	/^    FT_Long          font_id;$/;"	m	struct:T1_FontRec_
font_info	freetype/internal/t1types.h	/^    PS_FontInfoRec   font_info;         \/* font info dictionary   *\/$/;"	m	struct:T1_FontRec_
font_info	freetype/t1tables.h	/^    PS_FontInfoRec  font_info;$/;"	m	struct:CID_FaceInfoRec_
font_infos	freetype/t1tables.h	/^    PS_FontInfo      font_infos[T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_
font_matrix	freetype/internal/psaux.h	/^    FT_Matrix            font_matrix;$/;"	m	struct:T1_DecoderRec_
font_matrix	freetype/internal/t1types.h	/^    FT_Matrix        font_matrix;$/;"	m	struct:T1_FontRec_
font_matrix	freetype/t1tables.h	/^    FT_Matrix      font_matrix;$/;"	m	struct:CID_FaceDictRec_
font_name	freetype/internal/t1types.h	/^    FT_String*       font_name;         \/* top-level dictionary   *\/$/;"	m	struct:T1_FontRec_
font_offset	freetype/internal/psaux.h	/^    FT_Vector            font_offset;$/;"	m	struct:T1_DecoderRec_
font_offset	freetype/internal/t1types.h	/^    FT_Vector        font_offset;$/;"	m	struct:T1_FontRec_
font_offset	freetype/t1tables.h	/^    FT_Vector      font_offset;$/;"	m	struct:CID_FaceDictRec_
font_program	freetype/internal/tttypes.h	/^    FT_Byte*              font_program;$/;"	m	struct:TT_FaceRec_
font_program_size	freetype/internal/tttypes.h	/^    FT_ULong              font_program_size;$/;"	m	struct:TT_FaceRec_
font_type	freetype/internal/t1types.h	/^    FT_Byte          font_type;$/;"	m	struct:T1_FontRec_
font_type	freetype/t1tables.h	/^    FT_Byte        font_type;$/;"	m	struct:CID_FaceDictRec_
force_bold	freetype/t1tables.h	/^    FT_Bool    force_bold;$/;"	m	struct:PS_PrivateRec_
forcebold_threshold	freetype/t1tables.h	/^    FT_Fixed       forcebold_threshold;$/;"	m	struct:CID_FaceDictRec_
forget_glyph_frame	freetype/internal/tttypes.h	/^    TT_Loader_EndGlyphFunc    forget_glyph_frame;$/;"	m	struct:TT_FaceRec_
format	freetype/freetype.h	/^    FT_Glyph_Format   format;$/;"	m	struct:FT_GlyphSlotRec_
format	freetype/ftcache.h	/^    FT_Byte   format;$/;"	m	struct:FTC_SBitRec_
format	freetype/ftglyph.h	/^    FT_Glyph_Format        format;$/;"	m	struct:FT_GlyphRec_
format	freetype/internal/services/svttcmap.h	/^    FT_Long   format;$/;"	m	struct:TT_CMapInfo_
format	freetype/internal/tttypes.h	/^    FT_UShort       format;$/;"	m	struct:TT_NameTableRec_
format_20	freetype/internal/tttypes.h	/^      TT_Post_20Rec  format_20;$/;"	m	union:TT_Post_NamesRec_::__anon34
format_25	freetype/internal/tttypes.h	/^      TT_Post_25Rec  format_25;$/;"	m	union:TT_Post_NamesRec_::__anon34
format_tag	freetype/internal/tttypes.h	/^    FT_ULong              format_tag;$/;"	m	struct:TT_FaceRec_
format_tag	freetype/internal/tttypes.h	/^    FT_ULong   format_tag;$/;"	m	struct:SFNT_HeaderRec_
free	freetype/ftsystem.h	/^    FT_Free_Func     free;$/;"	m	struct:FT_MemoryRec_
free_eblc	freetype/internal/sfnt.h	/^    TT_Free_Table_Func           free_eblc;$/;"	m	struct:SFNT_Interface_
free_glyph_data	freetype/ftincrem.h	/^    FT_Incremental_FreeGlyphDataFunc    free_glyph_data;$/;"	m	struct:FT_Incremental_FuncsRec_
free_name	freetype/internal/sfnt.h	/^    TT_Free_Table_Func           free_name;$/;"	m	struct:SFNT_Interface_
free_psnames	freetype/internal/sfnt.h	/^    TT_Free_Table_Func           free_psnames;$/;"	m	struct:SFNT_Interface_
freedata	inc/fitz.h	/^	void (*freedata)(fz_colorspace *);$/;"	m	struct:fz_colorspace_s
freesamples	inc/fitz.h	/^	int freesamples;$/;"	m	struct:fz_pixmap_s
freeuser	inc/fitz.h	/^	void (*freeuser)(void *);$/;"	m	struct:fz_device_s
fromhex	src/filt_basic.c	/^static inline int fromhex(int a)$/;"	f	file:
fromhex	src/pdf_lex.c	/^fromhex(int ch)$/;"	f	file:
fromxyz	inc/fitz.h	/^	void (*fromxyz)(fz_colorspace *, float *xyz, float *dst);$/;"	m	struct:fz_colorspace_s
fsSelection	freetype/tttables.h	/^    FT_UShort  fsSelection;$/;"	m	struct:TT_OS2_
fsType	freetype/tttables.h	/^    FT_UShort  fsType;$/;"	m	struct:TT_OS2_
fs_type	freetype/internal/t1types.h	/^    FT_UShort  fs_type;$/;"	m	struct:PS_FontExtraRec_
ft_encoding_adobe_custom	freetype/freetype.h	809;"	d
ft_encoding_adobe_expert	freetype/freetype.h	808;"	d
ft_encoding_adobe_standard	freetype/freetype.h	807;"	d
ft_encoding_apple_roman	freetype/freetype.h	810;"	d
ft_encoding_big5	freetype/freetype.h	803;"	d
ft_encoding_gb2312	freetype/freetype.h	802;"	d
ft_encoding_johab	freetype/freetype.h	805;"	d
ft_encoding_latin_1	freetype/freetype.h	799;"	d
ft_encoding_latin_2	freetype/freetype.h	800;"	d
ft_encoding_none	freetype/freetype.h	796;"	d
ft_encoding_sjis	freetype/freetype.h	801;"	d
ft_encoding_symbol	freetype/freetype.h	798;"	d
ft_encoding_unicode	freetype/freetype.h	797;"	d
ft_encoding_wansung	freetype/freetype.h	804;"	d
ft_error	src/res_font.c	/^struct ft_error$/;"	s	file:
ft_errors	src/res_font.c	/^static const struct ft_error ft_errors[] =$/;"	v	typeref:struct:ft_error	file:
ft_errorstring	src/res_font.c	/^char *ft_errorstring(int err)$/;"	f
ft_fclose	freetype/config/ftstdlib.h	105;"	d
ft_fopen	freetype/config/ftstdlib.h	106;"	d
ft_frame_byte	freetype/internal/ftstream.h	/^    ft_frame_byte      = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTE,  0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_bytes	freetype/internal/ftstream.h	/^    ft_frame_bytes     = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTES, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_end	freetype/internal/ftstream.h	/^    ft_frame_end       = 0,$/;"	e	enum:FT_Frame_Op_
ft_frame_long_be	freetype/internal/ftstream.h	/^    ft_frame_long_be   = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_long_le	freetype/internal/ftstream.h	/^    ft_frame_long_le   = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_off3_be	freetype/internal/ftstream.h	/^    ft_frame_off3_be   = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_off3_le	freetype/internal/ftstream.h	/^    ft_frame_off3_le   = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_schar	freetype/internal/ftstream.h	/^    ft_frame_schar     = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTE,  0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_short_be	freetype/internal/ftstream.h	/^    ft_frame_short_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_short_le	freetype/internal/ftstream.h	/^    ft_frame_short_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_skip	freetype/internal/ftstream.h	/^    ft_frame_skip      = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTES, 0, 1 )$/;"	e	enum:FT_Frame_Op_
ft_frame_start	freetype/internal/ftstream.h	/^    ft_frame_start     = FT_MAKE_FRAME_OP( FT_FRAME_OP_START, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ulong_be	freetype/internal/ftstream.h	/^    ft_frame_ulong_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ulong_le	freetype/internal/ftstream.h	/^    ft_frame_ulong_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_uoff3_be	freetype/internal/ftstream.h	/^    ft_frame_uoff3_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_uoff3_le	freetype/internal/ftstream.h	/^    ft_frame_uoff3_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ushort_be	freetype/internal/ftstream.h	/^    ft_frame_ushort_be = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ushort_le	freetype/internal/ftstream.h	/^    ft_frame_ushort_le = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_fread	freetype/config/ftstdlib.h	107;"	d
ft_fseek	freetype/config/ftstdlib.h	108;"	d
ft_ftell	freetype/config/ftstdlib.h	109;"	d
ft_getenv	freetype/config/ftstdlib.h	146;"	d
ft_glyph_bbox_gridfit	freetype/ftglyph.h	332;"	d
ft_glyph_bbox_pixels	freetype/ftglyph.h	334;"	d
ft_glyph_bbox_subpixels	freetype/ftglyph.h	331;"	d
ft_glyph_bbox_truncate	freetype/ftglyph.h	333;"	d
ft_glyph_bbox_unscaled	freetype/ftglyph.h	330;"	d
ft_glyph_format_bitmap	freetype/ftimage.h	731;"	d
ft_glyph_format_composite	freetype/ftimage.h	730;"	d
ft_glyph_format_none	freetype/ftimage.h	729;"	d
ft_glyph_format_outline	freetype/ftimage.h	732;"	d
ft_glyph_format_plotter	freetype/ftimage.h	733;"	d
ft_hash_num_free	freetype/internal/fthash.h	107;"	d
ft_isalnum	freetype/internal/ftobjs.h	112;"	d
ft_isalpha	freetype/internal/ftobjs.h	111;"	d
ft_isdigit	freetype/internal/ftobjs.h	101;"	d
ft_islower	freetype/internal/ftobjs.h	109;"	d
ft_isupper	freetype/internal/ftobjs.h	108;"	d
ft_isxdigit	freetype/internal/ftobjs.h	103;"	d
ft_jmp_buf	freetype/config/ftstdlib.h	158;"	d
ft_kerning_default	freetype/freetype.h	3304;"	d
ft_kerning_unfitted	freetype/freetype.h	3305;"	d
ft_kerning_unscaled	freetype/freetype.h	3306;"	d
ft_longjmp	freetype/config/ftstdlib.h	162;"	d
ft_memchr	freetype/config/ftstdlib.h	80;"	d
ft_memcmp	freetype/config/ftstdlib.h	81;"	d
ft_memcpy	freetype/config/ftstdlib.h	82;"	d
ft_memmove	freetype/config/ftstdlib.h	83;"	d
ft_memset	freetype/config/ftstdlib.h	84;"	d
ft_module_driver_has_hinter	freetype/ftmodapi.h	133;"	d
ft_module_driver_hints_lightly	freetype/ftmodapi.h	134;"	d
ft_module_driver_no_outlines	freetype/ftmodapi.h	132;"	d
ft_module_driver_scalable	freetype/ftmodapi.h	131;"	d
ft_module_font_driver	freetype/ftmodapi.h	126;"	d
ft_module_hinter	freetype/ftmodapi.h	128;"	d
ft_module_renderer	freetype/ftmodapi.h	127;"	d
ft_module_styler	freetype/ftmodapi.h	129;"	d
ft_open_driver	freetype/freetype.h	1954;"	d
ft_open_memory	freetype/freetype.h	1951;"	d
ft_open_params	freetype/freetype.h	1955;"	d
ft_open_pathname	freetype/freetype.h	1953;"	d
ft_open_stream	freetype/freetype.h	1952;"	d
ft_outline_even_odd_fill	freetype/ftimage.h	443;"	d
ft_outline_high_precision	freetype/ftimage.h	446;"	d
ft_outline_ignore_dropouts	freetype/ftimage.h	445;"	d
ft_outline_none	freetype/ftimage.h	441;"	d
ft_outline_owner	freetype/ftimage.h	442;"	d
ft_outline_reverse_fill	freetype/ftimage.h	444;"	d
ft_outline_single_pass	freetype/ftimage.h	447;"	d
ft_pixel_mode_grays	freetype/ftimage.h	200;"	d
ft_pixel_mode_mono	freetype/ftimage.h	199;"	d
ft_pixel_mode_none	freetype/ftimage.h	198;"	d
ft_pixel_mode_pal2	freetype/ftimage.h	201;"	d
ft_pixel_mode_pal4	freetype/ftimage.h	202;"	d
ft_ptrdiff_t	freetype/config/ftstdlib.h	37;"	d
ft_qsort	freetype/config/ftstdlib.h	122;"	d
ft_raccess_guess_func	freetype/internal/ftrfork.h	/^  (*ft_raccess_guess_func)( FT_Library  library,$/;"	t
ft_raccess_guess_rec	freetype/internal/ftrfork.h	/^  } ft_raccess_guess_rec;$/;"	t	typeref:struct:ft_raccess_guess_rec_
ft_raccess_guess_rec_	freetype/internal/ftrfork.h	/^  typedef struct ft_raccess_guess_rec_ {$/;"	s
ft_raster_flag_aa	freetype/ftimage.h	948;"	d
ft_raster_flag_clip	freetype/ftimage.h	950;"	d
ft_raster_flag_default	freetype/ftimage.h	947;"	d
ft_raster_flag_direct	freetype/ftimage.h	949;"	d
ft_render_mode_mono	freetype/freetype.h	3154;"	d
ft_render_mode_normal	freetype/freetype.h	3153;"	d
ft_scalloc	freetype/config/ftstdlib.h	132;"	d
ft_setjmp	freetype/config/ftstdlib.h	163;"	d
ft_sfnt_head	freetype/tttables.h	629;"	d
ft_sfnt_hhea	freetype/tttables.h	632;"	d
ft_sfnt_maxp	freetype/tttables.h	630;"	d
ft_sfnt_os2	freetype/tttables.h	631;"	d
ft_sfnt_pclt	freetype/tttables.h	635;"	d
ft_sfnt_post	freetype/tttables.h	634;"	d
ft_sfnt_vhea	freetype/tttables.h	633;"	d
ft_sfree	freetype/config/ftstdlib.h	133;"	d
ft_smalloc	freetype/config/ftstdlib.h	134;"	d
ft_sprintf	freetype/config/ftstdlib.h	110;"	d
ft_srealloc	freetype/config/ftstdlib.h	135;"	d
ft_strcat	freetype/config/ftstdlib.h	85;"	d
ft_strcmp	freetype/config/ftstdlib.h	86;"	d
ft_strcpy	freetype/config/ftstdlib.h	87;"	d
ft_strlen	freetype/config/ftstdlib.h	88;"	d
ft_strncmp	freetype/config/ftstdlib.h	89;"	d
ft_strncpy	freetype/config/ftstdlib.h	90;"	d
ft_strrchr	freetype/config/ftstdlib.h	91;"	d
ft_strstr	freetype/config/ftstdlib.h	92;"	d
ft_strtol	freetype/config/ftstdlib.h	145;"	d
ftcharindex	src/pdf_font.c	/^static int ftcharindex(FT_Face face, int cid)$/;"	f	file:
ftcidtogid	src/pdf_font.c	/^static inline int ftcidtogid(pdf_fontdesc *fontdesc, int cid)$/;"	f	file:
ftdata	inc/fitz.h	/^	unsigned char *ftdata;$/;"	m	struct:fz_font_s
ftface	inc/fitz.h	/^	void *ftface; \/* has an FT_Face if used *\/$/;"	m	struct:fz_font_s
ftfile	inc/fitz.h	/^	char *ftfile;$/;"	m	struct:fz_font_s
fthint	inc/fitz.h	/^	int fthint; \/* ... force hinting for DynaLab fonts *\/$/;"	m	struct:fz_font_s
ftkind	src/pdf_font.c	/^static int ftkind(FT_Face face)$/;"	f	file:
ftsize	inc/fitz.h	/^	int ftsize;$/;"	m	struct:fz_font_s
ftsubstitute	inc/fitz.h	/^	int ftsubstitute; \/* ... substitute metrics *\/$/;"	m	struct:fz_font_s
ftwidth	src/pdf_font.c	/^static int ftwidth(pdf_fontdesc *fontdesc, int cid)$/;"	f	file:
full_name	freetype/t1tables.h	/^    FT_String*  full_name;$/;"	m	struct:PS_FontInfoRec_
func	freetype/internal/ftrfork.h	/^    ft_raccess_guess_func  func;$/;"	m	struct:ft_raccess_guess_rec_
funcs	freetype/ftincrem.h	/^    const FT_Incremental_FuncsRec*  funcs;$/;"	m	struct:FT_Incremental_InterfaceRec_
funcs	freetype/internal/psaux.h	/^    PS_Parser_FuncsRec  funcs;$/;"	m	struct:PS_ParserRec_
funcs	freetype/internal/psaux.h	/^    PS_Table_FuncsRec  funcs;$/;"	m	struct:PS_TableRec_
funcs	freetype/internal/psaux.h	/^    T1_Builder_FuncsRec  funcs;$/;"	m	struct:T1_BuilderRec_
funcs	freetype/internal/psaux.h	/^    T1_Decoder_FuncsRec  funcs;$/;"	m	struct:T1_DecoderRec_
function	inc/fitz.h	/^	float function[256][FZ_MAXCOLORS];$/;"	m	struct:fz_shade_s
fw	inc/pdf.h	/^    int fw;$/;"	m	struct:pdf_csi_s
fw	inc/pdf.h	/^    int fw;$/;"	m	struct:pdf_page_s
fz_a85d	src/filt_basic.c	/^typedef struct fz_a85d_s fz_a85d;$/;"	t	typeref:struct:fz_a85d_s	file:
fz_a85d_s	src/filt_basic.c	/^struct fz_a85d_s$/;"	s	file:
fz_ael	inc/fitz.h	/^typedef struct fz_ael_s fz_ael;$/;"	t	typeref:struct:fz_ael_s
fz_ael_s	inc/fitz.h	/^struct fz_ael_s$/;"	s
fz_aes	inc/fitz.h	/^typedef struct fz_aes_s fz_aes;$/;"	t	typeref:struct:fz_aes_s
fz_aes_s	inc/fitz.h	/^struct fz_aes_s$/;"	s
fz_ahxd	src/filt_basic.c	/^typedef struct fz_ahxd_s fz_ahxd;$/;"	t	typeref:struct:fz_ahxd_s	file:
fz_ahxd_s	src/filt_basic.c	/^struct fz_ahxd_s$/;"	s	file:
fz_arc4	inc/fitz.h	/^typedef struct fz_arc4_s fz_arc4;$/;"	t	typeref:struct:fz_arc4_s
fz_arc4_s	inc/fitz.h	/^struct fz_arc4_s$/;"	s
fz_arraydrop	src/obj_array.c	/^fz_arraydrop(fz_obj *obj)$/;"	f
fz_arrayget	src/obj_array.c	/^fz_arrayget(fz_obj *obj, int i)$/;"	f
fz_arrayinsert	src/obj_array.c	/^fz_arrayinsert(fz_obj *obj, fz_obj *item)$/;"	f
fz_arraylen	src/obj_array.c	/^fz_arraylen(fz_obj *obj)$/;"	f
fz_arraypush	src/obj_array.c	/^fz_arraypush(fz_obj *obj, fz_obj *item)$/;"	f
fz_arrayput	src/obj_array.c	/^fz_arrayput(fz_obj *obj, int i, fz_obj *item)$/;"	f
fz_bbox	inc/fitz.h	/^typedef struct fz_bbox_s fz_bbox;$/;"	t	typeref:struct:fz_bbox_s
fz_bbox_s	inc/fitz.h	/^struct fz_bbox_s$/;"	s
fz_blendmode	inc/fitz.h	/^} fz_blendmode;$/;"	t	typeref:enum:fz_blendmode_e
fz_blendmode_e	inc/fitz.h	/^typedef enum fz_blendmode_e$/;"	g
fz_buffer	inc/fitz.h	/^typedef struct fz_buffer_s fz_buffer;$/;"	t	typeref:struct:fz_buffer_s
fz_buffer_s	inc/fitz.h	/^struct fz_buffer_s$/;"	s
fz_calloc	src/base_memory.c	/^fz_calloc(int count, int size)$/;"	f
fz_catch	inc/fitz.h	68;"	d
fz_catch	inc/fitz.h	76;"	d
fz_catch	inc/fitz.h	84;"	d
fz_catch	inc/fitz.h	92;"	d
fz_catchimp	src/base_error.c	/^fz_catchimp(const char *file, int line, const char *func, fz_error cause, char *fmt, ...)$/;"	f
fz_catchimpx	src/base_error.c	/^fz_catchimpx(fz_error cause, char *fmt, ...)$/;"	f
fz_close	src/stm_open.c	/^fz_close(fz_stream *stm)$/;"	f
fz_colorspace	inc/fitz.h	/^typedef struct fz_colorspace_s fz_colorspace;$/;"	t	typeref:struct:fz_colorspace_s
fz_colorspace_s	inc/fitz.h	/^struct fz_colorspace_s$/;"	s
fz_copyarray	src/obj_array.c	/^fz_copyarray(fz_obj *obj)$/;"	f
fz_copydict	src/obj_dict.c	/^fz_copydict(fz_obj *obj)$/;"	f
fz_debugfont	src/res_font.c	/^fz_debugfont(fz_font *font)$/;"	f
fz_debughash	src/base_hash.c	/^fz_debughash(fz_hashtable *table)$/;"	f
fz_debugobj	src/obj_print.c	/^fz_debugobj(fz_obj *obj)$/;"	f
fz_debugref	src/obj_print.c	/^fz_debugref(fz_obj *ref)$/;"	f
fz_device	inc/fitz.h	/^typedef struct fz_device_s fz_device;$/;"	t	typeref:struct:fz_device_s
fz_device_s	inc/fitz.h	/^struct fz_device_s$/;"	s
fz_dictdel	src/obj_dict.c	/^fz_dictdel(fz_obj *obj, fz_obj *key)$/;"	f
fz_dictdels	src/obj_dict.c	/^fz_dictdels(fz_obj *obj, char *key)$/;"	f
fz_dictfinds	src/obj_dict.c	/^fz_dictfinds(fz_obj *obj, char *key)$/;"	f	file:
fz_dictget	src/obj_dict.c	/^fz_dictget(fz_obj *obj, fz_obj *key)$/;"	f
fz_dictgetkey	src/obj_dict.c	/^fz_dictgetkey(fz_obj *obj, int i)$/;"	f
fz_dictgets	src/obj_dict.c	/^fz_dictgets(fz_obj *obj, char *key)$/;"	f
fz_dictgetsa	src/obj_dict.c	/^fz_dictgetsa(fz_obj *obj, char *key, char *abbrev)$/;"	f
fz_dictgetval	src/obj_dict.c	/^fz_dictgetval(fz_obj *obj, int i)$/;"	f
fz_dictlen	src/obj_dict.c	/^fz_dictlen(fz_obj *obj)$/;"	f
fz_dictput	src/obj_dict.c	/^fz_dictput(fz_obj *obj, fz_obj *key, fz_obj *val)$/;"	f
fz_dictputs	src/obj_dict.c	/^fz_dictputs(fz_obj *obj, char *key, fz_obj *val)$/;"	f
fz_displaycommand	inc/fitz.h	/^} fz_displaycommand;$/;"	t	typeref:enum:fz_displaycommand_e
fz_displaycommand_e	inc/fitz.h	/^typedef enum fz_displaycommand_e$/;"	g
fz_displaylist	inc/fitz.h	/^typedef struct fz_displaylist_s fz_displaylist;$/;"	t	typeref:struct:fz_displaylist_s
fz_displaylist_s	inc/fitz.h	/^struct fz_displaylist_s$/;"	s
fz_displaynode	inc/fitz.h	/^typedef struct fz_displaynode_s fz_displaynode;$/;"	t	typeref:struct:fz_displaynode_s
fz_displaynode_s	inc/fitz.h	/^struct fz_displaynode_s$/;"	s
fz_dropbuffer	src/stm_buffer.c	/^fz_dropbuffer(fz_buffer *buf)$/;"	f
fz_dropfont	src/res_font.c	/^fz_dropfont(fz_font *font)$/;"	f
fz_dropobj	src/obj_simple.c	/^fz_dropobj(fz_obj *o)$/;"	f
fz_edge	inc/fitz.h	/^typedef struct fz_edge_s fz_edge;$/;"	t	typeref:struct:fz_edge_s
fz_edge_s	inc/fitz.h	/^struct fz_edge_s$/;"	s
fz_emptyhash	src/base_hash.c	/^fz_emptyhash(fz_hashtable *table)$/;"	f
fz_error	inc/fitz.h	/^typedef int fz_error;$/;"	t
fz_faxd	src/filt_faxd.c	/^typedef struct fz_faxd_s fz_faxd;$/;"	t	typeref:struct:fz_faxd_s	file:
fz_faxd_s	src/filt_faxd.c	/^struct fz_faxd_s$/;"	s	file:
fz_fillbuffer	src/stm_read.c	/^fz_fillbuffer(fz_stream *stm)$/;"	f
fz_finalizefreetype	src/res_font.c	/^fz_finalizefreetype(void)$/;"	f	file:
fz_flate	src/filt_flate.c	/^typedef struct fz_flate_s fz_flate;$/;"	t	typeref:struct:fz_flate_s	file:
fz_flate_s	src/filt_flate.c	/^struct fz_flate_s$/;"	s	file:
fz_font	inc/fitz.h	/^typedef struct fz_font_s fz_font;$/;"	t	typeref:struct:fz_font_s
fz_font_s	inc/fitz.h	/^struct fz_font_s$/;"	s
fz_fprintobj	src/obj_print.c	/^fz_fprintobj(FILE *fp, fz_obj *obj, int tight)$/;"	f
fz_free	src/base_memory.c	/^fz_free(void *p)$/;"	f
fz_freearray	src/obj_array.c	/^fz_freearray(fz_obj *obj)$/;"	f
fz_freedict	src/obj_dict.c	/^fz_freedict(fz_obj *obj)$/;"	f
fz_freehash	src/base_hash.c	/^fz_freehash(fz_hashtable *table)$/;"	f
fz_ftlib	src/res_font.c	/^static FT_Library fz_ftlib = nil;$/;"	v	file:
fz_ftlib_refs	src/res_font.c	/^static int fz_ftlib_refs = 0;$/;"	v	file:
fz_gel	inc/fitz.h	/^typedef struct fz_gel_s fz_gel;$/;"	t	typeref:struct:fz_gel_s
fz_gel_s	inc/fitz.h	/^struct fz_gel_s$/;"	s
fz_glyphcache	inc/fitz.h	/^typedef struct fz_glyphcache_s fz_glyphcache;$/;"	t	typeref:struct:fz_glyphcache_s
fz_growbuffer	src/stm_buffer.c	/^fz_growbuffer(fz_buffer *buf)$/;"	f
fz_hashentry	src/base_hash.c	/^typedef struct fz_hashentry_s fz_hashentry;$/;"	t	typeref:struct:fz_hashentry_s	file:
fz_hashentry_s	src/base_hash.c	/^struct fz_hashentry_s$/;"	s	file:
fz_hashfind	src/base_hash.c	/^fz_hashfind(fz_hashtable *table, void *key)$/;"	f
fz_hashgetkey	src/base_hash.c	/^fz_hashgetkey(fz_hashtable *table, int idx)$/;"	f
fz_hashgetval	src/base_hash.c	/^fz_hashgetval(fz_hashtable *table, int idx)$/;"	f
fz_hashinsert	src/base_hash.c	/^fz_hashinsert(fz_hashtable *table, void *key, void *val)$/;"	f
fz_hashlen	src/base_hash.c	/^fz_hashlen(fz_hashtable *table)$/;"	f
fz_hashremove	src/base_hash.c	/^fz_hashremove(fz_hashtable *table, void *key)$/;"	f
fz_hashtable	inc/fitz.h	/^typedef struct fz_hashtable_s fz_hashtable;$/;"	t	typeref:struct:fz_hashtable_s
fz_hashtable_s	src/base_hash.c	/^struct fz_hashtable_s$/;"	s	file:
fz_identity	src/mypdf.c	/^const fz_matrix fz_identity = { 1, 0, 0, 1, 0, 0 };$/;"	v
fz_initfreetype	src/res_font.c	/^fz_initfreetype(void)$/;"	f	file:
fz_isarray	src/obj_simple.c	/^int fz_isarray(fz_obj *obj)$/;"	f
fz_isbigendian	src/base_string.c	/^fz_isbigendian(void)$/;"	f
fz_isbool	src/obj_simple.c	/^int fz_isbool(fz_obj *obj)$/;"	f
fz_isdict	src/obj_simple.c	/^int fz_isdict(fz_obj *obj)$/;"	f
fz_isemptybbox	inc/fitz.h	223;"	d
fz_isemptyrect	inc/fitz.h	221;"	d
fz_isindirect	src/obj_simple.c	/^int fz_isindirect(fz_obj *obj)$/;"	f
fz_isinfinitebbox	inc/fitz.h	224;"	d
fz_isinfiniterect	inc/fitz.h	222;"	d
fz_isint	src/obj_simple.c	/^int fz_isint(fz_obj *obj)$/;"	f
fz_isname	src/obj_simple.c	/^int fz_isname(fz_obj *obj)$/;"	f
fz_isnull	src/obj_simple.c	/^int fz_isnull(fz_obj *obj)$/;"	f
fz_isreal	src/obj_simple.c	/^int fz_isreal(fz_obj *obj)$/;"	f
fz_isstring	src/obj_simple.c	/^int fz_isstring(fz_obj *obj)$/;"	f
fz_keepbuffer	src/stm_buffer.c	/^fz_keepbuffer(fz_buffer *buf)$/;"	f
fz_keepfont	src/res_font.c	/^fz_keepfont(fz_font *font)$/;"	f
fz_keepobj	src/obj_simple.c	/^fz_keepobj(fz_obj *o)$/;"	f
fz_keepstream	src/stm_open.c	/^fz_keepstream(fz_stream *stm)$/;"	f
fz_keyval	inc/fitz.h	/^typedef struct fz_keyval_s fz_keyval;$/;"	t	typeref:struct:fz_keyval_s
fz_keyval_s	inc/fitz.h	/^struct fz_keyval_s$/;"	s
fz_lzwd	src/filt_lzwd.c	/^typedef struct fz_lzwd_s fz_lzwd;$/;"	t	typeref:struct:fz_lzwd_s	file:
fz_lzwd_s	src/filt_lzwd.c	/^struct fz_lzwd_s$/;"	s	file:
fz_malloc	src/base_memory.c	/^fz_malloc(int size)$/;"	f
fz_matrix	inc/fitz.h	/^typedef struct fz_matrix_s fz_matrix;$/;"	t	typeref:struct:fz_matrix_s
fz_matrix_s	inc/fitz.h	/^struct fz_matrix_s$/;"	s
fz_md5	inc/fitz.h	/^typedef struct fz_md5_s fz_md5;$/;"	t	typeref:struct:fz_md5_s
fz_md5_s	inc/fitz.h	/^struct fz_md5_s$/;"	s
fz_mul255	inc/fitz.h	/^static inline int fz_mul255(int a, int b)$/;"	f
fz_newarray	src/obj_array.c	/^fz_newarray(int initialcap)$/;"	f
fz_newbool	src/obj_simple.c	/^fz_newbool(int b)$/;"	f
fz_newbuffer	src/stm_buffer.c	/^fz_newbuffer(int size)$/;"	f
fz_newdict	src/obj_dict.c	/^fz_newdict(int initialcap)$/;"	f
fz_newfont	src/res_font.c	/^fz_newfont(void)$/;"	f	file:
fz_newfontfrombuffer	src/res_font.c	/^fz_newfontfrombuffer(fz_font **fontp, unsigned char *data, int len, int index)$/;"	f
fz_newfontfromfile	src/res_font.c	/^fz_newfontfromfile(fz_font **fontp, char *path, int index)$/;"	f
fz_newhash	src/base_hash.c	/^fz_newhash(int initialsize, int keylen)$/;"	f
fz_newindirect	src/obj_simple.c	/^fz_newindirect(int num, int gen, pdf_xref *xref)$/;"	f
fz_newint	src/obj_simple.c	/^fz_newint(int i)$/;"	f
fz_newname	src/obj_simple.c	/^fz_newname(char *str)$/;"	f
fz_newnull	src/obj_simple.c	/^fz_newnull(void)$/;"	f
fz_newreal	src/obj_simple.c	/^fz_newreal(float f)$/;"	f
fz_newstream	src/stm_open.c	/^fz_newstream(void *state,$/;"	f
fz_newstring	src/obj_simple.c	/^fz_newstring(char *str, int len)$/;"	f
fz_newtype3font	src/res_font.c	/^fz_newtype3font(char *name, fz_matrix matrix)$/;"	f
fz_obj	inc/fitz.h	/^typedef struct fz_obj_s fz_obj;$/;"	t	typeref:struct:fz_obj_s
fz_obj_s	inc/fitz.h	/^struct fz_obj_s$/;"	s
fz_objcmp	src/obj_simple.c	/^fz_objcmp(fz_obj *a, fz_obj *b)$/;"	f
fz_objkind	inc/fitz.h	/^} fz_objkind;$/;"	t	typeref:enum:fz_objkind_e
fz_objkind_e	inc/fitz.h	/^typedef enum fz_objkind_e$/;"	g
fz_objkindstr	src/obj_simple.c	/^char *fz_objkindstr(fz_obj *obj)$/;"	f
fz_okay	inc/fitz.h	125;"	d
fz_opena85d	src/filt_basic.c	/^fz_opena85d(fz_stream *chain)$/;"	f
fz_openahxd	src/filt_basic.c	/^fz_openahxd(fz_stream *chain)$/;"	f
fz_openbuffer	src/stm_open.c	/^fz_openbuffer(fz_buffer *buf)$/;"	f
fz_opencopy	src/filt_basic.c	/^fz_opencopy(fz_stream *chain)$/;"	f
fz_openfaxd	src/filt_faxd.c	/^fz_openfaxd(fz_stream *chain, fz_obj *params)$/;"	f
fz_openfile	src/stm_open.c	/^fz_openfile(int fd)$/;"	f
fz_openflated	src/filt_flate.c	/^fz_openflated(fz_stream *chain)$/;"	f
fz_openlzwd	src/filt_lzwd.c	/^fz_openlzwd(fz_stream *chain, fz_obj *params)$/;"	f
fz_opennull	src/filt_basic.c	/^fz_opennull(fz_stream *chain, int len)$/;"	f
fz_openpredict	src/filt_predict.c	/^fz_openpredict(fz_stream *chain, fz_obj *params)$/;"	f
fz_openrld	src/filt_basic.c	/^fz_openrld(fz_stream *chain)$/;"	f
fz_path	inc/fitz.h	/^typedef struct fz_path_s fz_path;$/;"	t	typeref:struct:fz_path_s
fz_path_s	inc/fitz.h	/^struct fz_path_s$/;"	s
fz_pathel	inc/fitz.h	/^typedef union fz_pathel_s fz_pathel;$/;"	t	typeref:union:fz_pathel_s
fz_pathel_s	inc/fitz.h	/^union fz_pathel_s$/;"	u
fz_pathelkind	inc/fitz.h	/^} fz_pathelkind;$/;"	t	typeref:enum:fz_pathelkind_e
fz_pathelkind_e	inc/fitz.h	/^typedef enum fz_pathelkind_e$/;"	g
fz_peekbyte	inc/fitz.h	/^static inline int fz_peekbyte(fz_stream *stm)$/;"	f
fz_pixmap	inc/fitz.h	/^typedef struct fz_pixmap_s fz_pixmap;$/;"	t	typeref:struct:fz_pixmap_s
fz_pixmap_s	inc/fitz.h	/^struct fz_pixmap_s$/;"	s
fz_point	inc/fitz.h	/^typedef struct fz_point_s fz_point;$/;"	t	typeref:struct:fz_point_s
fz_point_s	inc/fitz.h	/^struct fz_point_s$/;"	s
fz_predict	src/filt_predict.c	/^typedef struct fz_predict_s fz_predict;$/;"	t	typeref:struct:fz_predict_s	file:
fz_predict_s	src/filt_predict.c	/^struct fz_predict_s$/;"	s	file:
fz_predictpng	src/filt_predict.c	/^fz_predictpng(fz_predict *state, unsigned char *out, unsigned char *in, int len, int predictor)$/;"	f	file:
fz_predicttiff	src/filt_predict.c	/^fz_predicttiff(fz_predict *state, unsigned char *out, unsigned char *in, int len)$/;"	f	file:
fz_read	src/stm_read.c	/^fz_read(fz_stream *stm, unsigned char *buf, int len)$/;"	f
fz_readall	src/stm_read.c	/^fz_readall(fz_buffer **bufp, fz_stream *stm, int initial)$/;"	f
fz_readbits	inc/fitz.h	/^static inline unsigned int fz_readbits(fz_stream *stm, int n)$/;"	f
fz_readbyte	inc/fitz.h	/^static inline int fz_readbyte(fz_stream *stm)$/;"	f
fz_readline	src/stm_read.c	/^fz_readline(fz_stream *stm, char *mem, int n)$/;"	f
fz_realloc	src/base_memory.c	/^fz_realloc(void *p, int count, int size)$/;"	f
fz_rect	inc/fitz.h	/^typedef struct fz_rect_s fz_rect;$/;"	t	typeref:struct:fz_rect_s
fz_rect_s	inc/fitz.h	/^struct fz_rect_s$/;"	s
fz_repairobj	src/pdf_repair.c	/^fz_repairobj(fz_stream *file, char *buf, int cap, int *stmofsp, int *stmlenp, fz_obj **encrypt, fz_obj **id)$/;"	f	file:
fz_resizebuffer	src/stm_buffer.c	/^fz_resizebuffer(fz_buffer *buf, int size)$/;"	f
fz_resizehash	src/base_hash.c	/^fz_resizehash(fz_hashtable *table, int newsize)$/;"	f	file:
fz_resolveindirect	src/obj_simple.c	/^fz_obj *fz_resolveindirect(fz_obj *ref)$/;"	f
fz_rethrow	inc/fitz.h	67;"	d
fz_rethrow	inc/fitz.h	75;"	d
fz_rethrow	inc/fitz.h	83;"	d
fz_rethrow	inc/fitz.h	91;"	d
fz_rethrowimp	src/base_error.c	/^fz_rethrowimp(const char *file, int line, const char *func, fz_error cause, char *fmt, ...)$/;"	f
fz_rethrowimpx	src/base_error.c	/^fz_rethrowimpx(fz_error cause, char *fmt, ...)$/;"	f
fz_rld	src/filt_basic.c	/^typedef struct fz_rld_s fz_rld;$/;"	t	typeref:struct:fz_rld_s	file:
fz_rld_s	src/filt_basic.c	/^struct fz_rld_s$/;"	s	file:
fz_seek	src/stm_read.c	/^fz_seek(fz_stream *stm, int offset, int whence)$/;"	f
fz_setfontbbox	src/res_font.c	/^fz_setfontbbox(fz_font *font, float xmin, float ymin, float xmax, float ymax)$/;"	f
fz_sha256	inc/fitz.h	/^typedef struct fz_sha256_s fz_sha256;$/;"	t	typeref:struct:fz_sha256_s
fz_sha256_s	inc/fitz.h	/^struct fz_sha256_s$/;"	s
fz_shade	inc/fitz.h	/^typedef struct fz_shade_s fz_shade;$/;"	t	typeref:struct:fz_shade_s
fz_shade_s	inc/fitz.h	/^struct fz_shade_s$/;"	s
fz_sortdict	src/obj_dict.c	/^fz_sortdict(fz_obj *obj)$/;"	f
fz_sprintobj	src/obj_print.c	/^fz_sprintobj(char *s, int n, fz_obj *obj, int tight)$/;"	f	file:
fz_strdup	src/base_memory.c	/^fz_strdup(char *s)$/;"	f
fz_stream	inc/fitz.h	/^typedef struct fz_stream_s fz_stream;$/;"	t	typeref:struct:fz_stream_s
fz_stream_s	inc/fitz.h	/^struct fz_stream_s$/;"	s
fz_strlcat	src/base_string.c	/^fz_strlcat(char *dst, const char *src, int siz)$/;"	f
fz_strlcpy	src/base_string.c	/^fz_strlcpy(char *dst, const char *src, int siz)$/;"	f
fz_strokestate	inc/fitz.h	/^typedef struct fz_strokestate_s fz_strokestate;$/;"	t	typeref:struct:fz_strokestate_s
fz_strokestate_s	inc/fitz.h	/^struct fz_strokestate_s$/;"	s
fz_strsep	src/base_string.c	/^fz_strsep(char **stringp, const char *delim)$/;"	f
fz_tell	src/stm_read.c	/^fz_tell(fz_stream *stm)$/;"	f
fz_text	inc/fitz.h	/^typedef struct fz_text_s fz_text;$/;"	t	typeref:struct:fz_text_s
fz_text_s	inc/fitz.h	/^struct fz_text_s$/;"	s
fz_textchar	inc/fitz.h	/^typedef struct fz_textchar_s fz_textchar;$/;"	t	typeref:struct:fz_textchar_s
fz_textchar_s	inc/fitz.h	/^struct fz_textchar_s$/;"	s
fz_textel	inc/fitz.h	/^typedef struct fz_textel_s fz_textel;$/;"	t	typeref:struct:fz_textel_s
fz_textel_s	inc/fitz.h	/^struct fz_textel_s$/;"	s
fz_textspan	inc/fitz.h	/^typedef struct fz_textspan_s fz_textspan;$/;"	t	typeref:struct:fz_textspan_s
fz_textspan_s	inc/fitz.h	/^struct fz_textspan_s$/;"	s
fz_throw	inc/fitz.h	66;"	d
fz_throw	inc/fitz.h	74;"	d
fz_throw	inc/fitz.h	82;"	d
fz_throw	inc/fitz.h	90;"	d
fz_throwimp	src/base_error.c	/^fz_throwimp(const char *file, int line, const char *func, char *fmt, ...)$/;"	f
fz_throwimpx	src/base_error.c	/^fz_throwimpx(char *fmt, ...)$/;"	f
fz_tobool	src/obj_simple.c	/^int fz_tobool(fz_obj *obj)$/;"	f
fz_togen	src/obj_simple.c	/^int fz_togen(fz_obj *obj)$/;"	f
fz_toint	src/obj_simple.c	/^int fz_toint(fz_obj *obj)$/;"	f
fz_toname	src/obj_simple.c	/^char *fz_toname(fz_obj *obj)$/;"	f
fz_tonum	src/obj_simple.c	/^int fz_tonum(fz_obj *obj)$/;"	f
fz_toreal	src/obj_simple.c	/^float fz_toreal(fz_obj *obj)$/;"	f
fz_tostrbuf	src/obj_simple.c	/^char *fz_tostrbuf(fz_obj *obj)$/;"	f
fz_tostrlen	src/obj_simple.c	/^int fz_tostrlen(fz_obj *obj)$/;"	f
fz_unreadbyte	inc/fitz.h	/^static inline void fz_unreadbyte(fz_stream *stm)$/;"	f
fz_warn	src/base_error.c	/^void fz_warn(char *fmt, ...)$/;"	f
gapp	src/main.c	/^static mypdf_t gapp;$/;"	v	file:
gasp	freetype/internal/tttypes.h	/^    TT_GaspRec            gasp;                 \/* the `gasp' table *\/$/;"	m	struct:TT_FaceRec_
gaspFlag	freetype/internal/tttypes.h	/^    FT_UShort  gaspFlag;$/;"	m	struct:TT_GaspRangeRec_
gaspRanges	freetype/internal/tttypes.h	/^    TT_GaspRange  gaspRanges;$/;"	m	struct:TT_Gasp_
gd_bytes	freetype/t1tables.h	/^    FT_Int          gd_bytes;$/;"	m	struct:CID_FaceInfoRec_
gen	inc/fitz.h	/^			int gen;$/;"	m	struct:fz_obj_s::__anon19::__anon23
gen	inc/pdf.h	/^	int gen;	\/* generation \/ objstm index *\/$/;"	m	struct:pdf_xrefentry_s
gen	src/pdf_repair.c	/^	int gen;$/;"	m	struct:entry	file:
gen	src/pdf_store.c	/^	int gen;$/;"	m	struct:refkey	file:
generic	freetype/freetype.h	/^    FT_Generic        generic;   \/* generic pointer for client uses *\/$/;"	m	struct:FT_SizeRec_
generic	freetype/freetype.h	/^    FT_Generic        generic;$/;"	m	struct:FT_FaceRec_
generic	freetype/freetype.h	/^    FT_Generic        generic;$/;"	m	struct:FT_GlyphSlotRec_
get_advances	freetype/internal/ftdriver.h	/^    FT_Face_GetAdvancesFunc  get_advances;$/;"	m	struct:FT_Driver_ClassRec_
get_global_hints	freetype/internal/autohint.h	/^    FT_AutoHinter_GlobalGetFunc    get_global_hints;$/;"	m	struct:FT_AutoHinter_InterfaceRec_
get_globals_funcs	freetype/internal/pshints.h	/^    PSH_Globals_Funcs  (*get_globals_funcs)( FT_Module  module );$/;"	m	struct:PSHinter_Interface_
get_glyph_cbox	freetype/ftrender.h	/^    FT_Renderer_GetCBoxFunc    get_glyph_cbox;$/;"	m	struct:FT_Renderer_Class_
get_glyph_data	freetype/ftincrem.h	/^    FT_Incremental_GetGlyphDataFunc     get_glyph_data;$/;"	m	struct:FT_Incremental_FuncsRec_
get_glyph_metrics	freetype/ftincrem.h	/^    FT_Incremental_GetGlyphMetricsFunc  get_glyph_metrics;$/;"	m	struct:FT_Incremental_FuncsRec_
get_index	freetype/internal/psaux.h	/^    (*get_index)( const char*  name,$/;"	m	struct:AFM_ParserRec_
get_interface	freetype/ftmodapi.h	/^    FT_Module_Requester    get_interface;$/;"	m	struct:FT_Module_Class_
get_interface	freetype/internal/sfnt.h	/^    FT_Module_Requester          get_interface;$/;"	m	struct:SFNT_Interface_
get_kerning	freetype/internal/ftdriver.h	/^    FT_Face_GetKerningFunc   get_kerning;$/;"	m	struct:FT_Driver_ClassRec_
get_kerning	freetype/internal/sfnt.h	/^    TT_Face_GetKerningFunc       get_kerning;$/;"	m	struct:SFNT_Interface_
get_metrics	freetype/internal/sfnt.h	/^    TT_Get_Metrics_Func          get_metrics;$/;"	m	struct:SFNT_Interface_
get_name	freetype/internal/sfnt.h	/^    TT_Get_Name_Func             get_name;$/;"	m	struct:SFNT_Interface_
get_name_id	freetype/internal/sfnt.h	/^    TT_Get_Name_ID_Func          get_name_id;$/;"	m	struct:SFNT_Interface_
get_psname	freetype/internal/sfnt.h	/^    TT_Get_PS_Name_Func          get_psname;$/;"	m	struct:SFNT_Interface_
get_t1_funcs	freetype/internal/pshints.h	/^    T1_Hints_Funcs     (*get_t1_funcs)     ( FT_Module  module );$/;"	m	struct:PSHinter_Interface_
get_t2_funcs	freetype/internal/pshints.h	/^    T2_Hints_Funcs     (*get_t2_funcs)     ( FT_Module  module );$/;"	m	struct:PSHinter_Interface_
getbit	src/filt_faxd.c	/^getbit(const unsigned char *buf, int x)$/;"	f	file:
getcode	src/filt_faxd.c	/^getcode(fz_faxd *fax, const cfd_node *table, int initialbits)$/;"	f	file:
getcomponent	src/filt_predict.c	/^getcomponent(unsigned char *buf, int x, int bpc)$/;"	f	file:
gid	inc/fitz.h	/^	int gid; \/* -1 for one gid to many ucs mappings *\/$/;"	m	struct:fz_textel_s
gloader	freetype/internal/tttypes.h	/^    FT_GlyphLoader   gloader;$/;"	m	struct:TT_LoaderRec_
glyf_len	freetype/internal/tttypes.h	/^    FT_ULong              glyf_len;$/;"	m	struct:TT_FaceRec_
glyf_offset	freetype/internal/tttypes.h	/^    FT_ULong              glyf_offset;    \/* since 2.7.1 *\/$/;"	m	struct:TT_FaceRec_
glyph	freetype/freetype.h	/^    FT_GlyphSlot      glyph;$/;"	m	struct:FT_FaceRec_
glyph	freetype/ftglyph.h	/^  FT_Done_Glyph( FT_Glyph  glyph );$/;"	v
glyph	freetype/internal/psaux.h	/^    FT_GlyphSlot    glyph;$/;"	m	struct:T1_BuilderRec_
glyph	freetype/internal/tttypes.h	/^    FT_GlyphSlot     glyph;$/;"	m	struct:TT_LoaderRec_
glyph_bbox	freetype/ftrender.h	/^    FT_Glyph_GetBBoxFunc    glyph_bbox;$/;"	m	struct:FT_Glyph_Class_
glyph_class	freetype/internal/ftobjs.h	/^    FT_Glyph_Class          glyph_class;$/;"	m	struct:FT_RendererRec_
glyph_code	freetype/internal/tttypes.h	/^    FT_UShort  glyph_code;$/;"	m	struct:TT_SBit_ComponentRec_
glyph_codes	freetype/internal/tttypes.h	/^    FT_UShort*          glyph_codes;$/;"	m	struct:TT_SBit_RangeRec_
glyph_copy	freetype/ftrender.h	/^    FT_Glyph_CopyFunc       glyph_copy;$/;"	m	struct:FT_Glyph_Class_
glyph_delta	freetype/internal/ftobjs.h	/^    FT_Vector       glyph_delta;$/;"	m	struct:FT_Slot_InternalRec_
glyph_done	freetype/ftrender.h	/^    FT_Glyph_DoneFunc       glyph_done;$/;"	m	struct:FT_Glyph_Class_
glyph_format	freetype/ftimage.h	/^    FT_Glyph_Format        glyph_format;$/;"	m	struct:FT_Raster_Funcs_
glyph_format	freetype/ftrender.h	/^    FT_Glyph_Format            glyph_format;$/;"	m	struct:FT_Renderer_Class_
glyph_format	freetype/ftrender.h	/^    FT_Glyph_Format         glyph_format;$/;"	m	struct:FT_Glyph_Class_
glyph_format	freetype/internal/ftobjs.h	/^    FT_Glyph_Format         glyph_format;$/;"	m	struct:FT_RendererRec_
glyph_hints	freetype/internal/ftobjs.h	/^    void*           glyph_hints;$/;"	m	struct:FT_Slot_InternalRec_
glyph_index	freetype/internal/services/svpscmap.h	/^    FT_UInt    glyph_index;$/;"	m	struct:PS_UniMap_
glyph_index	freetype/internal/tttypes.h	/^    FT_UInt          glyph_index;$/;"	m	struct:TT_LoaderRec_
glyph_indices	freetype/internal/tttypes.h	/^    FT_UShort*  glyph_indices;$/;"	m	struct:TT_Post_20Rec_
glyph_init	freetype/ftrender.h	/^    FT_Glyph_InitFunc       glyph_init;$/;"	m	struct:FT_Glyph_Class_
glyph_loader	freetype/internal/ftobjs.h	/^    FT_GlyphLoader   glyph_loader;$/;"	m	struct:FT_DriverRec_
glyph_locations	freetype/internal/tttypes.h	/^    FT_Byte*              glyph_locations;$/;"	m	struct:TT_FaceRec_
glyph_matrix	freetype/internal/ftobjs.h	/^    FT_Matrix       glyph_matrix;$/;"	m	struct:FT_Slot_InternalRec_
glyph_names	freetype/internal/psaux.h	/^    FT_Byte**            glyph_names;$/;"	m	struct:T1_DecoderRec_
glyph_names	freetype/internal/t1types.h	/^    FT_String**      glyph_names;       \/* array of glyph names       *\/$/;"	m	struct:T1_FontRec_
glyph_names	freetype/internal/tttypes.h	/^    FT_Char**   glyph_names;$/;"	m	struct:TT_Post_20Rec_
glyph_names_block	freetype/internal/t1types.h	/^    FT_Byte*         glyph_names_block;$/;"	m	struct:T1_FontRec_
glyph_offsets	freetype/internal/tttypes.h	/^    FT_ULong*           glyph_offsets;$/;"	m	struct:TT_SBit_RangeRec_
glyph_prepare	freetype/ftrender.h	/^    FT_Glyph_PrepareFunc    glyph_prepare;$/;"	m	struct:FT_Glyph_Class_
glyph_size	freetype/ftrender.h	/^    FT_Long                 glyph_size;$/;"	m	struct:FT_Glyph_Class_
glyph_transform	freetype/ftrender.h	/^    FT_Glyph_TransformFunc  glyph_transform;$/;"	m	struct:FT_Glyph_Class_
glyph_transformed	freetype/internal/ftobjs.h	/^    FT_Bool         glyph_transformed;$/;"	m	struct:FT_Slot_InternalRec_
goto_table	freetype/internal/sfnt.h	/^    TT_Loader_GotoTableFunc      goto_table;$/;"	m	struct:SFNT_Interface_
goto_table	freetype/internal/tttypes.h	/^    TT_Loader_GotoTableFunc   goto_table;$/;"	m	struct:TT_FaceRec_
gray_spans	freetype/ftimage.h	/^    FT_SpanFunc             gray_spans;$/;"	m	struct:FT_Raster_Params_
grayscale	inc/mypdf.h	/^	int grayscale;$/;"	m	struct:mypdf_s
gstate	inc/pdf.h	/^	pdf_gstate gstate[64];$/;"	m	struct:pdf_csi_s
gtop	inc/pdf.h	/^	int gtop;$/;"	m	struct:pdf_csi_s
gxv_validate_func	freetype/internal/services/svgxval.h	/^  (*gxv_validate_func)( FT_Face   face,$/;"	t
h	inc/fitz.h	/^	int x, e, h, y;$/;"	m	struct:fz_edge_s
h	inc/fitz.h	/^	int x, y, w, h, n;$/;"	m	struct:fz_pixmap_s
hash	src/base_hash.c	/^static unsigned hash(unsigned char *s, int len)$/;"	f	file:
hash	src/pdf_store.c	/^	fz_hashtable *hash;	\/* hash for num\/gen keys *\/$/;"	m	struct:pdf_store_s	file:
hdmx_record_count	freetype/internal/tttypes.h	/^    FT_UInt               hdmx_record_count;$/;"	m	struct:TT_FaceRec_
hdmx_record_size	freetype/internal/tttypes.h	/^    FT_ULong              hdmx_record_size;$/;"	m	struct:TT_FaceRec_
hdmx_record_sizes	freetype/internal/tttypes.h	/^    FT_Byte*              hdmx_record_sizes;$/;"	m	struct:TT_FaceRec_
hdmx_table	freetype/internal/tttypes.h	/^    FT_Byte*              hdmx_table;$/;"	m	struct:TT_FaceRec_
hdmx_table_size	freetype/internal/tttypes.h	/^    FT_ULong              hdmx_table_size;$/;"	m	struct:TT_FaceRec_
head	freetype/fttypes.h	/^    FT_ListNode  head;$/;"	m	struct:FT_ListRec_
header	freetype/internal/tttypes.h	/^    TT_Header             header;       \/* TrueType header table          *\/$/;"	m	struct:TT_FaceRec_
height	freetype/freetype.h	/^    FT_Long               height;$/;"	m	struct:FT_Size_RequestRec_
height	freetype/freetype.h	/^    FT_Pos     height;      \/* text height in 26.6 frac. pixels       *\/$/;"	m	struct:FT_Size_Metrics_
height	freetype/freetype.h	/^    FT_Pos  height;$/;"	m	struct:FT_Glyph_Metrics_
height	freetype/freetype.h	/^    FT_Short          height;$/;"	m	struct:FT_FaceRec_
height	freetype/freetype.h	/^    FT_Short  height;$/;"	m	struct:FT_Bitmap_Size_
height	freetype/ftcache.h	/^    FT_Byte   height;$/;"	m	struct:FTC_SBitRec_
height	freetype/ftcache.h	/^    FT_UInt     height;$/;"	m	struct:FTC_ImageTypeRec_
height	freetype/ftcache.h	/^    FT_UInt     height;$/;"	m	struct:FTC_ScalerRec_
height	freetype/internal/tttypes.h	/^    FT_Byte  height;$/;"	m	struct:TT_SBit_Small_Metrics_
height	freetype/internal/tttypes.h	/^    FT_UShort  height;$/;"	m	struct:TT_SBit_MetricsRec_
hi	inc/pdf.h	/^	unsigned short hi;$/;"	m	struct:pdf_hmtx_s
hi	inc/pdf.h	/^	unsigned short hi;$/;"	m	struct:pdf_vmtx_s
high	inc/pdf.h	/^		unsigned short high;$/;"	m	struct:pdf_cmap_s::__anon31
hint_mode	freetype/internal/psaux.h	/^    FT_Render_Mode       hint_mode;$/;"	m	struct:T1_DecoderRec_
hintmask	freetype/internal/pshints.h	/^    T2_Hints_MaskFunc     hintmask;$/;"	m	struct:T2_Hints_FuncsRec_
hints	freetype/internal/pshints.h	/^    T1_Hints               hints;$/;"	m	struct:T1_Hints_FuncsRec_
hints	freetype/internal/pshints.h	/^    T2_Hints              hints;$/;"	m	struct:T2_Hints_FuncsRec_
hints	inc/fitz.h	/^	int hints;$/;"	m	struct:fz_device_s
hints_funcs	freetype/internal/psaux.h	/^    void*           hints_funcs;    \/* hinter-specific *\/$/;"	m	struct:T1_BuilderRec_
hints_globals	freetype/internal/psaux.h	/^    void*           hints_globals;  \/* hinter-specific *\/$/;"	m	struct:T1_BuilderRec_
hist	inc/mypdf.h	/^	int hist[256];$/;"	m	struct:mypdf_s
histlen	inc/mypdf.h	/^	int histlen;$/;"	m	struct:mypdf_s
hit	inc/mypdf.h	/^	int hit;$/;"	m	struct:mypdf_s
hitlen	inc/mypdf.h	/^	int hitlen;$/;"	m	struct:mypdf_s
hmtx	inc/pdf.h	/^	pdf_hmtx *hmtx;$/;"	m	struct:pdf_fontdesc_s
hmtxcap	inc/pdf.h	/^	int nhmtx, hmtxcap;$/;"	m	struct:pdf_fontdesc_s
hori	freetype/internal/tttypes.h	/^    TT_SBit_LineMetricsRec  hori;$/;"	m	struct:TT_SBit_ScaleRec_
hori	freetype/internal/tttypes.h	/^    TT_SBit_LineMetricsRec  hori;$/;"	m	struct:TT_SBit_StrikeRec_
horiAdvance	freetype/freetype.h	/^    FT_Pos  horiAdvance;$/;"	m	struct:FT_Glyph_Metrics_
horiAdvance	freetype/internal/tttypes.h	/^    FT_UShort  horiAdvance;$/;"	m	struct:TT_SBit_MetricsRec_
horiBearingX	freetype/freetype.h	/^    FT_Pos  horiBearingX;$/;"	m	struct:FT_Glyph_Metrics_
horiBearingX	freetype/internal/tttypes.h	/^    FT_Short   horiBearingX;$/;"	m	struct:TT_SBit_MetricsRec_
horiBearingY	freetype/freetype.h	/^    FT_Pos  horiBearingY;$/;"	m	struct:FT_Glyph_Metrics_
horiBearingY	freetype/internal/tttypes.h	/^    FT_Short   horiBearingY;$/;"	m	struct:TT_SBit_MetricsRec_
horiResolution	freetype/freetype.h	/^    FT_UInt               horiResolution;$/;"	m	struct:FT_Size_RequestRec_
horizontal	freetype/internal/tttypes.h	/^    TT_HoriHeader         horizontal;   \/* TrueType horizontal header     *\/$/;"	m	struct:TT_FaceRec_
horizontal_resolution	freetype/ftwinfnt.h	/^    FT_UShort  horizontal_resolution;$/;"	m	struct:FT_WinFNT_HeaderRec_
horz_metrics_offset	freetype/internal/tttypes.h	/^    FT_ULong              horz_metrics_offset;$/;"	m	struct:TT_FaceRec_
horz_metrics_size	freetype/internal/tttypes.h	/^    FT_ULong              horz_metrics_size;$/;"	m	struct:TT_FaceRec_
i	inc/fitz.h	/^		int i;$/;"	m	union:fz_obj_s::__anon19
ident	freetype/internal/psaux.h	/^    const char*         ident;        \/* field identifier               *\/$/;"	m	struct:T1_FieldRec_
idlength	inc/pdf.h	/^	int idlength;$/;"	m	struct:pdf_crypt_s
idstring	inc/pdf.h	/^	unsigned char idstring[32];$/;"	m	struct:pdf_crypt_s
idx	freetype/internal/ftdebug.h	/^  FT_Trace_Get_Name( FT_Int  idx );$/;"	v
ignoretext	inc/fitz.h	/^	void (*ignoretext)(void *, fz_text *, fz_matrix);$/;"	m	struct:fz_device_s
image	inc/fitz.h	/^		fz_pixmap *image;$/;"	m	union:fz_displaynode_s::__anon27
image	inc/mypdf.h	/^	fz_pixmap *image;$/;"	m	struct:mypdf_s
image_format	freetype/internal/tttypes.h	/^    FT_UShort           image_format;$/;"	m	struct:TT_SBit_RangeRec_
image_offset	freetype/internal/tttypes.h	/^    FT_ULong            image_offset;$/;"	m	struct:TT_SBit_RangeRec_
image_size	freetype/internal/tttypes.h	/^    FT_ULong            image_size;$/;"	m	struct:TT_SBit_RangeRec_
in	src/filt_predict.c	/^	unsigned char *in;$/;"	m	struct:fz_predict_s	file:
incremental_interface	freetype/internal/ftobjs.h	/^    FT_Incremental_InterfaceRec*  incremental_interface;$/;"	m	struct:FT_Face_InternalRec_
indent	src/obj_print.c	/^	int indent;$/;"	m	struct:fmt	file:
index	freetype/internal/ftgloadr.h	/^    FT_Int     index;$/;"	m	struct:FT_SubGlyphRec_
index1	freetype/internal/t1types.h	/^    FT_UInt  index1;$/;"	m	struct:AFM_KernPairRec_
index2	freetype/internal/t1types.h	/^    FT_UInt  index2;$/;"	m	struct:AFM_KernPairRec_
index_format	freetype/internal/tttypes.h	/^    FT_UShort           index_format;$/;"	m	struct:TT_SBit_RangeRec_
info	src/pdf_pagetree.c	/^struct info$/;"	s	file:
init	freetype/internal/ftobjs.h	/^    FT_CMap_InitFunc       init;$/;"	m	struct:FT_CMap_ClassRec_
init	freetype/internal/psaux.h	/^    (*init)( AFM_Parser  parser,$/;"	m	struct:AFM_Parser_FuncsRec_
init	freetype/internal/psaux.h	/^    (*init)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
init	freetype/internal/psaux.h	/^    (*init)( PS_Table   table,$/;"	m	struct:PS_Table_FuncsRec_
init	freetype/internal/psaux.h	/^    (*init)( T1_Builder    builder,$/;"	m	struct:T1_Builder_FuncsRec_
init	freetype/internal/psaux.h	/^    (*init)( T1_Decoder           decoder,$/;"	m	struct:T1_Decoder_FuncsRec_
init	freetype/internal/psaux.h	/^    FT_ULong           init;$/;"	m	struct:PS_TableRec_
init_face	freetype/internal/ftdriver.h	/^    FT_Face_InitFunc         init_face;$/;"	m	struct:FT_Driver_ClassRec_
init_face	freetype/internal/sfnt.h	/^    TT_Init_Face_Func            init_face;$/;"	m	struct:SFNT_Interface_
init_size	freetype/internal/ftdriver.h	/^    FT_Size_InitFunc         init_size;$/;"	m	struct:FT_Driver_ClassRec_
init_slot	freetype/internal/ftdriver.h	/^    FT_Slot_InitFunc         init_slot;$/;"	m	struct:FT_Driver_ClassRec_
inline	inc/fitz.h	72;"	d
inline	inc/fitz.h	80;"	d
inline	inc/fitz.h	88;"	d
ins_pos	freetype/internal/tttypes.h	/^    FT_ULong         ins_pos;$/;"	m	struct:TT_LoaderRec_
instructions	freetype/internal/tttypes.h	/^    FT_Byte*         instructions;$/;"	m	struct:TT_LoaderRec_
integer	freetype/ftbdf.h	/^      FT_Int32        integer;$/;"	m	union:BDF_PropertyRec_::__anon35
internal	freetype/freetype.h	/^    FT_Face_Internal  internal;$/;"	m	struct:FT_FaceRec_
internal	freetype/freetype.h	/^    FT_Size_Internal  internal;$/;"	m	struct:FT_SizeRec_
internal	freetype/freetype.h	/^    FT_Slot_Internal  internal;$/;"	m	struct:FT_GlyphSlotRec_
internal_leading	freetype/ftwinfnt.h	/^    FT_UShort  internal_leading;$/;"	m	struct:FT_WinFNT_HeaderRec_
interpolate	inc/fitz.h	/^	int interpolate;$/;"	m	struct:fz_pixmap_s
interpreter	freetype/internal/tttypes.h	/^    TT_Interpreter        interpreter;$/;"	m	struct:TT_FaceRec_
isFixedPitch	freetype/tttables.h	/^    FT_ULong  isFixedPitch;$/;"	m	struct:TT_Postscript_
is_cff2	freetype/internal/tttypes.h	/^    FT_Bool               is_cff2;        \/* since 2.7.1 *\/$/;"	m	struct:TT_FaceRec_
is_default_instance	freetype/internal/tttypes.h	/^    FT_Bool               is_default_instance;   \/* since 2.7.1 *\/$/;"	m	struct:TT_FaceRec_
is_fixed_pitch	freetype/t1tables.h	/^    FT_Bool     is_fixed_pitch;$/;"	m	struct:PS_FontInfoRec_
iscopying	inc/mypdf.h	/^	int iscopying;$/;"	m	struct:mypdf_s
isdelim	src/obj_print.c	/^static inline int isdelim(int ch)$/;"	f	file:
isdynalab	src/pdf_font.c	/^static int isdynalab(char *name)$/;"	f	file:
isediting	inc/mypdf.h	/^	int isediting;$/;"	m	struct:mypdf_s
isembedded	inc/pdf.h	/^	int isembedded;$/;"	m	struct:pdf_fontdesc_s
ishex	src/filt_basic.c	/^static inline int ishex(int a)$/;"	f	file:
ismask	inc/pdf.h	/^	int ismask;$/;"	m	struct:pdf_pattern_s
isolated	inc/pdf.h	/^	int isolated;$/;"	m	struct:pdf_xobject_s
ispanning	inc/mypdf.h	/^	int ispanning;$/;"	m	struct:mypdf_s
iswhite	src/filt_basic.c	/^static inline int iswhite(int a)$/;"	f	file:
iswhite	src/obj_print.c	/^static inline int iswhite(int ch)$/;"	f	file:
iswhite	src/pdf_lex.c	/^iswhite(int ch)$/;"	f	file:
iswhite	src/pdf_xref.c	/^static inline int iswhite(int ch)$/;"	f	file:
italic	freetype/ftwinfnt.h	/^    FT_Byte    italic;$/;"	m	struct:FT_WinFNT_HeaderRec_
italicAngle	freetype/tttables.h	/^    FT_Fixed  italicAngle;$/;"	m	struct:TT_Postscript_
italic_angle	freetype/t1tables.h	/^    FT_Long     italic_angle;$/;"	m	struct:PS_FontInfoRec_
italicangle	inc/pdf.h	/^	float italicangle;$/;"	m	struct:pdf_fontdesc_s
item	inc/fitz.h	/^	} item;$/;"	m	struct:fz_displaynode_s	typeref:union:fz_displaynode_s::__anon27
items	inc/fitz.h	/^			fz_keyval *items;$/;"	m	struct:fz_obj_s::__anon19::__anon22
items	inc/fitz.h	/^			fz_obj **items;$/;"	m	struct:fz_obj_s::__anon19::__anon21
jump_buffer	freetype/internal/ftvalid.h	/^    ft_jmp_buf          jump_buffer; \/* used for exception handling      *\/$/;"	m	struct:FT_ValidatorRec_
k	inc/fitz.h	/^	fz_obj *k;$/;"	m	struct:fz_keyval_s
k	inc/fitz.h	/^	fz_pathelkind k;$/;"	m	union:fz_pathel_s
k	src/filt_faxd.c	/^	int k;$/;"	m	struct:fz_faxd_s	file:
kern_avail_bits	freetype/internal/tttypes.h	/^    FT_UInt32             kern_avail_bits;$/;"	m	struct:TT_FaceRec_
kern_order_bits	freetype/internal/tttypes.h	/^    FT_UInt32             kern_order_bits;$/;"	m	struct:TT_FaceRec_
kern_table	freetype/internal/tttypes.h	/^    FT_Byte*              kern_table;$/;"	m	struct:TT_FaceRec_
kern_table_size	freetype/internal/tttypes.h	/^    FT_ULong              kern_table_size;$/;"	m	struct:TT_FaceRec_
key	freetype/internal/fthash.h	/^    FT_Hashkey  key;$/;"	m	struct:FT_HashnodeRec_
key	inc/pdf.h	/^	unsigned char key[32]; \/* decryption key generated from password *\/$/;"	m	struct:pdf_crypt_s
key	src/base_hash.c	/^	unsigned char key[MAXKEYLEN];$/;"	m	struct:fz_hashentry_s	file:
key	src/pdf_store.c	/^	fz_obj *key;$/;"	m	struct:pdf_item_s	file:
keylen	src/base_hash.c	/^	int keylen;$/;"	m	struct:fz_hashtable_s	file:
keystrcmp	src/obj_dict.c	/^static inline int keystrcmp(fz_obj *key, char *s)$/;"	f	file:
keyvalcmp	src/obj_dict.c	/^static int keyvalcmp(const void *ap, const void *bp)$/;"	f	file:
kind	inc/fitz.h	/^	fz_objkind kind;$/;"	m	struct:fz_obj_s
kind	inc/pdf.h	/^	int kind;$/;"	m	struct:pdf_material_s
kind	inc/pdf.h	/^	pdf_linkkind kind;$/;"	m	struct:pdf_link_s
knockout	inc/pdf.h	/^	int knockout;$/;"	m	struct:pdf_xobject_s
langTags	freetype/internal/tttypes.h	/^    TT_LangTagRec*  langTags;$/;"	m	struct:TT_NameTableRec_
language	freetype/internal/services/svttcmap.h	/^    FT_ULong  language;$/;"	m	struct:TT_CMapInfo_
languageID	freetype/internal/tttypes.h	/^    FT_UShort  languageID;$/;"	m	struct:TT_NameRec_
language_group	freetype/t1tables.h	/^    FT_Long    language_group;$/;"	m	struct:PS_PrivateRec_
language_id	freetype/ftsnames.h	/^    FT_UShort  language_id;$/;"	m	struct:FT_SfntName_
last	inc/fitz.h	/^	fz_displaynode *last;$/;"	m	struct:fz_displaylist_s
last	src/obj_print.c	/^	int last;$/;"	m	struct:fmt	file:
last_char	freetype/ftwinfnt.h	/^    FT_Byte    last_char;$/;"	m	struct:FT_WinFNT_HeaderRec_
last_glyph	freetype/internal/tttypes.h	/^    FT_UShort           last_glyph;$/;"	m	struct:TT_SBit_RangeRec_
lcd_extra	freetype/internal/ftobjs.h	/^    FT_Int                   lcd_extra;        \/* number of extra pixels *\/$/;"	m	struct:FT_LibraryRec_
lcd_filter	freetype/internal/ftobjs.h	/^    FT_LcdFilter             lcd_filter;$/;"	m	struct:FT_LibraryRec_
lcd_filter_func	freetype/internal/ftobjs.h	/^    FT_Bitmap_LcdFilterFunc  lcd_filter_func;  \/* filtering callback     *\/$/;"	m	struct:FT_LibraryRec_
lcd_weights	freetype/internal/ftobjs.h	/^    FT_LcdFiveTapFilter      lcd_weights;      \/* filter weights, if any *\/$/;"	m	struct:FT_LibraryRec_
lcd_weights	freetype/internal/ftobjs.h	/^    FT_LcdFiveTapFilter  lcd_weights;  \/* preset or custom filter weights *\/$/;"	m	struct:FT_Face_InternalRec_
leading	inc/pdf.h	/^	float leading;$/;"	m	struct:pdf_gstate_s
left	freetype/ftcache.h	/^    FT_Char   left;$/;"	m	struct:FTC_SBitRec_
left	freetype/ftglyph.h	/^    FT_Int       left;$/;"	m	struct:FT_BitmapGlyphRec_
left_bearing	freetype/internal/psaux.h	/^    FT_Vector       left_bearing;$/;"	m	struct:T1_BuilderRec_
left_bearing	freetype/internal/tttypes.h	/^    FT_Int           left_bearing;$/;"	m	struct:TT_LoaderRec_
len	freetype/ftimage.h	/^    unsigned short  len;$/;"	m	struct:FT_Span_
len	inc/fitz.h	/^			int len;$/;"	m	struct:fz_obj_s::__anon19::__anon21
len	inc/fitz.h	/^			int len;$/;"	m	struct:fz_obj_s::__anon19::__anon22
len	inc/fitz.h	/^			unsigned short len;$/;"	m	struct:fz_obj_s::__anon19::__anon20
len	inc/fitz.h	/^	int cap, len;$/;"	m	struct:fz_buffer_s
len	inc/fitz.h	/^	int len, cap;$/;"	m	struct:fz_path_s
len	inc/fitz.h	/^	int len, cap;$/;"	m	struct:fz_text_s
len	inc/fitz.h	/^	int len, cap;$/;"	m	struct:fz_textspan_s
len	inc/fitz.h	/^	int len;$/;"	m	struct:fz_ael_s
len	inc/fitz.h	/^	int len;$/;"	m	struct:fz_gel_s
len	inc/pdf.h	/^	int len;$/;"	m	struct:pdf_xref_s
len	src/obj_print.c	/^	int len;$/;"	m	struct:fmt	file:
len	src/pdf_fontfile.c	/^	const unsigned int *len;$/;"	m	struct:__anon10	file:
lenIV	freetype/internal/psaux.h	/^    FT_Int               lenIV;        \/* internal for sub routine calls *\/$/;"	m	struct:T1_DecoderRec_
lenIV	freetype/t1tables.h	/^    FT_Int     lenIV;$/;"	m	struct:PS_PrivateRec_
len_buildchar	freetype/internal/psaux.h	/^    FT_UInt              len_buildchar;$/;"	m	struct:T1_DecoderRec_
len_buildchar	freetype/internal/t1types.h	/^    FT_UInt          len_buildchar;$/;"	m	struct:T1_FaceRec_
len_buildchar	freetype/t1tables.h	/^    FT_UInt        len_buildchar;$/;"	m	struct:CID_FaceDictRec_
length	freetype/fttypes.h	/^    FT_Int          length;$/;"	m	struct:FT_Data_
length	freetype/internal/tttypes.h	/^    FT_ULong   length;$/;"	m	struct:WOFF_HeaderRec_
length	inc/pdf.h	/^	int length;$/;"	m	struct:pdf_crypt_s
length	inc/pdf.h	/^	int length;$/;"	m	struct:pdf_cryptfilter_s
length	src/filt_lzwd.c	/^	unsigned short length;		\/* string len, including this token *\/$/;"	m	struct:lzw_code_s	file:
lengths	freetype/internal/psaux.h	/^    FT_UInt*           lengths;        \/* lengths of table elements   *\/$/;"	m	struct:PS_TableRec_
level	freetype/internal/ftvalid.h	/^    FT_ValidationLevel  level;       \/* validation level                 *\/$/;"	m	struct:FT_ValidatorRec_
lexcomment	src/pdf_lex.c	/^lexcomment(fz_stream *f)$/;"	f	file:
lexhexstring	src/pdf_lex.c	/^lexhexstring(fz_stream *f, char *buf, int n)$/;"	f	file:
lexname	src/pdf_lex.c	/^lexname(fz_stream *f, char *s, int n)$/;"	f	file:
lexnumber	src/pdf_lex.c	/^lexnumber(fz_stream *f, char *s, int n, int *tok)$/;"	f	file:
lexstring	src/pdf_lex.c	/^lexstring(fz_stream *f, char *buf, int n)$/;"	f	file:
lexwhite	src/pdf_lex.c	/^lexwhite(fz_stream *f)$/;"	f	file:
library	freetype/freetype.h	/^    FT_Library        library;$/;"	m	struct:FT_GlyphSlotRec_
library	freetype/freetype.h	/^  FT_Done_FreeType( FT_Library  library );$/;"	v
library	freetype/ftglyph.h	/^    FT_Library             library;$/;"	m	struct:FT_GlyphRec_
library	freetype/ftmodapi.h	/^  FT_Add_Default_Modules( FT_Library  library );$/;"	v
library	freetype/ftmodapi.h	/^  FT_Done_Library( FT_Library  library );$/;"	v
library	freetype/ftmodapi.h	/^  FT_Get_TrueType_Engine_Type( FT_Library  library );$/;"	v
library	freetype/ftmodapi.h	/^  FT_Reference_Library( FT_Library  library );$/;"	v
library	freetype/ftmodapi.h	/^  FT_Set_Default_Properties( FT_Library  library );$/;"	v
library	freetype/internal/ftobjs.h	/^    FT_Library        library;$/;"	m	struct:FT_ModuleRec_
library	freetype/internal/ftpic.h	/^  ft_pic_container_destroy( FT_Library  library );$/;"	v
library	freetype/internal/ftpic.h	/^  ft_pic_container_init( FT_Library  library );$/;"	v
limit	freetype/ftautoh.h	/^    FT_UInt  limit;$/;"	m	struct:FT_Prop_IncreaseXHeight_
limit	freetype/ftsystem.h	/^    unsigned char*       limit;$/;"	m	struct:FT_StreamRec_
limit	freetype/internal/fthash.h	/^    FT_UInt  limit;$/;"	m	struct:FT_HashRec_
limit	freetype/internal/ftvalid.h	/^    const FT_Byte*      limit;       \/* `base' + sizeof(table) in memory *\/$/;"	m	struct:FT_ValidatorRec_
limit	freetype/internal/psaux.h	/^    FT_Byte*      limit;   \/* first character after the token          *\/$/;"	m	struct:T1_TokenRec_
limit	freetype/internal/psaux.h	/^    FT_Byte*   limit;$/;"	m	struct:PS_ParserRec_
limit	freetype/internal/psaux.h	/^    FT_Byte*  limit;$/;"	m	struct:T1_Decoder_ZoneRec_
limit	freetype/internal/tttypes.h	/^    FT_Byte*         limit;$/;"	m	struct:TT_LoaderRec_
line_to	freetype/ftimage.h	/^    FT_Outline_LineToFunc   line_to;$/;"	m	struct:FT_Outline_Funcs_
linear	freetype/internal/tttypes.h	/^    FT_Int           linear;$/;"	m	struct:TT_LoaderRec_
linearHoriAdvance	freetype/freetype.h	/^    FT_Fixed          linearHoriAdvance;$/;"	m	struct:FT_GlyphSlotRec_
linearVertAdvance	freetype/freetype.h	/^    FT_Fixed          linearVertAdvance;$/;"	m	struct:FT_GlyphSlotRec_
linear_def	freetype/internal/tttypes.h	/^    FT_Bool          linear_def;$/;"	m	struct:TT_LoaderRec_
linecap	inc/fitz.h	/^	int linecap;$/;"	m	struct:fz_strokestate_s
linejoin	inc/fitz.h	/^	int linejoin;$/;"	m	struct:fz_strokestate_s
linewidth	inc/fitz.h	/^	float linewidth;$/;"	m	struct:fz_strokestate_s
link	inc/pdf.h	/^	pdf_link *link;$/;"	m	struct:pdf_outline_s
links	inc/pdf.h	/^	pdf_link *links;$/;"	m	struct:pdf_page_s
list	inc/pdf.h	/^	fz_displaylist *list;$/;"	m	struct:pdf_page_s
lm	src/filt_faxd.c	/^static const unsigned char lm[8] = {$/;"	v	file:
lo	inc/pdf.h	/^	unsigned short lo;$/;"	m	struct:pdf_hmtx_s
lo	inc/pdf.h	/^	unsigned short lo;$/;"	m	struct:pdf_vmtx_s
load	src/base_hash.c	/^	int load;$/;"	m	struct:fz_hashtable_s	file:
load_any	freetype/internal/sfnt.h	/^    TT_Load_Any_Func             load_any;$/;"	m	struct:SFNT_Interface_
load_bhed	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_bhed;$/;"	m	struct:SFNT_Interface_
load_cmap	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_cmap;$/;"	m	struct:SFNT_Interface_
load_eblc	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_eblc;$/;"	m	struct:SFNT_Interface_
load_face	freetype/internal/sfnt.h	/^    TT_Load_Face_Func            load_face;$/;"	m	struct:SFNT_Interface_
load_field	freetype/internal/psaux.h	/^    (*load_field)( PS_Parser       parser,$/;"	m	struct:PS_Parser_FuncsRec_
load_field_table	freetype/internal/psaux.h	/^    (*load_field_table)( PS_Parser       parser,$/;"	m	struct:PS_Parser_FuncsRec_
load_flags	freetype/internal/tttypes.h	/^    FT_ULong         load_flags;$/;"	m	struct:TT_LoaderRec_
load_font_dir	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_font_dir;$/;"	m	struct:SFNT_Interface_
load_gasp	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_gasp;$/;"	m	struct:SFNT_Interface_
load_glyph	freetype/internal/autohint.h	/^    FT_AutoHinter_GlyphLoadFunc    load_glyph;$/;"	m	struct:FT_AutoHinter_InterfaceRec_
load_glyph	freetype/internal/ftdriver.h	/^    FT_Slot_LoadFunc         load_glyph;$/;"	m	struct:FT_Driver_ClassRec_
load_head	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_head;$/;"	m	struct:SFNT_Interface_
load_hhea	freetype/internal/sfnt.h	/^    TT_Load_Metrics_Func         load_hhea;$/;"	m	struct:SFNT_Interface_
load_hmtx	freetype/internal/sfnt.h	/^    TT_Load_Metrics_Func         load_hmtx;$/;"	m	struct:SFNT_Interface_
load_kern	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_kern;$/;"	m	struct:SFNT_Interface_
load_maxp	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_maxp;$/;"	m	struct:SFNT_Interface_
load_name	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_name;$/;"	m	struct:SFNT_Interface_
load_os2	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_os2;$/;"	m	struct:SFNT_Interface_
load_pclt	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_pclt;$/;"	m	struct:SFNT_Interface_
load_points	freetype/internal/psaux.h	/^    FT_Bool         load_points;$/;"	m	struct:T1_BuilderRec_
load_post	freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_post;$/;"	m	struct:SFNT_Interface_
load_sbit_image	freetype/internal/sfnt.h	/^    TT_Load_SBit_Image_Func      load_sbit_image;$/;"	m	struct:SFNT_Interface_
load_strike_metrics	freetype/internal/sfnt.h	/^    TT_Load_Strike_Metrics_Func  load_strike_metrics;$/;"	m	struct:SFNT_Interface_
loadcidfont	src/pdf_font.c	/^loadcidfont(pdf_fontdesc **fontdescp, pdf_xref *xref, fz_obj *dict, fz_obj *encoding, fz_obj *tounicode)$/;"	f	file:
loaded	freetype/internal/tttypes.h	/^    FT_Bool    loaded;$/;"	m	struct:TT_BDFRec_
loaded	freetype/internal/tttypes.h	/^    FT_Bool  loaded;$/;"	m	struct:TT_Post_NamesRec_
loader	freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Add( FT_GlyphLoader  loader );$/;"	v
loader	freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_CreateExtra( FT_GlyphLoader  loader );$/;"	v
loader	freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Done( FT_GlyphLoader  loader );$/;"	v
loader	freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Prepare( FT_GlyphLoader  loader );$/;"	v
loader	freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Reset( FT_GlyphLoader  loader );$/;"	v
loader	freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Rewind( FT_GlyphLoader  loader );$/;"	v
loader	freetype/internal/ftobjs.h	/^    FT_GlyphLoader  loader;$/;"	m	struct:FT_Slot_InternalRec_
loader	freetype/internal/psaux.h	/^    FT_GlyphLoader  loader;$/;"	m	struct:T1_BuilderRec_
loadsimplefont	src/pdf_font.c	/^loadsimplefont(pdf_fontdesc **fontdescp, pdf_xref *xref, fz_obj *dict)$/;"	f	file:
loadsystemcidfont	src/pdf_fontfile.c	/^loadsystemcidfont(pdf_fontdesc *fontdesc, int ros, int kind)$/;"	f	file:
loadtype0	src/pdf_font.c	/^loadtype0(pdf_fontdesc **fontdescp, pdf_xref *xref, fz_obj *dict)$/;"	f	file:
location	freetype/internal/psaux.h	/^    T1_FieldLocation    location;$/;"	m	struct:T1_FieldRec_
long_metrics	freetype/tttables.h	/^    void*      long_metrics;$/;"	m	struct:TT_HoriHeader_
long_metrics	freetype/tttables.h	/^    void*      long_metrics;$/;"	m	struct:TT_VertHeader_
lookup	freetype/internal/fthash.h	/^    FT_Hash_LookupFunc   lookup;$/;"	m	struct:FT_HashRec_
low	inc/pdf.h	/^		unsigned short low;$/;"	m	struct:pdf_cmap_s::__anon31
low	inc/pdf.h	/^	unsigned short low;$/;"	m	struct:pdf_range_s
lsb_delta	freetype/freetype.h	/^    FT_Pos            lsb_delta;$/;"	m	struct:FT_GlyphSlotRec_
luminosity	inc/pdf.h	/^	int luminosity;$/;"	m	struct:pdf_gstate_s
lzw_code	src/filt_lzwd.c	/^typedef struct lzw_code_s lzw_code;$/;"	t	typeref:struct:lzw_code_s	file:
lzw_code_s	src/filt_lzwd.c	/^struct lzw_code_s$/;"	s	file:
main	src/main.c	/^int main(int argc, char **argv)$/;"	f
majorVersion	freetype/internal/tttypes.h	/^    FT_UShort  majorVersion;$/;"	m	struct:WOFF_HeaderRec_
manager	freetype/ftcache.h	/^  FTC_Manager_Done( FTC_Manager  manager );$/;"	v
manager	freetype/ftcache.h	/^  FTC_Manager_Reset( FTC_Manager  manager );$/;"	v
map	freetype/ftautoh.h	/^    FT_UShort*  map;$/;"	m	struct:FT_Prop_GlyphToScriptMap_
maps	freetype/internal/services/svpscmap.h	/^    PS_UniMap*  maps;$/;"	m	struct:PS_UnicodesRec_
marks	inc/mypdf.h	/^	int marks[10];$/;"	m	struct:mypdf_s
mask	inc/fitz.h	/^	fz_pixmap *mask; \/* explicit soft\/image mask *\/$/;"	m	struct:fz_pixmap_s
matrix	freetype/ftglyph.h	/^  FT_Matrix_Invert( FT_Matrix*  matrix );$/;"	v
matrix	inc/fitz.h	/^	fz_matrix matrix;	\/* matrix from pattern dict *\/$/;"	m	struct:fz_shade_s
matrix	inc/pdf.h	/^	fz_matrix matrix;$/;"	m	struct:pdf_annot_s
matrix	inc/pdf.h	/^	fz_matrix matrix;$/;"	m	struct:pdf_pattern_s
matrix	inc/pdf.h	/^	fz_matrix matrix;$/;"	m	struct:pdf_xobject_s
maxComponentDepth	freetype/tttables.h	/^    FT_UShort  maxComponentDepth;$/;"	m	struct:TT_MaxProfile_
maxComponentElements	freetype/tttables.h	/^    FT_UShort  maxComponentElements;$/;"	m	struct:TT_MaxProfile_
maxCompositeContours	freetype/tttables.h	/^    FT_UShort  maxCompositeContours;$/;"	m	struct:TT_MaxProfile_
maxCompositePoints	freetype/tttables.h	/^    FT_UShort  maxCompositePoints;$/;"	m	struct:TT_MaxProfile_
maxContours	freetype/tttables.h	/^    FT_UShort  maxContours;$/;"	m	struct:TT_MaxProfile_
maxFunctionDefs	freetype/tttables.h	/^    FT_UShort  maxFunctionDefs;$/;"	m	struct:TT_MaxProfile_
maxInstructionDefs	freetype/tttables.h	/^    FT_UShort  maxInstructionDefs;$/;"	m	struct:TT_MaxProfile_
maxMemType1	freetype/tttables.h	/^    FT_ULong  maxMemType1;$/;"	m	struct:TT_Postscript_
maxMemType42	freetype/tttables.h	/^    FT_ULong  maxMemType42;$/;"	m	struct:TT_Postscript_
maxPPEM	freetype/internal/tttypes.h	/^    FT_UShort  maxPPEM;$/;"	m	struct:TT_GaspRangeRec_
maxPoints	freetype/tttables.h	/^    FT_UShort  maxPoints;$/;"	m	struct:TT_MaxProfile_
maxSizeOfInstructions	freetype/tttables.h	/^    FT_UShort  maxSizeOfInstructions;$/;"	m	struct:TT_MaxProfile_
maxStackElements	freetype/tttables.h	/^    FT_UShort  maxStackElements;$/;"	m	struct:TT_MaxProfile_
maxStorage	freetype/tttables.h	/^    FT_UShort  maxStorage;$/;"	m	struct:TT_MaxProfile_
maxTwilightPoints	freetype/tttables.h	/^    FT_UShort  maxTwilightPoints;$/;"	m	struct:TT_MaxProfile_
maxZones	freetype/tttables.h	/^    FT_UShort  maxZones;$/;"	m	struct:TT_MaxProfile_
max_advance	freetype/freetype.h	/^    FT_Pos     max_advance; \/* max horizontal advance, in 26.6 pixels *\/$/;"	m	struct:FT_Size_Metrics_
max_advance_height	freetype/freetype.h	/^    FT_Short          max_advance_height;$/;"	m	struct:FT_FaceRec_
max_advance_width	freetype/freetype.h	/^    FT_Short          max_advance_width;$/;"	m	struct:FT_FaceRec_
max_before_BL	freetype/internal/tttypes.h	/^    FT_Char  max_before_BL;$/;"	m	struct:TT_SBit_LineMetricsRec_
max_contours	freetype/internal/ftgloadr.h	/^    FT_UInt          max_contours;$/;"	m	struct:FT_GlyphLoaderRec_
max_contours	freetype/internal/tttypes.h	/^    FT_Short    max_contours;$/;"	m	struct:TT_GlyphZoneRec_
max_elems	freetype/internal/psaux.h	/^    FT_Int             max_elems;$/;"	m	struct:PS_TableRec_
max_grays	freetype/ftcache.h	/^    FT_Byte   max_grays;$/;"	m	struct:FTC_SBitRec_
max_kern	freetype/internal/t1types.h	/^    FT_Fixed  max_kern;$/;"	m	struct:AFM_TrackKernRec_
max_points	freetype/internal/ftgloadr.h	/^    FT_UInt          max_points;$/;"	m	struct:FT_GlyphLoaderRec_
max_points	freetype/internal/tttypes.h	/^    FT_UShort   max_points;$/;"	m	struct:TT_GlyphZoneRec_
max_profile	freetype/internal/tttypes.h	/^    TT_MaxProfile         max_profile;$/;"	m	struct:TT_FaceRec_
max_ptsize	freetype/internal/t1types.h	/^    FT_Fixed  max_ptsize;$/;"	m	struct:AFM_TrackKernRec_
max_subglyphs	freetype/internal/ftgloadr.h	/^    FT_UInt          max_subglyphs;$/;"	m	struct:FT_GlyphLoaderRec_
max_width	freetype/ftwinfnt.h	/^    FT_UShort  max_width;$/;"	m	struct:FT_WinFNT_HeaderRec_
max_width	freetype/internal/tttypes.h	/^    FT_Byte  max_width;$/;"	m	struct:TT_SBit_LineMetricsRec_
maximum	freetype/ftmm.h	/^    FT_Fixed    maximum;$/;"	m	struct:FT_Var_Axis_
maximum	freetype/ftmm.h	/^    FT_Long     maximum;$/;"	m	struct:FT_MM_Axis_
mediabox	inc/pdf.h	/^	fz_rect mediabox;$/;"	m	struct:pdf_page_s
mediabox	src/pdf_pagetree.c	/^	fz_obj *mediabox;$/;"	m	struct:info	file:
memory	freetype/freetype.h	/^    FT_Memory         memory;$/;"	m	struct:FT_FaceRec_
memory	freetype/ftsystem.h	/^    FT_Memory            memory;$/;"	m	struct:FT_StreamRec_
memory	freetype/internal/ftgloadr.h	/^    FT_Memory        memory;$/;"	m	struct:FT_GlyphLoaderRec_
memory	freetype/internal/ftobjs.h	/^    FT_Memory          memory;           \/* library's memory manager *\/$/;"	m	struct:FT_LibraryRec_
memory	freetype/internal/ftobjs.h	/^    FT_Memory         memory;$/;"	m	struct:FT_ModuleRec_
memory	freetype/internal/ftobjs.h	/^  FT_Done_Memory( FT_Memory  memory );$/;"	v
memory	freetype/internal/psaux.h	/^    FT_Memory          memory;$/;"	m	struct:PS_TableRec_
memory	freetype/internal/psaux.h	/^    FT_Memory       memory;$/;"	m	struct:T1_BuilderRec_
memory	freetype/internal/psaux.h	/^    FT_Memory     memory;$/;"	m	struct:AFM_ParserRec_
memory	freetype/internal/psaux.h	/^    FT_Memory  memory;$/;"	m	struct:PS_ParserRec_
memory	freetype/internal/tttypes.h	/^    FT_Memory   memory;$/;"	m	struct:TT_GlyphZoneRec_
memory_base	freetype/freetype.h	/^    const FT_Byte*  memory_base;$/;"	m	struct:FT_Open_Args_
memory_size	freetype/freetype.h	/^    FT_Long         memory_size;$/;"	m	struct:FT_Open_Args_
mesh	inc/fitz.h	/^	float *mesh; \/* [x y 0], [x y r], [x y t] or [x y c1 ... cn] *\/$/;"	m	struct:fz_shade_s
meshcap	inc/fitz.h	/^	int meshcap;$/;"	m	struct:fz_shade_s
meshlen	inc/fitz.h	/^	int meshlen;$/;"	m	struct:fz_shade_s
metaLength	freetype/internal/tttypes.h	/^    FT_ULong   metaLength;$/;"	m	struct:WOFF_HeaderRec_
metaOffset	freetype/internal/tttypes.h	/^    FT_ULong   metaOffset;$/;"	m	struct:WOFF_HeaderRec_
metaOrigLength	freetype/internal/tttypes.h	/^    FT_ULong   metaOrigLength;$/;"	m	struct:WOFF_HeaderRec_
method	inc/pdf.h	/^	int method;$/;"	m	struct:pdf_cryptfilter_s
metric_Data_Format	freetype/tttables.h	/^    FT_Short   metric_Data_Format;$/;"	m	struct:TT_HoriHeader_
metric_Data_Format	freetype/tttables.h	/^    FT_Short   metric_Data_Format;$/;"	m	struct:TT_VertHeader_
metrics	freetype/freetype.h	/^    FT_Glyph_Metrics  metrics;$/;"	m	struct:FT_GlyphSlotRec_
metrics	freetype/freetype.h	/^    FT_Size_Metrics   metrics;   \/* size metrics                    *\/$/;"	m	struct:FT_SizeRec_
metrics	freetype/internal/tttypes.h	/^    TT_SBit_MetricsRec  metrics;$/;"	m	struct:TT_SBit_RangeRec_
metrics_only	freetype/internal/psaux.h	/^    FT_Bool         metrics_only;$/;"	m	struct:T1_BuilderRec_
minMemType1	freetype/tttables.h	/^    FT_ULong  minMemType1;$/;"	m	struct:TT_Postscript_
minMemType42	freetype/tttables.h	/^    FT_ULong  minMemType42;$/;"	m	struct:TT_Postscript_
min_Bottom_Side_Bearing	freetype/tttables.h	/^    FT_Short   min_Bottom_Side_Bearing; \/* minimum bottom-sb       *\/$/;"	m	struct:TT_VertHeader_
min_Left_Side_Bearing	freetype/tttables.h	/^    FT_Short   min_Left_Side_Bearing;  \/* minimum left-sb       *\/$/;"	m	struct:TT_HoriHeader_
min_Right_Side_Bearing	freetype/tttables.h	/^    FT_Short   min_Right_Side_Bearing; \/* minimum right-sb      *\/$/;"	m	struct:TT_HoriHeader_
min_Top_Side_Bearing	freetype/tttables.h	/^    FT_Short   min_Top_Side_Bearing;    \/* minimum top-sb          *\/$/;"	m	struct:TT_VertHeader_
min_advance_SB	freetype/internal/tttypes.h	/^    FT_Char  min_advance_SB;$/;"	m	struct:TT_SBit_LineMetricsRec_
min_after_BL	freetype/internal/tttypes.h	/^    FT_Char  min_after_BL;$/;"	m	struct:TT_SBit_LineMetricsRec_
min_feature	freetype/t1tables.h	/^    FT_Short   min_feature[2];$/;"	m	struct:PS_PrivateRec_
min_kern	freetype/internal/t1types.h	/^    FT_Fixed  min_kern;$/;"	m	struct:AFM_TrackKernRec_
min_origin_SB	freetype/internal/tttypes.h	/^    FT_Char  min_origin_SB;$/;"	m	struct:TT_SBit_LineMetricsRec_
min_ptsize	freetype/internal/t1types.h	/^    FT_Fixed  min_ptsize;$/;"	m	struct:AFM_TrackKernRec_
minimum	freetype/ftmm.h	/^    FT_Fixed    minimum;$/;"	m	struct:FT_Var_Axis_
minimum	freetype/ftmm.h	/^    FT_Long     minimum;$/;"	m	struct:FT_MM_Axis_
minorVersion	freetype/internal/tttypes.h	/^    FT_UShort  minorVersion;$/;"	m	struct:WOFF_HeaderRec_
missingwidth	inc/pdf.h	/^	float missingwidth;$/;"	m	struct:pdf_fontdesc_s
miterlimit	inc/fitz.h	/^	float miterlimit;$/;"	m	struct:fz_strokestate_s
mm	freetype/internal/tttypes.h	/^    void*                 mm;$/;"	m	struct:TT_FaceRec_
module_data	freetype/internal/ftobjs.h	/^    void*  module_data;$/;"	m	struct:FT_Size_InternalRec_
module_done	freetype/ftmodapi.h	/^    FT_Module_Destructor   module_done;$/;"	m	struct:FT_Module_Class_
module_flags	freetype/ftmodapi.h	/^    FT_ULong               module_flags;$/;"	m	struct:FT_Module_Class_
module_init	freetype/ftmodapi.h	/^    FT_Module_Constructor  module_init;$/;"	m	struct:FT_Module_Class_
module_interface	freetype/ftmodapi.h	/^    const void*            module_interface;$/;"	m	struct:FT_Module_Class_
module_name	freetype/ftmodapi.h	/^    const FT_String*       module_name;$/;"	m	struct:FT_Module_Class_
module_requires	freetype/ftmodapi.h	/^    FT_Fixed               module_requires;$/;"	m	struct:FT_Module_Class_
module_size	freetype/ftmodapi.h	/^    FT_Long                module_size;$/;"	m	struct:FT_Module_Class_
module_version	freetype/ftmodapi.h	/^    FT_Fixed               module_version;$/;"	m	struct:FT_Module_Class_
modules	freetype/internal/ftobjs.h	/^    FT_Module          modules[FT_MAX_MODULES];  \/* module objects  *\/$/;"	m	struct:FT_LibraryRec_
move_to	freetype/ftimage.h	/^    FT_Outline_MoveToFunc   move_to;$/;"	m	struct:FT_Outline_Funcs_
mrecode	src/pdf_font.c	/^static int mrecode(char *name)$/;"	f	file:
n	inc/fitz.h	/^		char n[1];$/;"	m	union:fz_obj_s::__anon19
n	inc/fitz.h	/^	int n;$/;"	m	struct:fz_colorspace_s
n	inc/fitz.h	/^	int x, y, w, h, n;$/;"	m	struct:fz_pixmap_s
n	inc/pdf.h	/^		unsigned short n;$/;"	m	struct:pdf_cmap_s::__anon31
n	src/filt_basic.c	/^	int run, n, c;$/;"	m	struct:fz_rld_s	file:
n_contours	freetype/ftimage.h	/^    short       n_contours;      \/* number of contours in glyph        *\/$/;"	m	struct:FT_Outline_
n_contours	freetype/internal/tttypes.h	/^    FT_Short         n_contours;$/;"	m	struct:TT_LoaderRec_
n_contours	freetype/internal/tttypes.h	/^    FT_Short    n_contours;  \/* number of contours          *\/$/;"	m	struct:TT_GlyphZoneRec_
n_points	freetype/ftimage.h	/^    short       n_points;        \/* number of points in the glyph      *\/$/;"	m	struct:FT_Outline_
n_points	freetype/internal/tttypes.h	/^    FT_UShort   n_points;    \/* number of points in zone    *\/$/;"	m	struct:TT_GlyphZoneRec_
name	freetype/ftmm.h	/^    FT_String*  name;$/;"	m	struct:FT_MM_Axis_
name	freetype/ftmm.h	/^    FT_String*  name;$/;"	m	struct:FT_Var_Axis_
name	inc/fitz.h	/^	char name[16];$/;"	m	struct:fz_colorspace_s
name	inc/fitz.h	/^	char name[32];$/;"	m	struct:fz_font_s
name	src/pdf_fontfile.c	/^	const char *name;$/;"	m	struct:__anon10	file:
nameID	freetype/internal/tttypes.h	/^    FT_UShort  nameID;$/;"	m	struct:TT_NameRec_
name_id	freetype/ftsnames.h	/^    FT_UShort  name_id;$/;"	m	struct:FT_SfntName_
name_table	freetype/internal/tttypes.h	/^    TT_NameTableRec       name_table;   \/* name table              *\/$/;"	m	struct:TT_FaceRec_
namedstyle	freetype/ftmm.h	/^    FT_Var_Named_Style*  namedstyle;$/;"	m	struct:FT_MM_Var_
names	freetype/internal/tttypes.h	/^    TT_NameRec*     names;$/;"	m	struct:TT_NameTableRec_
names	freetype/internal/tttypes.h	/^    } names;$/;"	m	struct:TT_Post_NamesRec_	typeref:union:TT_Post_NamesRec_::__anon34
nbits	src/filt_faxd.c	/^	short nbits;$/;"	m	struct:cfd_node_s	file:
ncidtogid	inc/pdf.h	/^	int ncidtogid;$/;"	m	struct:pdf_fontdesc_s
ncidtoucs	inc/pdf.h	/^	int ncidtoucs;$/;"	m	struct:pdf_fontdesc_s
ncspace	inc/pdf.h	/^	int ncspace;$/;"	m	struct:pdf_cmap_s
ndv_idx	freetype/internal/t1types.h	/^    FT_Int           ndv_idx;$/;"	m	struct:T1_FaceRec_
nelem	inc/fitz.h	23;"	d
next	freetype/freetype.h	/^    FT_GlyphSlot      next;$/;"	m	struct:FT_GlyphSlotRec_
next	freetype/fttypes.h	/^    FT_ListNode  next;$/;"	m	struct:FT_ListNodeRec_
next	inc/fitz.h	/^	fz_displaynode *next;$/;"	m	struct:fz_displaynode_s
next	inc/fitz.h	/^	fz_textspan *next;$/;"	m	struct:fz_textspan_s
next	inc/pdf.h	/^	pdf_annot *next;$/;"	m	struct:pdf_annot_s
next	inc/pdf.h	/^	pdf_link *next;$/;"	m	struct:pdf_link_s
next	inc/pdf.h	/^	pdf_outline *next;$/;"	m	struct:pdf_outline_s
next	src/pdf_store.c	/^	pdf_item *next;$/;"	m	struct:pdf_item_s	file:
nextcode	src/filt_lzwd.c	/^	int nextcode;			\/* next free entry *\/$/;"	m	struct:fz_lzwd_s	file:
nhmtx	inc/pdf.h	/^	int nhmtx, hmtxcap;$/;"	m	struct:pdf_fontdesc_s
nil	inc/fitz.h	21;"	d
no_recurse	freetype/internal/psaux.h	/^    FT_Bool         no_recurse;$/;"	m	struct:T1_BuilderRec_
no_stem_darkening	freetype/internal/ftobjs.h	/^    FT_Char              no_stem_darkening;$/;"	m	struct:FT_Face_InternalRec_
nominal_point_size	freetype/ftwinfnt.h	/^    FT_UShort  nominal_point_size;$/;"	m	struct:FT_WinFNT_HeaderRec_
notice	freetype/t1tables.h	/^    FT_String*  notice;$/;"	m	struct:PS_FontInfoRec_
nr	inc/fitz.h	/^	int nr; \/* number of rounds *\/$/;"	m	struct:fz_aes_s
nullfilter	src/filt_basic.c	/^struct nullfilter$/;"	s	file:
num	freetype/internal/fthash.h	/^    FT_Int       num;$/;"	m	union:FT_Hashkey_
num	inc/fitz.h	/^			int num;$/;"	m	struct:fz_obj_s::__anon19::__anon23
num	src/pdf_repair.c	/^	int num;$/;"	m	struct:entry	file:
num	src/pdf_store.c	/^	int num;$/;"	m	struct:refkey	file:
numGlyphs	freetype/tttables.h	/^    FT_UShort  numGlyphs;$/;"	m	struct:TT_MaxProfile_
numLangTagRecords	freetype/internal/tttypes.h	/^    FT_UInt         numLangTagRecords;$/;"	m	struct:TT_NameTableRec_
numNameRecords	freetype/internal/tttypes.h	/^    FT_UInt         numNameRecords;$/;"	m	struct:TT_NameTableRec_
numRanges	freetype/internal/tttypes.h	/^    FT_UShort     numRanges;$/;"	m	struct:TT_Gasp_
num_axis	freetype/ftmm.h	/^    FT_UInt              num_axis;$/;"	m	struct:FT_MM_Var_
num_axis	freetype/ftmm.h	/^    FT_UInt     num_axis;$/;"	m	struct:FT_Multi_Master_
num_axis	freetype/t1tables.h	/^    FT_UInt          num_axis;$/;"	m	struct:PS_BlendRec_
num_blue_values	freetype/t1tables.h	/^    FT_Byte    num_blue_values;$/;"	m	struct:PS_PrivateRec_
num_charmaps	freetype/freetype.h	/^    FT_Int            num_charmaps;$/;"	m	struct:FT_FaceRec_
num_chars	freetype/internal/t1types.h	/^    FT_Int       num_chars;$/;"	m	struct:T1_EncodingRecRec_
num_default_design_vector	freetype/t1tables.h	/^    FT_UInt          num_default_design_vector;$/;"	m	struct:PS_BlendRec_
num_designs	freetype/ftmm.h	/^    FT_UInt              num_designs;$/;"	m	struct:FT_MM_Var_
num_designs	freetype/ftmm.h	/^    FT_UInt     num_designs;$/;"	m	struct:FT_Multi_Master_
num_designs	freetype/t1tables.h	/^    FT_UInt          num_designs;$/;"	m	struct:PS_BlendRec_
num_dicts	freetype/t1tables.h	/^    FT_Int          num_dicts;$/;"	m	struct:CID_FaceInfoRec_
num_elems	freetype/internal/psaux.h	/^    FT_Int             num_elems;$/;"	m	struct:PS_TableRec_
num_faces	freetype/freetype.h	/^    FT_Long           num_faces;$/;"	m	struct:FT_FaceRec_
num_family_blues	freetype/t1tables.h	/^    FT_Byte    num_family_blues;$/;"	m	struct:PS_PrivateRec_
num_family_other_blues	freetype/t1tables.h	/^    FT_Byte    num_family_other_blues;$/;"	m	struct:PS_PrivateRec_
num_fixed_sizes	freetype/freetype.h	/^    FT_Int            num_fixed_sizes;$/;"	m	struct:FT_FaceRec_
num_flex_vectors	freetype/internal/psaux.h	/^    FT_Int               num_flex_vectors;$/;"	m	struct:T1_DecoderRec_
num_glyphs	freetype/freetype.h	/^    FT_Long           num_glyphs;$/;"	m	struct:FT_FaceRec_
num_glyphs	freetype/internal/psaux.h	/^    FT_UInt              num_glyphs;$/;"	m	struct:T1_DecoderRec_
num_glyphs	freetype/internal/t1types.h	/^    FT_Int           num_glyphs;$/;"	m	struct:T1_FontRec_
num_glyphs	freetype/internal/tttypes.h	/^    FT_ULong            num_glyphs;$/;"	m	struct:TT_SBit_RangeRec_
num_glyphs	freetype/internal/tttypes.h	/^    FT_UShort   num_glyphs;$/;"	m	struct:TT_Post_20Rec_
num_glyphs	freetype/internal/tttypes.h	/^    FT_UShort  num_glyphs;$/;"	m	struct:TT_Post_25_
num_grays	freetype/ftimage.h	/^    unsigned short  num_grays;$/;"	m	struct:FT_Bitmap_
num_kern_tables	freetype/internal/tttypes.h	/^    FT_UInt               num_kern_tables;$/;"	m	struct:TT_FaceRec_
num_locations	freetype/internal/tttypes.h	/^    FT_ULong              num_locations; \/* in broken TTF, gid > 0xFFFF *\/$/;"	m	struct:TT_FaceRec_
num_maps	freetype/internal/services/svpscmap.h	/^    FT_UInt     num_maps;$/;"	m	struct:PS_UnicodesRec_
num_modules	freetype/internal/ftobjs.h	/^    FT_UInt            num_modules;$/;"	m	struct:FT_LibraryRec_
num_namedstyles	freetype/ftmm.h	/^    FT_UInt              num_namedstyles;$/;"	m	struct:FT_MM_Var_
num_names	freetype/internal/tttypes.h	/^    FT_UShort             num_names;    \/* number of name records  *\/$/;"	m	struct:TT_FaceRec_
num_names	freetype/internal/tttypes.h	/^    FT_UShort   num_names;$/;"	m	struct:TT_Post_20Rec_
num_other_blues	freetype/t1tables.h	/^    FT_Byte    num_other_blues;$/;"	m	struct:PS_PrivateRec_
num_params	freetype/freetype.h	/^    FT_Int          num_params;$/;"	m	struct:FT_Open_Args_
num_points	freetype/t1tables.h	/^    FT_Byte    num_points;$/;"	m	struct:PS_DesignMap_
num_ranges	freetype/internal/tttypes.h	/^    FT_Int                  num_ranges;$/;"	m	struct:TT_SBit_StrikeRec_
num_sbit_scales	freetype/internal/tttypes.h	/^    FT_ULong              num_sbit_scales;$/;"	m	struct:TT_FaceRec_
num_snap_heights	freetype/t1tables.h	/^    FT_Byte    num_snap_heights;$/;"	m	struct:PS_PrivateRec_
num_snap_widths	freetype/t1tables.h	/^    FT_Byte    num_snap_widths;$/;"	m	struct:PS_PrivateRec_
num_strikes	freetype/internal/tttypes.h	/^    FT_UInt    num_strikes;$/;"	m	struct:TT_BDFRec_
num_subglyphs	freetype/freetype.h	/^    FT_UInt           num_subglyphs;$/;"	m	struct:FT_GlyphSlotRec_
num_subglyphs	freetype/internal/ftgloadr.h	/^    FT_UInt      num_subglyphs; \/* number of subglyphs       *\/$/;"	m	struct:FT_GlyphLoadRec_
num_subrs	freetype/internal/psaux.h	/^    FT_Int               num_subrs;$/;"	m	struct:T1_DecoderRec_
num_subrs	freetype/internal/t1types.h	/^    FT_Int           num_subrs;$/;"	m	struct:T1_FontRec_
num_subrs	freetype/internal/t1types.h	/^    FT_Int     num_subrs;$/;"	m	struct:CID_SubrsRec_
num_subrs	freetype/t1tables.h	/^    FT_UInt        num_subrs;$/;"	m	struct:CID_FaceDictRec_
num_tables	freetype/internal/tttypes.h	/^    FT_UShort             num_tables;$/;"	m	struct:TT_FaceRec_
num_tables	freetype/internal/tttypes.h	/^    FT_UShort  num_tables;$/;"	m	struct:SFNT_HeaderRec_
num_tables	freetype/internal/tttypes.h	/^    FT_UShort  num_tables;$/;"	m	struct:WOFF_HeaderRec_
num_xuid	freetype/t1tables.h	/^    FT_Int          num_xuid;$/;"	m	struct:CID_FaceInfoRec_
number	inc/mypdf.h	/^	char number[256];$/;"	m	struct:mypdf_s
number_Of_HMetrics	freetype/tttables.h	/^    FT_UShort  number_Of_HMetrics;$/;"	m	struct:TT_HoriHeader_
number_Of_VMetrics	freetype/tttables.h	/^    FT_UShort  number_Of_VMetrics;$/;"	m	struct:TT_VertHeader_
numberlen	inc/mypdf.h	/^	int numberlen;$/;"	m	struct:mypdf_s
nvmtx	inc/pdf.h	/^	int nvmtx, vmtxcap;$/;"	m	struct:pdf_fontdesc_s
o	inc/pdf.h	/^	unsigned char o[48];$/;"	m	struct:pdf_crypt_s
obj	inc/pdf.h	/^	fz_obj *obj;	\/* stored\/cached object *\/$/;"	m	struct:pdf_xrefentry_s
obj	inc/pdf.h	/^	fz_obj *obj;$/;"	m	struct:pdf_annot_s
object	freetype/ftincrem.h	/^    FT_Incremental                  object;$/;"	m	struct:FT_Incremental_InterfaceRec_
oe	inc/pdf.h	/^	unsigned char oe[32];$/;"	m	struct:pdf_crypt_s
offset	freetype/internal/ftrfork.h	/^    FT_Long   offset;$/;"	m	struct:FT_RFork_Ref_
offset	freetype/internal/ftstream.h	/^    FT_UShort  offset;$/;"	m	struct:FT_Frame_Field_
offset	freetype/internal/psaux.h	/^    FT_UInt             offset;       \/* offset of field in object      *\/$/;"	m	struct:T1_FieldRec_
offset	freetype/internal/tttypes.h	/^    FT_ULong   offset;  \/* not in file *\/$/;"	m	struct:SFNT_HeaderRec_
offset	inc/pdf.h	/^	unsigned short offset;	\/* range-delta or table-index *\/$/;"	m	struct:pdf_range_s
offsets	freetype/internal/tttypes.h	/^    FT_Char*   offsets;$/;"	m	struct:TT_Post_25_
offsets	freetype/internal/tttypes.h	/^    FT_ULong*  offsets;$/;"	m	struct:TTC_HeaderRec_
ofs	inc/pdf.h	/^	int ofs;	\/* file offset \/ objstm object number *\/$/;"	m	struct:pdf_xrefentry_s
ofs	src/pdf_repair.c	/^	int ofs;$/;"	m	struct:entry	file:
oldcode	src/filt_lzwd.c	/^	int oldcode;			\/* previously recognized code *\/$/;"	m	struct:fz_lzwd_s	file:
open	freetype/internal/pshints.h	/^    T1_Hints_OpenFunc      open;$/;"	m	struct:T1_Hints_FuncsRec_
open	freetype/internal/pshints.h	/^    T2_Hints_OpenFunc     open;$/;"	m	struct:T2_Hints_FuncsRec_
ordering	freetype/t1tables.h	/^    FT_String*      ordering;$/;"	m	struct:CID_FaceInfoRec_
org	freetype/internal/tttypes.h	/^    FT_Vector*  org;         \/* original point coordinates  *\/$/;"	m	struct:TT_GlyphZoneRec_
orus	freetype/internal/tttypes.h	/^    FT_Vector*  orus;        \/* original (unscaled) point coordinates *\/$/;"	m	struct:TT_GlyphZoneRec_
os2	freetype/internal/tttypes.h	/^    TT_OS2                os2;          \/* TrueType OS\/2 table            *\/$/;"	m	struct:TT_FaceRec_
other	freetype/freetype.h	/^    void*             other;$/;"	m	struct:FT_GlyphSlotRec_
other	freetype/internal/ftgloadr.h	/^    void*            other;            \/* for possible future extension? *\/$/;"	m	struct:FT_GlyphLoaderRec_
other	freetype/internal/tttypes.h	/^    void*            other;$/;"	m	struct:TT_LoaderRec_
other_blues	freetype/t1tables.h	/^    FT_Short   other_blues[10];$/;"	m	struct:PS_PrivateRec_
otv_validate_func	freetype/internal/services/svotval.h	/^  (*otv_validate_func)( FT_Face volatile  face,$/;"	t
out	src/filt_predict.c	/^	unsigned char *out;$/;"	m	struct:fz_predict_s	file:
outline	freetype/freetype.h	/^    FT_Outline        outline;$/;"	m	struct:FT_GlyphSlotRec_
outline	freetype/ftglyph.h	/^    FT_Outline   outline;$/;"	m	struct:FT_OutlineGlyphRec_
outline	freetype/ftoutln.h	/^  FT_Outline_Check( FT_Outline*  outline );$/;"	v
outline	freetype/ftoutln.h	/^  FT_Outline_Get_Orientation( FT_Outline*  outline );$/;"	v
outline	freetype/ftoutln.h	/^  FT_Outline_Reverse( FT_Outline*  outline );$/;"	v
outline	freetype/ftstroke.h	/^  FT_Outline_GetInsideBorder( FT_Outline*  outline );$/;"	v
outline	freetype/ftstroke.h	/^  FT_Outline_GetOutsideBorder( FT_Outline*  outline );$/;"	v
outline	freetype/internal/ftgloadr.h	/^    FT_Outline   outline;       \/* outline                   *\/$/;"	m	struct:FT_GlyphLoadRec_
outline	inc/mypdf.h	/^	pdf_outline *outline;$/;"	m	struct:mypdf_s
p	inc/pdf.h	/^	int p;$/;"	m	struct:pdf_crypt_s
pads	freetype/internal/tttypes.h	/^    FT_Char  pads[2];$/;"	m	struct:TT_SBit_LineMetricsRec_
paeth	src/filt_predict.c	/^paeth(int a, int b, int c)$/;"	f	file:
page	inc/mypdf.h	/^	pdf_page *page;$/;"	m	struct:mypdf_s
pagecap	inc/pdf.h	/^	int pagecap;$/;"	m	struct:pdf_xref_s
pagecount	inc/mypdf.h	/^	int pagecount;$/;"	m	struct:mypdf_s
pagelen	inc/pdf.h	/^	int pagelen;$/;"	m	struct:pdf_xref_s
pageno	inc/mypdf.h	/^	int pageno;$/;"	m	struct:mypdf_s
pageobjs	inc/pdf.h	/^	fz_obj **pageobjs;$/;"	m	struct:pdf_xref_s
pagerefs	inc/pdf.h	/^	fz_obj **pagerefs;$/;"	m	struct:pdf_xref_s
paint_type	freetype/internal/t1types.h	/^    FT_Byte          paint_type;$/;"	m	struct:T1_FontRec_
paint_type	freetype/t1tables.h	/^    FT_Byte        paint_type;$/;"	m	struct:CID_FaceDictRec_
palette	freetype/ftimage.h	/^    void*           palette;$/;"	m	struct:FT_Bitmap_
palette_mode	freetype/ftimage.h	/^    unsigned char   palette_mode;$/;"	m	struct:FT_Bitmap_
panose	freetype/tttables.h	/^    FT_Byte    panose[10];$/;"	m	struct:TT_OS2_
panx	inc/mypdf.h	/^	int panx, pany;$/;"	m	struct:mypdf_s
pany	inc/mypdf.h	/^	int panx, pany;$/;"	m	struct:mypdf_s
params	freetype/freetype.h	/^    FT_Parameter*   params;$/;"	m	struct:FT_Open_Args_
parse	freetype/internal/psaux.h	/^    (*parse)( AFM_Parser  parser );$/;"	m	struct:AFM_Parser_FuncsRec_
parse_callback	freetype/internal/psaux.h	/^    T1_Decoder_Callback  parse_callback;$/;"	m	struct:T1_DecoderRec_
parse_charstrings	freetype/internal/psaux.h	/^    (*parse_charstrings)( T1_Decoder  decoder,$/;"	m	struct:T1_Decoder_FuncsRec_
parse_state	freetype/internal/psaux.h	/^    T1_ParseState   parse_state;$/;"	m	struct:T1_BuilderRec_
password	freetype/t1tables.h	/^    FT_Long    password;$/;"	m	struct:PS_PrivateRec_
path	inc/fitz.h	/^		fz_path *path;$/;"	m	union:fz_displaynode_s::__anon27
path	inc/pdf.h	/^	fz_path *path;$/;"	m	struct:pdf_csi_s
pathname	freetype/freetype.h	/^    FT_String*      pathname;$/;"	m	struct:FT_Open_Args_
pathname	freetype/ftsystem.h	/^    FT_StreamDesc        pathname;$/;"	m	struct:FT_StreamRec_
pattern	inc/pdf.h	/^	pdf_pattern *pattern;$/;"	m	struct:pdf_material_s
pclt	freetype/internal/tttypes.h	/^    TT_PCLT               pclt;$/;"	m	struct:TT_FaceRec_
pdf_addcodespace	src/pdf_cmap.c	/^pdf_addcodespace(pdf_cmap *cmap, int low, int high, int n)$/;"	f
pdf_addhmtx	src/pdf_fontmtx.c	/^pdf_addhmtx(pdf_fontdesc *font, int lo, int hi, int w)$/;"	f
pdf_addvmtx	src/pdf_fontmtx.c	/^pdf_addvmtx(pdf_fontdesc *font, int lo, int hi, int x, int y, int w)$/;"	f
pdf_agestore	src/pdf_store.c	/^pdf_agestore(pdf_store *store, int maxage)$/;"	f
pdf_annot	inc/pdf.h	/^typedef struct pdf_annot_s pdf_annot;$/;"	t	typeref:struct:pdf_annot_s
pdf_annot_s	inc/pdf.h	/^struct pdf_annot_s$/;"	s
pdf_cacheobject	src/pdf_xref.c	/^pdf_cacheobject(pdf_xref *xref, int num, int gen)$/;"	f
pdf_clearstack	src/pdf_interpret.c	/^pdf_clearstack(pdf_csi *csi)$/;"	f	file:
pdf_cmap	inc/pdf.h	/^typedef struct pdf_cmap_s pdf_cmap;$/;"	t	typeref:struct:pdf_cmap_s
pdf_cmap_s	inc/pdf.h	/^struct pdf_cmap_s$/;"	s
pdf_cmaptokenfromkeyword	src/pdf_cmap_parse.c	/^pdf_cmaptokenfromkeyword(char *key)$/;"	f	file:
pdf_codefromstring	src/pdf_cmap_parse.c	/^pdf_codefromstring(char *buf, int len)$/;"	f	file:
pdf_crypt	inc/pdf.h	/^typedef struct pdf_crypt_s pdf_crypt;$/;"	t	typeref:struct:pdf_crypt_s
pdf_crypt_s	inc/pdf.h	/^struct pdf_crypt_s$/;"	s
pdf_cryptfilter	inc/pdf.h	/^typedef struct pdf_cryptfilter_s pdf_cryptfilter;$/;"	t	typeref:struct:pdf_cryptfilter_s
pdf_cryptfilter_s	inc/pdf.h	/^struct pdf_cryptfilter_s$/;"	s
pdf_csi	inc/pdf.h	/^typedef struct pdf_csi_s pdf_csi;$/;"	t	typeref:struct:pdf_csi_s
pdf_csi_s	inc/pdf.h	/^struct pdf_csi_s$/;"	s
pdf_debugcmap	src/pdf_cmap.c	/^pdf_debugcmap(pdf_cmap *cmap)$/;"	f
pdf_debugfont	src/pdf_font.c	/^pdf_debugfont(pdf_fontdesc *fontdesc)$/;"	f
pdf_debugstore	src/pdf_store.c	/^pdf_debugstore(pdf_store *store)$/;"	f
pdf_debugxref	src/pdf_xref.c	/^pdf_debugxref(pdf_xref *xref)$/;"	f
pdf_decodecmap	src/pdf_cmap.c	/^pdf_decodecmap(pdf_cmap *cmap, unsigned char *buf, int *cpt)$/;"	f
pdf_docencoding	src/pdf_fontenc.c	/^const unsigned short pdf_docencoding[256] =$/;"	v
pdf_dropcmap	src/pdf_cmap.c	/^pdf_dropcmap(pdf_cmap *cmap)$/;"	f
pdf_dropfont	src/pdf_font.c	/^pdf_dropfont(pdf_fontdesc *fontdesc)$/;"	f
pdf_endhmtx	src/pdf_fontmtx.c	/^pdf_endhmtx(pdf_fontdesc *font)$/;"	f
pdf_endvmtx	src/pdf_fontmtx.c	/^pdf_endvmtx(pdf_fontdesc *font)$/;"	f
pdf_finditem	src/pdf_store.c	/^pdf_finditem(pdf_store *store, void *dropfunc, fz_obj *key)$/;"	f
pdf_findpageobject	src/pdf_pagetree.c	/^pdf_findpageobject(pdf_xref *xref, fz_obj *page)$/;"	f
pdf_fontcidtogid	src/pdf_font.c	/^pdf_fontcidtogid(pdf_fontdesc *fontdesc, int cid)$/;"	f
pdf_fontdesc	inc/pdf.h	/^typedef struct pdf_fontdesc_s pdf_fontdesc;$/;"	t	typeref:struct:pdf_fontdesc_s
pdf_fontdesc_s	inc/pdf.h	/^struct pdf_fontdesc_s$/;"	s
pdf_freecsi	src/pdf_interpret.c	/^pdf_freecsi(pdf_csi *csi)$/;"	f	file:
pdf_freepage	src/pdf_page.c	/^pdf_freepage(pdf_page *page)$/;"	f
pdf_freestore	src/pdf_store.c	/^pdf_freestore(pdf_store *store)$/;"	f
pdf_freexref	src/pdf_xref.c	/^pdf_freexref(pdf_xref *xref)$/;"	f
pdf_function	inc/pdf.h	/^typedef struct pdf_function_s pdf_function;$/;"	t	typeref:struct:pdf_function_s
pdf_gethmtx	src/pdf_fontmtx.c	/^pdf_gethmtx(pdf_fontdesc *font, int cid)$/;"	f
pdf_getpagecount	src/pdf_pagetree.c	/^pdf_getpagecount(pdf_xref *xref)$/;"	f
pdf_getpageobject	src/pdf_pagetree.c	/^pdf_getpageobject(pdf_xref *xref, int number)$/;"	f
pdf_getpageref	src/pdf_pagetree.c	/^pdf_getpageref(pdf_xref *xref, int number)$/;"	f
pdf_getvmtx	src/pdf_fontmtx.c	/^pdf_getvmtx(pdf_fontdesc *font, int cid)$/;"	f
pdf_getwmode	src/pdf_cmap.c	/^pdf_getwmode(pdf_cmap *cmap)$/;"	f
pdf_gstate	inc/pdf.h	/^typedef struct pdf_gstate_s pdf_gstate;$/;"	t	typeref:struct:pdf_gstate_s
pdf_gstate_s	inc/pdf.h	/^struct pdf_gstate_s$/;"	s
pdf_guessfilterlength	src/pdf_stream.c	/^pdf_guessfilterlength(int len, char *filter)$/;"	f	file:
pdf_hmtx	inc/pdf.h	/^typedef struct pdf_hmtx_s pdf_hmtx;$/;"	t	typeref:struct:pdf_hmtx_s
pdf_hmtx_s	inc/pdf.h	/^struct pdf_hmtx_s$/;"	s
pdf_initgstate	src/pdf_build.c	/^pdf_initgstate(pdf_gstate *gs, fz_matrix ctm)$/;"	f
pdf_isstream	src/pdf_stream.c	/^pdf_isstream(pdf_xref *xref, int num, int gen)$/;"	f
pdf_item	src/pdf_store.c	/^typedef struct pdf_item_s pdf_item;$/;"	t	typeref:struct:pdf_item_s	file:
pdf_item_s	src/pdf_store.c	/^struct pdf_item_s$/;"	s	file:
pdf_keepcmap	src/pdf_cmap.c	/^pdf_keepcmap(pdf_cmap *cmap)$/;"	f
pdf_keepfont	src/pdf_font.c	/^pdf_keepfont(pdf_fontdesc *fontdesc)$/;"	f
pdf_lex	src/pdf_lex.c	/^pdf_lex(int *tok, fz_stream *f, char *buf, int n, int *sl)$/;"	f
pdf_lexcmap	src/pdf_cmap_parse.c	/^pdf_lexcmap(int *tok, fz_stream *file, char *buf, int n, int *sl)$/;"	f	file:
pdf_link	inc/pdf.h	/^typedef struct pdf_link_s pdf_link;$/;"	t	typeref:struct:pdf_link_s
pdf_link_s	inc/pdf.h	/^struct pdf_link_s$/;"	s
pdf_linkkind	inc/pdf.h	/^} pdf_linkkind;$/;"	t	typeref:enum:pdf_linkkind_e
pdf_linkkind_e	inc/pdf.h	/^typedef enum pdf_linkkind_e$/;"	g
pdf_loadbuiltinfont	src/pdf_fontfile.c	/^pdf_loadbuiltinfont(pdf_fontdesc *fontdesc, char *fontname)$/;"	f
pdf_loadembeddedcmap	src/pdf_cmap_load.c	/^pdf_loadembeddedcmap(pdf_cmap **cmapp, pdf_xref *xref, fz_obj *stmobj)$/;"	f
pdf_loadembeddedfont	src/pdf_fontfile.c	/^pdf_loadembeddedfont(pdf_fontdesc *fontdesc, pdf_xref *xref, fz_obj *stmref)$/;"	f
pdf_loadencoding	src/pdf_fontenc.c	/^void pdf_loadencoding(char **estrings, char *encoding)$/;"	f
pdf_loadfont	src/pdf_font.c	/^pdf_loadfont(pdf_fontdesc **fontdescp, pdf_xref *xref, fz_obj *rdb, fz_obj *dict)$/;"	f
pdf_loadfontdescriptor	src/pdf_font.c	/^pdf_loadfontdescriptor(pdf_fontdesc *fontdesc, pdf_xref *xref, fz_obj *dict, char *collection, char *basefont)$/;"	f
pdf_loadobject	src/pdf_xref.c	/^pdf_loadobject(fz_obj **objp, pdf_xref *xref, int num, int gen)$/;"	f
pdf_loadobjstm	src/pdf_xref.c	/^pdf_loadobjstm(pdf_xref *xref, int num, int gen, char *buf, int cap)$/;"	f	file:
pdf_loadpage	src/pdf_page.c	/^pdf_loadpage(pdf_page **pagep, pdf_xref *xref, fz_obj *dict)$/;"	f
pdf_loadpagecontents	src/pdf_page.c	/^pdf_loadpagecontents(fz_buffer **bufp, pdf_xref *xref, fz_obj *obj)$/;"	f	file:
pdf_loadpagecontentsarray	src/pdf_page.c	/^pdf_loadpagecontentsarray(fz_buffer **bigbufp, pdf_xref *xref, fz_obj *list)$/;"	f	file:
pdf_loadpagetree	src/pdf_pagetree.c	/^pdf_loadpagetree(pdf_xref *xref)$/;"	f
pdf_loadpagetreenode	src/pdf_pagetree.c	/^pdf_loadpagetreenode(pdf_xref *xref, fz_obj *node, struct info info)$/;"	f	file:
pdf_loadrawstream	src/pdf_stream.c	/^pdf_loadrawstream(fz_buffer **bufp, pdf_xref *xref, int num, int gen)$/;"	f
pdf_loadstream	src/pdf_stream.c	/^pdf_loadstream(fz_buffer **bufp, pdf_xref *xref, int num, int gen)$/;"	f
pdf_loadtounicode	src/pdf_unicode.c	/^pdf_loadtounicode(pdf_fontdesc *font, pdf_xref *xref,$/;"	f
pdf_loadtype3font	src/pdf_type3.c	/^pdf_loadtype3font(pdf_fontdesc **fontdescp, pdf_xref *xref, fz_obj *rdb, fz_obj *dict)$/;"	f
pdf_loadversion	src/pdf_xref.c	/^pdf_loadversion(pdf_xref *xref)$/;"	f	file:
pdf_loadxref	src/pdf_xref.c	/^pdf_loadxref(pdf_xref *xref, char *buf, int bufsize)$/;"	f	file:
pdf_logfont	src/pdf_debug.c	/^void pdf_logfont(char *fmt, ...)$/;"	f
pdf_logimage	src/pdf_debug.c	/^void pdf_logimage(char *fmt, ...)$/;"	f
pdf_logpage	src/pdf_debug.c	/^void pdf_logpage(char *fmt, ...)$/;"	f
pdf_logrsrc	src/pdf_debug.c	/^void pdf_logrsrc(char *fmt, ...)$/;"	f
pdf_logshade	src/pdf_debug.c	/^void pdf_logshade(char *fmt, ...)$/;"	f
pdf_logxref	src/pdf_debug.c	/^void pdf_logxref(char *fmt, ...)$/;"	f
pdf_lookupcmap	src/pdf_cmap.c	/^pdf_lookupcmap(pdf_cmap *cmap, int cpt)$/;"	f
pdf_lookupcmapfull	src/pdf_cmap.c	/^pdf_lookupcmapfull(pdf_cmap *cmap, int cpt, int *out)$/;"	f
pdf_macexpert	src/pdf_fontenc.c	/^const char * const pdf_macexpert[256] = { _notdef, _notdef,$/;"	v
pdf_macroman	src/pdf_fontenc.c	/^const char * const pdf_macroman[256] = { _notdef, _notdef,$/;"	v
pdf_makewidthtable	src/pdf_font.c	/^pdf_makewidthtable(pdf_fontdesc *fontdesc)$/;"	f	file:
pdf_maponetomany	src/pdf_cmap.c	/^pdf_maponetomany(pdf_cmap *cmap, int low, int *values, int len)$/;"	f
pdf_maprangetorange	src/pdf_cmap.c	/^pdf_maprangetorange(pdf_cmap *cmap, int low, int high, int offset)$/;"	f
pdf_maprangetotable	src/pdf_cmap.c	/^pdf_maprangetotable(pdf_cmap *cmap, int low, int *table, int len)$/;"	f
pdf_material	inc/pdf.h	/^typedef struct pdf_material_s pdf_material;$/;"	t	typeref:struct:pdf_material_s
pdf_material_s	inc/pdf.h	/^struct pdf_material_s$/;"	s
pdf_newcmap	src/pdf_cmap.c	/^pdf_newcmap(void)$/;"	f
pdf_newcsi	src/pdf_interpret.c	/^pdf_newcsi(pdf_xref *xref, fz_matrix ctm)$/;"	f	file:
pdf_newfontdesc	src/pdf_font.c	/^pdf_newfontdesc(void)$/;"	f
pdf_newidentitycmap	src/pdf_cmap_load.c	/^pdf_newidentitycmap(int wmode, int bytes)$/;"	f
pdf_newstore	src/pdf_store.c	/^pdf_newstore(void)$/;"	f
pdf_openfilter	src/pdf_stream.c	/^pdf_openfilter(fz_stream *chain, pdf_xref *xref, fz_obj *stmobj, int num, int gen)$/;"	f	file:
pdf_openinlinestream	src/pdf_stream.c	/^pdf_openinlinestream(fz_stream *chain, pdf_xref *xref, fz_obj *stmobj, int length)$/;"	f
pdf_openrawfilter	src/pdf_stream.c	/^pdf_openrawfilter(fz_stream *chain, pdf_xref *xref, fz_obj *stmobj, int num, int gen)$/;"	f	file:
pdf_openrawstream	src/pdf_stream.c	/^pdf_openrawstream(fz_stream **stmp, pdf_xref *xref, int num, int gen)$/;"	f
pdf_openstream	src/pdf_stream.c	/^pdf_openstream(fz_stream **stmp, pdf_xref *xref, int num, int gen)$/;"	f
pdf_openstreamat	src/pdf_stream.c	/^pdf_openstreamat(fz_stream **stmp, pdf_xref *xref, int num, int gen, fz_obj *dict, int stmofs)$/;"	f
pdf_openxref	src/pdf_xref.c	/^pdf_openxref(pdf_xref **xrefp, char *filename, char *password)$/;"	f
pdf_openxrefwithstream	src/pdf_xref.c	/^pdf_openxrefwithstream(pdf_xref **xrefp, fz_stream *file, char *password)$/;"	f
pdf_outline	inc/pdf.h	/^typedef struct pdf_outline_s pdf_outline;$/;"	t	typeref:struct:pdf_outline_s
pdf_outline_s	inc/pdf.h	/^struct pdf_outline_s$/;"	s
pdf_page	inc/pdf.h	/^typedef struct pdf_page_s pdf_page;$/;"	t	typeref:struct:pdf_page_s
pdf_page_s	inc/pdf.h	/^struct pdf_page_s$/;"	s
pdf_parsearray	src/pdf_parse.c	/^pdf_parsearray(fz_obj **op, pdf_xref *xref, fz_stream *file, char *buf, int cap)$/;"	f
pdf_parsebfchar	src/pdf_cmap_parse.c	/^pdf_parsebfchar(pdf_cmap *cmap, fz_stream *file)$/;"	f	file:
pdf_parsebfrange	src/pdf_cmap_parse.c	/^pdf_parsebfrange(pdf_cmap *cmap, fz_stream *file)$/;"	f	file:
pdf_parsebfrangearray	src/pdf_cmap_parse.c	/^pdf_parsebfrangearray(pdf_cmap *cmap, fz_stream *file, int lo, int hi)$/;"	f	file:
pdf_parsecidchar	src/pdf_cmap_parse.c	/^pdf_parsecidchar(pdf_cmap *cmap, fz_stream *file)$/;"	f	file:
pdf_parsecidrange	src/pdf_cmap_parse.c	/^pdf_parsecidrange(pdf_cmap *cmap, fz_stream *file)$/;"	f	file:
pdf_parsecmap	src/pdf_cmap_parse.c	/^pdf_parsecmap(pdf_cmap **cmapp, fz_stream *file)$/;"	f
pdf_parsecmapname	src/pdf_cmap_parse.c	/^pdf_parsecmapname(pdf_cmap *cmap, fz_stream *file)$/;"	f	file:
pdf_parsecodespacerange	src/pdf_cmap_parse.c	/^pdf_parsecodespacerange(pdf_cmap *cmap, fz_stream *file)$/;"	f	file:
pdf_parsedict	src/pdf_parse.c	/^pdf_parsedict(fz_obj **op, pdf_xref *xref, fz_stream *file, char *buf, int cap)$/;"	f
pdf_parseindobj	src/pdf_parse.c	/^pdf_parseindobj(fz_obj **op, pdf_xref *xref,$/;"	f
pdf_parsestmobj	src/pdf_parse.c	/^pdf_parsestmobj(fz_obj **op, pdf_xref *xref, fz_stream *file, char *buf, int cap)$/;"	f
pdf_parsewmode	src/pdf_cmap_parse.c	/^pdf_parsewmode(pdf_cmap *cmap, fz_stream *file)$/;"	f	file:
pdf_pattern	inc/pdf.h	/^typedef struct pdf_pattern_s pdf_pattern;$/;"	t	typeref:struct:pdf_pattern_s
pdf_pattern_s	inc/pdf.h	/^struct pdf_pattern_s$/;"	s
pdf_range	inc/pdf.h	/^typedef struct pdf_range_s pdf_range;$/;"	t	typeref:struct:pdf_range_s
pdf_range_flags	src/pdf_cmap.c	23;"	d	file:
pdf_range_high	src/pdf_cmap.c	22;"	d	file:
pdf_range_s	inc/pdf.h	/^struct pdf_range_s$/;"	s
pdf_range_set_flags	src/pdf_cmap.c	25;"	d	file:
pdf_range_set_high	src/pdf_cmap.c	24;"	d	file:
pdf_readnewtrailer	src/pdf_xref.c	/^pdf_readnewtrailer(pdf_xref *xref, char *buf, int cap)$/;"	f	file:
pdf_readnewxref	src/pdf_xref.c	/^pdf_readnewxref(fz_obj **trailerp, pdf_xref *xref, char *buf, int cap)$/;"	f	file:
pdf_readnewxrefsection	src/pdf_xref.c	/^pdf_readnewxrefsection(pdf_xref *xref, fz_stream *stm, int i0, int i1, int w0, int w1, int w2)$/;"	f	file:
pdf_readoldtrailer	src/pdf_xref.c	/^pdf_readoldtrailer(pdf_xref *xref, char *buf, int cap)$/;"	f	file:
pdf_readoldxref	src/pdf_xref.c	/^pdf_readoldxref(fz_obj **trailerp, pdf_xref *xref, char *buf, int cap)$/;"	f	file:
pdf_readstartxref	src/pdf_xref.c	/^pdf_readstartxref(pdf_xref *xref)$/;"	f	file:
pdf_readtrailer	src/pdf_xref.c	/^pdf_readtrailer(pdf_xref *xref, char *buf, int cap)$/;"	f	file:
pdf_readxref	src/pdf_xref.c	/^pdf_readxref(fz_obj **trailerp, pdf_xref *xref, int ofs, char *buf, int cap)$/;"	f	file:
pdf_readxrefsections	src/pdf_xref.c	/^pdf_readxrefsections(pdf_xref *xref, int ofs, char *buf, int cap)$/;"	f	file:
pdf_removeitem	src/pdf_store.c	/^pdf_removeitem(pdf_store *store, void *dropfunc, fz_obj *key)$/;"	f
pdf_repairobjstm	src/pdf_repair.c	/^pdf_repairobjstm(pdf_xref *xref, int num, int gen)$/;"	f	file:
pdf_repairobjstms	src/pdf_repair.c	/^pdf_repairobjstms(pdf_xref *xref)$/;"	f
pdf_repairxref	src/pdf_repair.c	/^pdf_repairxref(pdf_xref *xref, char *buf, int bufsize)$/;"	f
pdf_resizexref	src/pdf_xref.c	/^pdf_resizexref(pdf_xref *xref, int newlen)$/;"	f
pdf_runcsibuffer	src/pdf_interpret.c	/^pdf_runcsibuffer(pdf_csi *csi, fz_obj *rdb, fz_buffer *contents)$/;"	f
pdf_runcsifile	src/pdf_interpret.c	/^pdf_runcsifile(pdf_csi *csi, fz_obj *rdb, fz_stream *file, char *buf, int buflen)$/;"	f	file:
pdf_runkeyword	src/pdf_interpret.c	/^pdf_runkeyword(pdf_csi *csi, fz_obj *rdb, char *buf)$/;"	f	file:
pdf_runpage	src/pdf_interpret.c	/^pdf_runpage(pdf_xref *xref,pdf_page *page,fz_matrix ctm)$/;"	f
pdf_setdefaulthmtx	src/pdf_fontmtx.c	/^pdf_setdefaulthmtx(pdf_fontdesc *font, int w)$/;"	f
pdf_setdefaultvmtx	src/pdf_fontmtx.c	/^pdf_setdefaultvmtx(pdf_fontdesc *font, int y, int w)$/;"	f
pdf_setfontwmode	src/pdf_fontmtx.c	/^pdf_setfontwmode(pdf_fontdesc *font, int wmode)$/;"	f
pdf_setusecmap	src/pdf_cmap.c	/^pdf_setusecmap(pdf_cmap *cmap, pdf_cmap *usecmap)$/;"	f
pdf_setwmode	src/pdf_cmap.c	/^pdf_setwmode(pdf_cmap *cmap, int wmode)$/;"	f
pdf_showpage	src/mypdf.c	/^static void pdf_showpage(mypdf_t *app)$/;"	f	file:
pdf_showtext	src/pdf_build.c	/^pdf_showtext(pdf_csi *csi, fz_obj *text)$/;"	f
pdf_sortcmap	src/pdf_cmap.c	/^pdf_sortcmap(pdf_cmap *cmap)$/;"	f
pdf_standard	src/pdf_fontenc.c	/^const char * const pdf_standard[256] = { _notdef, _notdef,$/;"	v
pdf_store	inc/pdf.h	/^typedef struct pdf_store_s pdf_store;$/;"	t	typeref:struct:pdf_store_s
pdf_store_s	src/pdf_store.c	/^struct pdf_store_s$/;"	s	file:
pdf_storeitem	src/pdf_store.c	/^pdf_storeitem(pdf_store *store, void *keepfunc, void *dropfunc, fz_obj *key, void *val)$/;"	f
pdf_streamhascrypt	src/pdf_stream.c	/^pdf_streamhascrypt(fz_obj *stm)$/;"	f	file:
pdf_tokenfromkeyword	src/pdf_lex.c	/^pdf_tokenfromkeyword(char *key)$/;"	f	file:
pdf_tomatrix	src/pdf_parse.c	/^fz_matrix pdf_tomatrix(fz_obj *array)$/;"	f
pdf_torect	src/pdf_parse.c	/^fz_rect pdf_torect(fz_obj *array)$/;"	f
pdf_updateobject	src/pdf_xref.c	/^pdf_updateobject(pdf_xref *xref, int num, int gen, fz_obj *newobj)$/;"	f
pdf_vmtx	inc/pdf.h	/^typedef struct pdf_vmtx_s pdf_vmtx;$/;"	t	typeref:struct:pdf_vmtx_s
pdf_vmtx_s	inc/pdf.h	/^struct pdf_vmtx_s$/;"	s
pdf_winansi	src/pdf_fontenc.c	/^const char * const pdf_winansi[256] = { _notdef, _notdef, _notdef,$/;"	v
pdf_xobject	inc/pdf.h	/^typedef struct pdf_xobject_s pdf_xobject;$/;"	t	typeref:struct:pdf_xobject_s
pdf_xobject_s	inc/pdf.h	/^struct pdf_xobject_s$/;"	s
pdf_xref	inc/pdf.h	/^typedef struct pdf_xref_s pdf_xref;$/;"	t	typeref:struct:pdf_xref_s
pdf_xref_s	inc/pdf.h	/^struct pdf_xref_s$/;"	s
pdf_xrefentry	inc/pdf.h	/^typedef struct pdf_xrefentry_s pdf_xrefentry;$/;"	t	typeref:struct:pdf_xrefentry_s
pdf_xrefentry_s	inc/pdf.h	/^struct pdf_xrefentry_s$/;"	s
mypdf_init	src/mypdf.c	/^void mypdf_init(mypdf_t *app)$/;"	f
mypdf_open	src/mypdf.c	/^void mypdf_open(mypdf_t *app, char *filename, int fd)$/;"	f
mypdf_s	inc/mypdf.h	/^struct mypdf_s$/;"	s
mypdf_t	inc/mypdf.h	/^typedef struct mypdf_s mypdf_t;$/;"	t	typeref:struct:mypdf_s
pdflog	src/pdf_debug.c	/^static inline void pdflog(int tag, char *name, char *fmt, va_list ap)$/;"	f	file:
pic_container	freetype/internal/ftobjs.h	/^    FT_PIC_Container   pic_container;$/;"	m	struct:FT_LibraryRec_
pitch	freetype/ftcache.h	/^    FT_Short  pitch;$/;"	m	struct:FTC_SBitRec_
pitch	freetype/ftimage.h	/^    int             pitch;$/;"	m	struct:FT_Bitmap_
pitch_and_family	freetype/ftwinfnt.h	/^    FT_Byte    pitch_and_family;$/;"	m	struct:FT_WinFNT_HeaderRec_
pixel	freetype/ftcache.h	/^    FT_Int      pixel;$/;"	m	struct:FTC_ScalerRec_
pixel_height	freetype/ftwinfnt.h	/^    FT_UShort  pixel_height;$/;"	m	struct:FT_WinFNT_HeaderRec_
pixel_mode	freetype/ftimage.h	/^    unsigned char   pixel_mode;$/;"	m	struct:FT_Bitmap_
pixel_width	freetype/ftwinfnt.h	/^    FT_UShort  pixel_width;$/;"	m	struct:FT_WinFNT_HeaderRec_
platformID	freetype/internal/tttypes.h	/^    FT_UShort  platformID;$/;"	m	struct:TT_NameRec_
platform_id	freetype/freetype.h	/^    FT_UShort    platform_id;$/;"	m	struct:FT_CharMapRec_
platform_id	freetype/ftsnames.h	/^    FT_UShort  platform_id;$/;"	m	struct:FT_SfntName_
pointer	freetype/ftsystem.h	/^    void*  pointer;$/;"	m	union:FT_StreamDesc_
pointer	freetype/fttypes.h	/^    const FT_Byte*  pointer;$/;"	m	struct:FT_Data_
points	freetype/ftimage.h	/^    FT_Vector*  points;          \/* the outline's points               *\/$/;"	m	struct:FT_Outline_
popclip	inc/fitz.h	/^	void (*popclip)(void *);$/;"	m	struct:fz_device_s
pos	freetype/ftsystem.h	/^    unsigned long        pos;$/;"	m	struct:FT_StreamRec_
pos	inc/fitz.h	/^	int pos;$/;"	m	struct:fz_stream_s
pos_x	freetype/internal/psaux.h	/^    FT_Pos          pos_x;$/;"	m	struct:T1_BuilderRec_
pos_y	freetype/internal/psaux.h	/^    FT_Pos          pos_y;$/;"	m	struct:T1_BuilderRec_
postscript	freetype/internal/tttypes.h	/^    TT_Postscript         postscript;   \/* TrueType Postscript table      *\/$/;"	m	struct:TT_FaceRec_
postscript_name	freetype/internal/tttypes.h	/^    const char*           postscript_name;$/;"	m	struct:TT_FaceRec_
postscript_names	freetype/internal/tttypes.h	/^    TT_Post_NamesRec      postscript_names;$/;"	m	struct:TT_FaceRec_
pp1	freetype/internal/tttypes.h	/^    FT_Vector        pp1;$/;"	m	struct:TT_LoaderRec_
pp2	freetype/internal/tttypes.h	/^    FT_Vector        pp2;$/;"	m	struct:TT_LoaderRec_
pp3	freetype/internal/tttypes.h	/^    FT_Vector        pp3;$/;"	m	struct:TT_LoaderRec_
pp4	freetype/internal/tttypes.h	/^    FT_Vector        pp4;$/;"	m	struct:TT_LoaderRec_
predictor	src/filt_predict.c	/^	int predictor;$/;"	m	struct:fz_predict_s	file:
prev	freetype/fttypes.h	/^    FT_ListNode  prev;$/;"	m	struct:FT_ListNodeRec_
prev	src/filt_lzwd.c	/^	int prev;			\/* prev code (in string) *\/$/;"	m	struct:lzw_code_s	file:
printbits	src/filt_faxd.c	/^printbits(FILE *f, int code, int nbits)$/;"	f	file:
printline	src/filt_faxd.c	/^printline(FILE *f, unsigned char *line, int w)$/;"	f	file:
privLength	freetype/internal/tttypes.h	/^    FT_ULong   privLength;$/;"	m	struct:WOFF_HeaderRec_
privOffset	freetype/internal/tttypes.h	/^    FT_ULong   privOffset;$/;"	m	struct:WOFF_HeaderRec_
private_dict	freetype/internal/t1types.h	/^    PS_PrivateRec    private_dict;      \/* private dictionary     *\/$/;"	m	struct:T1_FontRec_
private_dict	freetype/t1tables.h	/^    PS_PrivateRec  private_dict;$/;"	m	struct:CID_FaceDictRec_
privates	freetype/t1tables.h	/^    PS_Private       privates  [T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_
ps_parser_funcs	freetype/internal/psaux.h	/^    const PS_Parser_FuncsRec*   ps_parser_funcs;$/;"	m	struct:PSAux_ServiceRec_
ps_table_funcs	freetype/internal/psaux.h	/^    const PS_Table_FuncsRec*    ps_table_funcs;$/;"	m	struct:PSAux_ServiceRec_
psaux	freetype/internal/t1types.h	/^    const void*     psaux;$/;"	m	struct:T1_FaceRec_
psaux	freetype/internal/t1types.h	/^    void*            psaux;$/;"	m	struct:CID_FaceRec_
pshinter	freetype/internal/ftpic.h	/^    void*  pshinter;$/;"	m	struct:FT_PIC_Container_
pshinter	freetype/internal/t1types.h	/^    const void*     pshinter;$/;"	m	struct:T1_FaceRec_
pshinter	freetype/internal/t1types.h	/^    void*            pshinter;$/;"	m	struct:CID_FaceRec_
psid	freetype/ftmm.h	/^    FT_UInt    psid;   \/* since 2.7.1 *\/$/;"	m	struct:FT_Var_Named_Style_
psnames	freetype/internal/ftpic.h	/^    void*  psnames;$/;"	m	struct:FT_PIC_Container_
psnames	freetype/internal/psaux.h	/^    FT_Service_PsCMaps   psnames;      \/* for seac *\/$/;"	m	struct:T1_DecoderRec_
psnames	freetype/internal/t1types.h	/^    const void*     psnames;$/;"	m	struct:T1_FaceRec_
psnames	freetype/internal/t1types.h	/^    void*            psnames;$/;"	m	struct:CID_FaceRec_
psnames	freetype/internal/tttypes.h	/^    void*                 psnames;$/;"	m	struct:TT_FaceRec_
putcomponent	src/filt_predict.c	/^putcomponent(unsigned char *buf, int x, int bpc, int value)$/;"	f	file:
r	inc/fitz.h	/^		} r;$/;"	m	union:fz_obj_s::__anon19	typeref:struct:fz_obj_s::__anon19::__anon23
r	inc/pdf.h	/^	int r;$/;"	m	struct:pdf_crypt_s
random_seed	freetype/internal/ftobjs.h	/^    FT_Int32             random_seed;$/;"	m	struct:FT_Face_InternalRec_
range_shift	freetype/internal/tttypes.h	/^    FT_UShort  range_shift;$/;"	m	struct:SFNT_HeaderRec_
ranges	inc/pdf.h	/^	pdf_range *ranges;$/;"	m	struct:pdf_cmap_s
ranges_offset	freetype/internal/tttypes.h	/^    FT_ULong                ranges_offset;$/;"	m	struct:TT_SBit_StrikeRec_
raster	freetype/internal/ftobjs.h	/^    FT_Raster               raster;$/;"	m	struct:FT_RendererRec_
raster	freetype/internal/ftpic.h	/^    void*  raster;$/;"	m	struct:FT_PIC_Container_
raster_class	freetype/ftrender.h	/^    FT_Raster_Funcs*           raster_class;$/;"	m	struct:FT_Renderer_Class_
raster_done	freetype/ftimage.h	/^    FT_Raster_DoneFunc     raster_done;$/;"	m	struct:FT_Raster_Funcs_
raster_new	freetype/ftimage.h	/^    FT_Raster_NewFunc      raster_new;$/;"	m	struct:FT_Raster_Funcs_
raster_pool	freetype/internal/ftobjs.h	/^    FT_Byte*           raster_pool;      \/* scan-line conversion *\/$/;"	m	struct:FT_LibraryRec_
raster_pool_size	freetype/internal/ftobjs.h	/^    FT_ULong           raster_pool_size; \/* size of render pool in bytes *\/$/;"	m	struct:FT_LibraryRec_
raster_render	freetype/ftimage.h	/^    FT_Raster_RenderFunc   raster_render;$/;"	m	struct:FT_Raster_Funcs_
raster_render	freetype/internal/ftobjs.h	/^    FT_Raster_Render_Func   raster_render;$/;"	m	struct:FT_RendererRec_
raster_reset	freetype/ftimage.h	/^    FT_Raster_ResetFunc    raster_reset;$/;"	m	struct:FT_Raster_Funcs_
raster_set_mode	freetype/ftimage.h	/^    FT_Raster_SetModeFunc  raster_set_mode;$/;"	m	struct:FT_Raster_Funcs_
rcap	inc/pdf.h	/^	int rlen, rcap;$/;"	m	struct:pdf_cmap_s
read	freetype/ftsystem.h	/^    FT_Stream_IoFunc     read;$/;"	m	struct:FT_StreamRec_
read	inc/fitz.h	/^	int (*read)(fz_stream *stm, unsigned char *buf, int len);$/;"	m	struct:fz_stream_s
read_composite_glyph	freetype/internal/tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_composite_glyph;$/;"	m	struct:TT_FaceRec_
read_glyph_header	freetype/internal/tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_glyph_header;$/;"	m	struct:TT_FaceRec_
read_simple_glyph	freetype/internal/tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_simple_glyph;$/;"	m	struct:TT_FaceRec_
reada85d	src/filt_basic.c	/^reada85d(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
readahxd	src/filt_basic.c	/^readahxd(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
readbuffer	src/stm_open.c	/^static int readbuffer(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
reader	freetype/internal/psaux.h	/^    T1_Field_ParseFunc  reader;$/;"	m	struct:T1_FieldRec_
readfaxd	src/filt_faxd.c	/^readfaxd(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
readfile	src/stm_open.c	/^static int readfile(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
readflated	src/filt_flate.c	/^readflated(fz_stream *stm, unsigned char *outbuf, int outlen)$/;"	f	file:
readlzwd	src/filt_lzwd.c	/^readlzwd(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
readnull	src/filt_basic.c	/^readnull(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
readpredict	src/filt_predict.c	/^readpredict(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
readrld	src/filt_basic.c	/^readrld(fz_stream *stm, unsigned char *buf, int len)$/;"	f	file:
realloc	freetype/ftsystem.h	/^    FT_Realloc_Func  realloc;$/;"	m	struct:FT_MemoryRec_
rect	inc/fitz.h	/^	fz_rect rect;$/;"	m	struct:fz_displaynode_s
rect	inc/pdf.h	/^	fz_rect rect;$/;"	m	struct:pdf_annot_s
rect	inc/pdf.h	/^	fz_rect rect;$/;"	m	struct:pdf_link_s
ref	src/filt_faxd.c	/^	unsigned char *ref;$/;"	m	struct:fz_faxd_s	file:
ref	src/filt_predict.c	/^	unsigned char *ref;$/;"	m	struct:fz_predict_s	file:
refcount	freetype/internal/ftobjs.h	/^    FT_Int             refcount;$/;"	m	struct:FT_LibraryRec_
refcount	freetype/internal/ftobjs.h	/^    FT_Int  refcount;$/;"	m	struct:FT_Face_InternalRec_
refkey	src/pdf_store.c	/^struct refkey$/;"	s	file:
refs	inc/fitz.h	/^	int refs;$/;"	m	struct:fz_buffer_s
refs	inc/fitz.h	/^	int refs;$/;"	m	struct:fz_colorspace_s
refs	inc/fitz.h	/^	int refs;$/;"	m	struct:fz_font_s
refs	inc/fitz.h	/^	int refs;$/;"	m	struct:fz_obj_s
refs	inc/fitz.h	/^	int refs;$/;"	m	struct:fz_pixmap_s
refs	inc/fitz.h	/^	int refs;$/;"	m	struct:fz_shade_s
refs	inc/fitz.h	/^	int refs;$/;"	m	struct:fz_stream_s
refs	inc/pdf.h	/^	int refs;$/;"	m	struct:pdf_cmap_s
refs	inc/pdf.h	/^	int refs;$/;"	m	struct:pdf_fontdesc_s
refs	inc/pdf.h	/^	int refs;$/;"	m	struct:pdf_pattern_s
refs	inc/pdf.h	/^	int refs;$/;"	m	struct:pdf_xobject_s
registry	freetype/t1tables.h	/^    FT_String*      registry;$/;"	m	struct:CID_FaceInfoRec_
release	freetype/internal/psaux.h	/^    (*release)( PS_Table  table );$/;"	m	struct:PS_Table_FuncsRec_
remain	src/filt_basic.c	/^	int remain;$/;"	m	struct:nullfilter	file:
render	freetype/internal/ftobjs.h	/^    FT_Renderer_RenderFunc  render;$/;"	m	struct:FT_RendererRec_
render	inc/pdf.h	/^	int render;$/;"	m	struct:pdf_gstate_s
render_glyph	freetype/ftrender.h	/^    FT_Renderer_RenderFunc     render_glyph;$/;"	m	struct:FT_Renderer_Class_
renderers	freetype/internal/ftobjs.h	/^    FT_ListRec         renderers;        \/* list of renderers        *\/$/;"	m	struct:FT_LibraryRec_
request_size	freetype/internal/ftdriver.h	/^    FT_Size_RequestFunc      request_size;$/;"	m	struct:FT_Driver_ClassRec_
res_id	freetype/internal/ftrfork.h	/^    FT_Short  res_id;$/;"	m	struct:FT_RFork_Ref_
reserved	freetype/freetype.h	/^    FT_UInt           reserved;       \/* retained for binary compatibility *\/$/;"	m	struct:FT_GlyphSlotRec_
reserved	freetype/ftwinfnt.h	/^    FT_Byte    reserved;$/;"	m	struct:FT_WinFNT_HeaderRec_
reserved	freetype/internal/tttypes.h	/^    FT_UShort  reserved;$/;"	m	struct:WOFF_HeaderRec_
reserved1	freetype/ftwinfnt.h	/^    FT_ULong   reserved1[4];$/;"	m	struct:FT_WinFNT_HeaderRec_
reset	freetype/internal/pshints.h	/^    T1_Hints_ResetFunc     reset;$/;"	m	struct:T1_Hints_FuncsRec_
reset_face	freetype/internal/autohint.h	/^    FT_AutoHinter_GlobalResetFunc  reset_face;$/;"	m	struct:FT_AutoHinter_InterfaceRec_
resolution	inc/mypdf.h	/^	int resolution;$/;"	m	struct:mypdf_s
resources	inc/pdf.h	/^	fz_obj *resources;$/;"	m	struct:pdf_page_s
resources	inc/pdf.h	/^	fz_obj *resources;$/;"	m	struct:pdf_pattern_s
resources	inc/pdf.h	/^	fz_obj *resources;$/;"	m	struct:pdf_xobject_s
resources	src/pdf_pagetree.c	/^	fz_obj *resources;$/;"	m	struct:info	file:
restrict	inc/fitz.h	73;"	d
restrict	inc/fitz.h	81;"	d
restrict	inc/fitz.h	89;"	d
ridx	src/filt_faxd.c	/^	int ridx;$/;"	m	struct:fz_faxd_s	file:
rise	inc/pdf.h	/^	float rise;$/;"	m	struct:pdf_gstate_s
rk	inc/fitz.h	/^	unsigned long *rk; \/* AES round keys *\/$/;"	m	struct:fz_aes_s
rlen	inc/pdf.h	/^	int rlen, rcap;$/;"	m	struct:pdf_cmap_s
rm	src/filt_faxd.c	/^static const unsigned char rm[8] = {$/;"	v	file:
root	freetype/ftglyph.h	/^    FT_GlyphRec  root;$/;"	m	struct:FT_BitmapGlyphRec_
root	freetype/ftglyph.h	/^    FT_GlyphRec  root;$/;"	m	struct:FT_OutlineGlyphRec_
root	freetype/ftrender.h	/^    FT_Module_Class            root;$/;"	m	struct:FT_Renderer_Class_
root	freetype/internal/ftdriver.h	/^    FT_Module_Class          root;$/;"	m	struct:FT_Driver_ClassRec_
root	freetype/internal/ftobjs.h	/^    FT_ModuleRec            root;$/;"	m	struct:FT_RendererRec_
root	freetype/internal/ftobjs.h	/^    FT_ModuleRec     root;$/;"	m	struct:FT_DriverRec_
root	freetype/internal/t1types.h	/^    FT_FaceRec       root;$/;"	m	struct:CID_FaceRec_
root	freetype/internal/t1types.h	/^    FT_FaceRec      root;$/;"	m	struct:T1_FaceRec_
root	freetype/internal/tttypes.h	/^    FT_FaceRec            root;$/;"	m	struct:TT_FaceRec_
root	src/pdf_store.c	/^	pdf_item *root;		\/* linked list for everything else *\/$/;"	m	struct:pdf_store_s	file:
rotate	inc/pdf.h	/^	int rotate;$/;"	m	struct:pdf_page_s
rotate	inc/mypdf.h	/^	int rotate;$/;"	m	struct:mypdf_s
rotate	src/pdf_pagetree.c	/^	fz_obj *rotate;$/;"	m	struct:info	file:
round_stem_up	freetype/t1tables.h	/^    FT_Bool    round_stem_up;$/;"	m	struct:PS_PrivateRec_
rows	freetype/ftimage.h	/^    unsigned int    rows;$/;"	m	struct:FT_Bitmap_
rows	src/filt_faxd.c	/^	int rows;$/;"	m	struct:fz_faxd_s	file:
rp	inc/fitz.h	/^	unsigned char *bp, *rp, *wp, *ep;$/;"	m	struct:fz_stream_s
rp	src/filt_basic.c	/^	unsigned char *rp, *wp;$/;"	m	struct:fz_a85d_s	file:
rp	src/filt_faxd.c	/^	unsigned char *rp, *wp;$/;"	m	struct:fz_faxd_s	file:
rp	src/filt_lzwd.c	/^	unsigned char *rp, *wp;$/;"	m	struct:fz_lzwd_s	file:
rp	src/filt_predict.c	/^	unsigned char *rp, *wp;$/;"	m	struct:fz_predict_s	file:
rsb_delta	freetype/freetype.h	/^    FT_Pos            rsb_delta;$/;"	m	struct:FT_GlyphSlotRec_
run	src/filt_basic.c	/^	int run, n, c;$/;"	m	struct:fz_rld_s	file:
runelen	src/base_string.c	/^runelen(int c)$/;"	f
runetochar	src/base_string.c	/^runetochar(char *str, int *rune)$/;"	f
s	inc/fitz.h	/^		} s;$/;"	m	union:fz_obj_s::__anon19	typeref:struct:fz_obj_s::__anon19::__anon20
sCapHeight	freetype/tttables.h	/^    FT_Short   sCapHeight;$/;"	m	struct:TT_OS2_
sFamilyClass	freetype/tttables.h	/^    FT_Short   sFamilyClass;$/;"	m	struct:TT_OS2_
sTypoAscender	freetype/tttables.h	/^    FT_Short   sTypoAscender;$/;"	m	struct:TT_OS2_
sTypoDescender	freetype/tttables.h	/^    FT_Short   sTypoDescender;$/;"	m	struct:TT_OS2_
sTypoLineGap	freetype/tttables.h	/^    FT_Short   sTypoLineGap;$/;"	m	struct:TT_OS2_
samples	inc/fitz.h	/^	unsigned char *samples;$/;"	m	struct:fz_pixmap_s
sbit_num_strikes	freetype/internal/tttypes.h	/^    FT_UInt               sbit_num_strikes;$/;"	m	struct:TT_FaceRec_
sbit_ranges	freetype/internal/tttypes.h	/^    TT_SBit_Range           sbit_ranges;$/;"	m	struct:TT_SBit_StrikeRec_
sbit_scales	freetype/internal/tttypes.h	/^    TT_SBit_Scale         sbit_scales;$/;"	m	struct:TT_FaceRec_
sbit_strike_map	freetype/internal/tttypes.h	/^    FT_UInt*              sbit_strike_map;$/;"	m	struct:TT_FaceRec_
sbit_table	freetype/internal/tttypes.h	/^    FT_Byte*              sbit_table;$/;"	m	struct:TT_FaceRec_
sbit_table_size	freetype/internal/tttypes.h	/^    FT_ULong              sbit_table_size;$/;"	m	struct:TT_FaceRec_
sbit_table_type	freetype/internal/tttypes.h	/^    TT_SbitTableType      sbit_table_type;$/;"	m	struct:TT_FaceRec_
scale	inc/pdf.h	/^	float scale;$/;"	m	struct:pdf_gstate_s
scratch	inc/pdf.h	/^	char scratch[65536];$/;"	m	struct:pdf_xref_s
scrh	inc/mypdf.h	/^	int scrw, scrh;$/;"	m	struct:mypdf_s
scrw	inc/mypdf.h	/^	int scrw, scrh;$/;"	m	struct:mypdf_s
sd_bytes	freetype/t1tables.h	/^    FT_Int         sd_bytes;$/;"	m	struct:CID_FaceDictRec_
seac	freetype/internal/psaux.h	/^    FT_Bool              seac;$/;"	m	struct:T1_DecoderRec_
search	inc/mypdf.h	/^	char search[512];$/;"	m	struct:mypdf_s
search_range	freetype/internal/tttypes.h	/^    FT_UShort  search_range;$/;"	m	struct:SFNT_HeaderRec_
seek	inc/fitz.h	/^	void (*seek)(fz_stream *stm, int offset, int whence);$/;"	m	struct:fz_stream_s
seekbuffer	src/stm_open.c	/^static void seekbuffer(fz_stream *stm, int offset, int whence)$/;"	f	file:
seekfile	src/stm_open.c	/^static void seekfile(fz_stream *stm, int offset, int whence)$/;"	f	file:
select_size	freetype/internal/ftdriver.h	/^    FT_Size_SelectFunc       select_size;$/;"	m	struct:FT_Driver_ClassRec_
selr	inc/mypdf.h	/^	fz_bbox selr;$/;"	m	struct:mypdf_s
selx	inc/mypdf.h	/^	int selx, sely;$/;"	m	struct:mypdf_s
sely	inc/mypdf.h	/^	int selx, sely;$/;"	m	struct:mypdf_s
sep	src/obj_print.c	/^	int sep;$/;"	m	struct:fmt	file:
serv_data	freetype/internal/ftserv.h	/^    const void*  serv_data;   \/* service pointer\/data *\/$/;"	m	struct:FT_ServiceDescRec_
serv_id	freetype/internal/ftserv.h	/^    const char*  serv_id;     \/* service name         *\/$/;"	m	struct:FT_ServiceDescRec_
service_GLYPH_DICT	freetype/internal/ftserv.h	/^    FT_Pointer  service_GLYPH_DICT;$/;"	m	struct:FT_ServiceCacheRec_
service_METRICS_VARIATIONS	freetype/internal/ftserv.h	/^    FT_Pointer  service_METRICS_VARIATIONS;$/;"	m	struct:FT_ServiceCacheRec_
service_MULTI_MASTERS	freetype/internal/ftserv.h	/^    FT_Pointer  service_MULTI_MASTERS;$/;"	m	struct:FT_ServiceCacheRec_
service_PFR_METRICS	freetype/internal/ftserv.h	/^    FT_Pointer  service_PFR_METRICS;$/;"	m	struct:FT_ServiceCacheRec_
service_POSTSCRIPT_FONT_NAME	freetype/internal/ftserv.h	/^    FT_Pointer  service_POSTSCRIPT_FONT_NAME;$/;"	m	struct:FT_ServiceCacheRec_
service_WINFNT	freetype/internal/ftserv.h	/^    FT_Pointer  service_WINFNT;$/;"	m	struct:FT_ServiceCacheRec_
services	freetype/internal/ftobjs.h	/^    FT_ServiceCacheRec  services;$/;"	m	struct:FT_Face_InternalRec_
set_mode	freetype/ftrender.h	/^    FT_Renderer_SetModeFunc    set_mode;$/;"	m	struct:FT_Renderer_Class_
set_sbit_strike	freetype/internal/sfnt.h	/^    TT_Set_SBit_Strike_Func      set_sbit_strike;$/;"	m	struct:SFNT_Interface_
set_scale	freetype/internal/pshints.h	/^    PSH_Globals_SetScaleFunc  set_scale;$/;"	m	struct:PSH_Globals_FuncsRec_
setbits	src/filt_faxd.c	/^setbits(unsigned char *line, int x0, int x1)$/;"	f	file:
sfnt	freetype/internal/ftpic.h	/^    void*  sfnt;$/;"	m	struct:FT_PIC_Container_
sfnt	freetype/internal/tttypes.h	/^    void*                 sfnt;$/;"	m	struct:TT_FaceRec_
shade	inc/fitz.h	/^		fz_shade *shade;$/;"	m	union:fz_displaynode_s::__anon27
shade	inc/pdf.h	/^	fz_shade *shade;$/;"	m	struct:pdf_material_s
shift	freetype/ftimage.h	/^    int                     shift;$/;"	m	struct:FT_Outline_Funcs_
short_metrics	freetype/tttables.h	/^    void*      short_metrics;$/;"	m	struct:TT_HoriHeader_
short_metrics	freetype/tttables.h	/^    void*      short_metrics;$/;"	m	struct:TT_VertHeader_
showbinary	src/pdfshow.c	/^static int showbinary = 0;$/;"	v	file:
showcolumn	src/pdfshow.c	/^static int showcolumn;$/;"	v	file:
showdecode	src/pdfshow.c	/^static int showdecode = 1;$/;"	v	file:
showgrep	src/pdfshow.c	/^static void showgrep(char *filename)$/;"	f	file:
showobject	src/pdfshow.c	/^static void showobject(int num, int gen)$/;"	f	file:
showpagetree	src/pdfshow.c	/^static void showpagetree(void)$/;"	f	file:
showsafe	src/pdfshow.c	/^static void showsafe(unsigned char *buf, int n)$/;"	f	file:
showstream	src/pdfshow.c	/^static void showstream(int num, int gen)$/;"	f	file:
showtrailer	src/pdfshow.c	/^static void showtrailer(void)$/;"	f	file:
showxref	src/pdfshow.c	/^static void showxref(void)$/;"	f	file:
shrinkwrap	inc/mypdf.h	/^	int shrinkwrap;$/;"	m	struct:mypdf_s
signature	freetype/internal/tttypes.h	/^    FT_ULong   signature;$/;"	m	struct:WOFF_HeaderRec_
size	freetype/freetype.h	/^    FT_Pos    size;$/;"	m	struct:FT_Bitmap_Size_
size	freetype/freetype.h	/^    FT_Size           size;$/;"	m	struct:FT_FaceRec_
size	freetype/ftsizes.h	/^  FT_Activate_Size( FT_Size  size );$/;"	v
size	freetype/ftsizes.h	/^  FT_Done_Size( FT_Size  size );$/;"	v
size	freetype/ftsystem.h	/^    unsigned long        size;$/;"	m	struct:FT_StreamRec_
size	freetype/internal/fthash.h	/^    FT_UInt  size;$/;"	m	struct:FT_HashRec_
size	freetype/internal/ftobjs.h	/^    FT_ULong               size;$/;"	m	struct:FT_CMap_ClassRec_
size	freetype/internal/ftstream.h	/^    FT_Byte    size;$/;"	m	struct:FT_Frame_Field_
size	freetype/internal/psaux.h	/^    FT_Byte             size;         \/* size of field in bytes         *\/$/;"	m	struct:T1_FieldRec_
size	freetype/internal/tttypes.h	/^    TT_Size          size;$/;"	m	struct:TT_LoaderRec_
size	inc/fitz.h	/^	float size;$/;"	m	struct:fz_textspan_s
size	inc/pdf.h	/^	float size;$/;"	m	struct:pdf_gstate_s
size	src/base_hash.c	/^	int size;$/;"	m	struct:fz_hashtable_s	file:
size_object_size	freetype/internal/ftdriver.h	/^    FT_Long                  size_object_size;$/;"	m	struct:FT_Driver_ClassRec_
sizes_list	freetype/freetype.h	/^    FT_ListRec        sizes_list;$/;"	m	struct:FT_FaceRec_
skip_PS_token	freetype/internal/psaux.h	/^    (*skip_PS_token)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_
skip_spaces	freetype/internal/psaux.h	/^    (*skip_spaces)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_
slot	freetype/ftbitmap.h	/^  FT_GlyphSlot_Own_Bitmap( FT_GlyphSlot  slot );$/;"	v
slot	freetype/ftsynth.h	/^  FT_GlyphSlot_Embolden( FT_GlyphSlot  slot );$/;"	v
slot	freetype/ftsynth.h	/^  FT_GlyphSlot_Oblique( FT_GlyphSlot  slot );$/;"	v
slot	freetype/internal/ftobjs.h	/^  FT_Done_GlyphSlot( FT_GlyphSlot  slot );$/;"	v
slot	freetype/internal/ftobjs.h	/^  ft_glyphslot_free_bitmap( FT_GlyphSlot  slot );$/;"	v
slot_object_size	freetype/internal/ftdriver.h	/^    FT_Long                  slot_object_size;$/;"	m	struct:FT_Driver_ClassRec_
smooth	freetype/internal/ftpic.h	/^    void*  smooth;$/;"	m	struct:FT_PIC_Container_
snap_heights	freetype/t1tables.h	/^    FT_Short   snap_heights[13];  \/* including std height *\/$/;"	m	struct:PS_PrivateRec_
snap_widths	freetype/t1tables.h	/^    FT_Short   snap_widths [13];  \/* including std width  *\/$/;"	m	struct:PS_PrivateRec_
snprintf	inc/fitz.h	39;"	d
softmask	inc/pdf.h	/^	pdf_xobject *softmask;$/;"	m	struct:pdf_gstate_s
softmaskbc	inc/pdf.h	/^	float softmaskbc[FZ_MAXCOLORS];$/;"	m	struct:pdf_gstate_s
softmaskctm	inc/pdf.h	/^	fz_matrix softmaskctm;$/;"	m	struct:pdf_gstate_s
sorted	inc/fitz.h	/^			char sorted;$/;"	m	struct:fz_obj_s::__anon19::__anon22
source	freetype/ftimage.h	/^    const void*             source;$/;"	m	struct:FT_Raster_Params_
sph_compatibility_mode	freetype/internal/tttypes.h	/^    FT_Bool               sph_compatibility_mode;$/;"	m	struct:TT_FaceRec_
sph_found_func_flags	freetype/internal/tttypes.h	/^    FT_ULong              sph_found_func_flags; \/* special functions found *\/$/;"	m	struct:TT_FaceRec_
stack	freetype/internal/psaux.h	/^    FT_Long              stack[T1_MAX_CHARSTRINGS_OPERANDS];$/;"	m	struct:T1_DecoderRec_
stack	inc/pdf.h	/^	fz_obj *stack[32];$/;"	m	struct:pdf_csi_s
stage	src/filt_faxd.c	/^	int stage;$/;"	m	struct:fz_faxd_s	file:
standard	freetype/internal/psaux.h	/^    FT_CMap_Class  standard;$/;"	m	struct:T1_CMap_ClassesRec_
standard_height	freetype/t1tables.h	/^    FT_UShort  standard_height[1];$/;"	m	struct:PS_PrivateRec_
standard_width	freetype/t1tables.h	/^    FT_UShort  standard_width[1];$/;"	m	struct:PS_PrivateRec_
start	freetype/internal/psaux.h	/^    FT_Byte*      start;   \/* first character of token in input stream *\/$/;"	m	struct:T1_TokenRec_
start_glyph	freetype/internal/tttypes.h	/^    FT_UShort               start_glyph;$/;"	m	struct:TT_SBit_StrikeRec_
start_point	freetype/internal/psaux.h	/^    T1_Builder_Start_Point_Func    start_point;$/;"	m	struct:T1_Builder_FuncsRec_
startxref	inc/pdf.h	/^	int startxref;$/;"	m	struct:pdf_xref_s
state	inc/fitz.h	/^	unsigned char state[256];$/;"	m	struct:fz_arc4_s
state	inc/fitz.h	/^	unsigned int state[4];$/;"	m	struct:fz_md5_s
state	inc/fitz.h	/^	unsigned int state[8];$/;"	m	struct:fz_sha256_s
state	inc/fitz.h	/^	void *state;$/;"	m	struct:fz_stream_s
stem	freetype/internal/pshints.h	/^    T1_Hints_SetStemFunc   stem;$/;"	m	struct:T1_Hints_FuncsRec_
stem3	freetype/internal/pshints.h	/^    T1_Hints_SetStem3Func  stem3;$/;"	m	struct:T1_Hints_FuncsRec_
stems	freetype/internal/pshints.h	/^    T2_Hints_StemsFunc    stems;$/;"	m	struct:T2_Hints_FuncsRec_
stmf	inc/pdf.h	/^	pdf_cryptfilter stmf;$/;"	m	struct:pdf_crypt_s
stmlen	src/pdf_repair.c	/^	int stmlen;$/;"	m	struct:entry	file:
stmofs	inc/pdf.h	/^	int stmofs;	\/* on-disk stream *\/$/;"	m	struct:pdf_xrefentry_s
stmofs	src/pdf_repair.c	/^	int stmofs;$/;"	m	struct:entry	file:
storageOffset	freetype/internal/tttypes.h	/^    FT_UInt         storageOffset;$/;"	m	struct:TT_NameTableRec_
store	inc/pdf.h	/^	struct pdf_store_s *store;$/;"	m	struct:pdf_xref_s	typeref:struct:pdf_xref_s::pdf_store_s
str	freetype/internal/fthash.h	/^    const char*  str;$/;"	m	union:FT_Hashkey_
str	src/res_font.c	/^	char *str;$/;"	m	struct:ft_error	file:
strcmpignorespace	src/pdf_font.c	/^static int strcmpignorespace(char *a, char *b)$/;"	f	file:
stream	freetype/freetype.h	/^    FT_Stream         stream;$/;"	m	struct:FT_FaceRec_
stream	freetype/freetype.h	/^    FT_Stream       stream;$/;"	m	struct:FT_Open_Args_
stream	freetype/internal/ftstream.h	/^  FT_Stream_Close( FT_Stream  stream );$/;"	v
stream	freetype/internal/ftstream.h	/^  FT_Stream_ExitFrame( FT_Stream  stream );$/;"	v
stream	freetype/internal/ftstream.h	/^  FT_Stream_GetChar( FT_Stream  stream );$/;"	v
stream	freetype/internal/ftstream.h	/^  FT_Stream_GetULong( FT_Stream  stream );$/;"	v
stream	freetype/internal/ftstream.h	/^  FT_Stream_GetULongLE( FT_Stream  stream );$/;"	v
stream	freetype/internal/ftstream.h	/^  FT_Stream_GetUOffset( FT_Stream  stream );$/;"	v
stream	freetype/internal/ftstream.h	/^  FT_Stream_GetUShort( FT_Stream  stream );$/;"	v
stream	freetype/internal/ftstream.h	/^  FT_Stream_GetUShortLE( FT_Stream  stream );$/;"	v
stream	freetype/internal/ftstream.h	/^  FT_Stream_Pos( FT_Stream  stream );$/;"	v
stream	freetype/internal/psaux.h	/^    AFM_Stream    stream;$/;"	m	struct:AFM_ParserRec_
stream	freetype/internal/tttypes.h	/^    FT_Stream        stream;$/;"	m	struct:TT_LoaderRec_
stream	freetype/internal/tttypes.h	/^    FT_Stream       stream;$/;"	m	struct:TT_NameTableRec_
strf	inc/pdf.h	/^	pdf_cryptfilter strf;$/;"	m	struct:pdf_crypt_s
strid	freetype/ftmm.h	/^    FT_UInt     strid;$/;"	m	struct:FT_Var_Axis_
strid	freetype/ftmm.h	/^    FT_UInt    strid;$/;"	m	struct:FT_Var_Named_Style_
stride	src/filt_faxd.c	/^	int stride;$/;"	m	struct:fz_faxd_s	file:
stride	src/filt_predict.c	/^	int stride;$/;"	m	struct:fz_predict_s	file:
strike_out	freetype/ftwinfnt.h	/^    FT_Byte    strike_out;$/;"	m	struct:FT_WinFNT_HeaderRec_
string	freetype/ftsnames.h	/^    FT_Byte*   string;      \/* this string is *not* null-terminated! *\/$/;"	m	struct:FT_SfntName_
string	freetype/ftsnames.h	/^    FT_Byte*  string;      \/* this string is *not* null-terminated! *\/$/;"	m	struct:FT_SfntLangTag_
string	freetype/internal/tttypes.h	/^    FT_Byte*  string;$/;"	m	struct:TT_LangTagRec_
string	freetype/internal/tttypes.h	/^    FT_Byte*  string;$/;"	m	struct:TT_NameRec_
stringLength	freetype/internal/tttypes.h	/^    FT_UShort  stringLength;$/;"	m	struct:TT_LangTagRec_
stringLength	freetype/internal/tttypes.h	/^    FT_UShort  stringLength;$/;"	m	struct:TT_NameRec_
stringOffset	freetype/internal/tttypes.h	/^    FT_ULong   stringOffset;$/;"	m	struct:TT_LangTagRec_
stringOffset	freetype/internal/tttypes.h	/^    FT_ULong   stringOffset;$/;"	m	struct:TT_NameRec_
string_len	freetype/ftsnames.h	/^    FT_UInt    string_len;  \/* in bytes                              *\/$/;"	m	struct:FT_SfntName_
string_len	freetype/ftsnames.h	/^    FT_UInt   string_len;  \/* in bytes                              *\/$/;"	m	struct:FT_SfntLangTag_
strings	freetype/internal/tttypes.h	/^    FT_Byte*   strings;$/;"	m	struct:TT_BDFRec_
strings_size	freetype/internal/tttypes.h	/^    FT_ULong   strings_size;$/;"	m	struct:TT_BDFRec_
stroke	inc/fitz.h	/^	fz_strokestate *stroke;$/;"	m	struct:fz_displaynode_s
stroke	inc/pdf.h	/^	pdf_material stroke;$/;"	m	struct:pdf_gstate_s
stroke_width	freetype/internal/t1types.h	/^    FT_Fixed         stroke_width;$/;"	m	struct:T1_FontRec_
stroke_width	freetype/t1tables.h	/^    FT_Pos         stroke_width;$/;"	m	struct:CID_FaceDictRec_
strokepath	inc/fitz.h	/^	void (*strokepath)(void *, fz_path *, fz_strokestate *, fz_matrix, fz_colorspace *, float *color, float alpha);$/;"	m	struct:fz_device_s
stroker	freetype/ftstroke.h	/^  FT_Stroker_Done( FT_Stroker  stroker );$/;"	v
stroker	freetype/ftstroke.h	/^  FT_Stroker_EndSubPath( FT_Stroker  stroker );$/;"	v
stroker	freetype/ftstroke.h	/^  FT_Stroker_Rewind( FT_Stroker  stroker );$/;"	v
strokestate	inc/pdf.h	/^	fz_strokestate strokestate;$/;"	m	struct:pdf_gstate_s
stroketext	inc/fitz.h	/^	void (*stroketext)(void *, fz_text *, fz_strokestate *, fz_matrix, fz_colorspace *, float *color, float alpha);$/;"	m	struct:fz_device_s
strtoll	inc/fitz.h	40;"	d
style_flags	freetype/freetype.h	/^    FT_Long           style_flags;$/;"	m	struct:FT_FaceRec_
style_name	freetype/freetype.h	/^    FT_String*        style_name;$/;"	m	struct:FT_FaceRec_
subglyphs	freetype/freetype.h	/^    FT_SubGlyph       subglyphs;$/;"	m	struct:FT_GlyphSlotRec_
subglyphs	freetype/internal/ftgloadr.h	/^    FT_SubGlyph  subglyphs;     \/* subglyphs                 *\/$/;"	m	struct:FT_GlyphLoadRec_
subrmap_offset	freetype/t1tables.h	/^    FT_ULong       subrmap_offset;$/;"	m	struct:CID_FaceDictRec_
subrs	freetype/internal/psaux.h	/^    FT_Byte**            subrs;$/;"	m	struct:T1_DecoderRec_
subrs	freetype/internal/t1types.h	/^    CID_Subrs        subrs;$/;"	m	struct:CID_FaceRec_
subrs	freetype/internal/t1types.h	/^    FT_Byte**        subrs;$/;"	m	struct:T1_FontRec_
subrs_block	freetype/internal/t1types.h	/^    FT_Byte*         subrs_block;$/;"	m	struct:T1_FontRec_
subrs_hash	freetype/internal/psaux.h	/^    FT_Hash              subrs_hash;   \/* used if `num_subrs' was massaged *\/$/;"	m	struct:T1_DecoderRec_
subrs_hash	freetype/internal/t1types.h	/^    FT_Hash          subrs_hash;$/;"	m	struct:T1_FontRec_
subrs_len	freetype/internal/psaux.h	/^    FT_UInt*             subrs_len;    \/* array of subrs length (optional) *\/$/;"	m	struct:T1_DecoderRec_
subrs_len	freetype/internal/t1types.h	/^    FT_UInt*         subrs_len;$/;"	m	struct:T1_FontRec_
supplement	freetype/t1tables.h	/^    FT_Int          supplement;$/;"	m	struct:CID_FaceInfoRec_
sxHeight	freetype/tttables.h	/^    FT_Short   sxHeight;$/;"	m	struct:TT_OS2_
t1_blend_blue_scale	freetype/t1tables.h	265;"	d
t1_blend_blue_shift	freetype/t1tables.h	266;"	d
t1_blend_blue_values	freetype/t1tables.h	259;"	d
t1_blend_family_blues	freetype/t1tables.h	267;"	d
t1_blend_family_other_blues	freetype/t1tables.h	268;"	d
t1_blend_force_bold	freetype/t1tables.h	269;"	d
t1_blend_italic_angle	freetype/t1tables.h	258;"	d
t1_blend_max	freetype/t1tables.h	270;"	d
t1_blend_other_blues	freetype/t1tables.h	260;"	d
t1_blend_standard_height	freetype/t1tables.h	262;"	d
t1_blend_standard_widths	freetype/t1tables.h	261;"	d
t1_blend_stem_snap_heights	freetype/t1tables.h	264;"	d
t1_blend_stem_snap_widths	freetype/t1tables.h	263;"	d
t1_blend_underline_position	freetype/t1tables.h	256;"	d
t1_blend_underline_thickness	freetype/t1tables.h	257;"	d
t1_builder_funcs	freetype/internal/psaux.h	/^    const T1_Builder_FuncsRec*  t1_builder_funcs;$/;"	m	struct:PSAux_ServiceRec_
t1_cmap_classes	freetype/internal/psaux.h	/^    T1_CMap_Classes  t1_cmap_classes;$/;"	m	struct:PSAux_ServiceRec_
t1_decoder_funcs	freetype/internal/psaux.h	/^    const T1_Decoder_FuncsRec*  t1_decoder_funcs;$/;"	m	struct:PSAux_ServiceRec_
t1_decrypt	freetype/internal/psaux.h	/^    (*t1_decrypt)( FT_Byte*   buffer,$/;"	m	struct:PSAux_ServiceRec_
t3matrix	inc/fitz.h	/^	fz_matrix t3matrix;$/;"	m	struct:fz_font_s
t3procs	inc/fitz.h	/^	fz_buffer **t3procs; \/* has 256 entries if used *\/$/;"	m	struct:fz_font_s
t3resources	inc/fitz.h	/^	fz_obj *t3resources;$/;"	m	struct:fz_font_s
t3run	inc/fitz.h	/^	fz_error (*t3run)(struct pdf_xref_s *xref, fz_obj *resources, fz_buffer *contents,$/;"	m	struct:fz_font_s
t3widths	inc/fitz.h	/^	float *t3widths; \/* has 256 entries if used *\/$/;"	m	struct:fz_font_s
t3xref	inc/fitz.h	/^	void *t3xref; \/* a pdf_xref for the callback *\/$/;"	m	struct:fz_font_s
table	freetype/internal/fthash.h	/^    FT_Hashnode*  table;$/;"	m	struct:FT_HashRec_
table	freetype/internal/tttypes.h	/^    FT_Byte*   table;$/;"	m	struct:TT_BDFRec_
table	inc/pdf.h	/^	pdf_xrefentry *table;$/;"	m	struct:pdf_xref_s
table	inc/pdf.h	/^	unsigned short *table;$/;"	m	struct:pdf_cmap_s
table	src/filt_lzwd.c	/^	lzw_code table[NUMCODES];$/;"	m	struct:fz_lzwd_s	file:
table_end	freetype/internal/tttypes.h	/^    FT_Byte*   table_end;$/;"	m	struct:TT_BDFRec_
table_offset	freetype/internal/tttypes.h	/^    FT_ULong            table_offset;$/;"	m	struct:TT_SBit_RangeRec_
tag	freetype/freetype.h	/^    FT_ULong    tag;$/;"	m	struct:FT_Parameter_
tag	freetype/ftmm.h	/^    FT_ULong    tag;$/;"	m	struct:FT_Var_Axis_
tag	freetype/internal/tttypes.h	/^    FT_ULong   tag;$/;"	m	struct:TTC_HeaderRec_
tags	freetype/ftimage.h	/^    char*       tags;            \/* the points flags                   *\/$/;"	m	struct:FT_Outline_
tags	freetype/internal/tttypes.h	/^    FT_Byte*    tags;        \/* current touch flags         *\/$/;"	m	struct:TT_GlyphZoneRec_
tail	freetype/fttypes.h	/^    FT_ListNode  tail;$/;"	m	struct:FT_ListRec_
target	freetype/ftimage.h	/^    const FT_Bitmap*        target;$/;"	m	struct:FT_Raster_Params_
tcap	inc/pdf.h	/^	int tlen, tcap;$/;"	m	struct:pdf_cmap_s
text	inc/fitz.h	/^		fz_text *text;$/;"	m	union:fz_displaynode_s::__anon27
text	inc/fitz.h	/^	fz_textchar *text;$/;"	m	struct:fz_textspan_s
text	inc/pdf.h	/^	fz_text *text;$/;"	m	struct:pdf_csi_s
text	inc/pdf.h	/^	fz_textspan *text;$/;"	m	struct:pdf_page_s
textmode	inc/pdf.h	/^	int textmode;$/;"	m	struct:pdf_csi_s
tight	src/obj_print.c	/^	int tight;$/;"	m	struct:fmt	file:
title	inc/pdf.h	/^	char *title;$/;"	m	struct:pdf_outline_s
tlen	inc/pdf.h	/^	int tlen, tcap;$/;"	m	struct:pdf_cmap_s
tlm	inc/pdf.h	/^	fz_matrix tlm;$/;"	m	struct:pdf_csi_s
tm	inc/pdf.h	/^	fz_matrix tm;$/;"	m	struct:pdf_csi_s
to_bytes	freetype/internal/psaux.h	/^    (*to_bytes)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_coord_array	freetype/internal/psaux.h	/^    (*to_coord_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_fixed	freetype/internal/psaux.h	/^    (*to_fixed)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_fixed_array	freetype/internal/psaux.h	/^    (*to_fixed_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_int	freetype/internal/psaux.h	/^    (*to_int)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_
to_token	freetype/internal/psaux.h	/^    (*to_token)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_token_array	freetype/internal/psaux.h	/^    (*to_token_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
top	freetype/ftcache.h	/^    FT_Char   top;$/;"	m	struct:FTC_SBitRec_
top	freetype/ftglyph.h	/^    FT_Int       top;$/;"	m	struct:FT_BitmapGlyphRec_
top	freetype/internal/psaux.h	/^    FT_Long*             top;$/;"	m	struct:T1_DecoderRec_
top	inc/pdf.h	/^	int top;$/;"	m	struct:pdf_csi_s
top_bearing	freetype/internal/tttypes.h	/^    FT_Int           top_bearing;$/;"	m	struct:TT_LoaderRec_
topctm	inc/pdf.h	/^	fz_matrix topctm;$/;"	m	struct:pdf_csi_s
totalSfntSize	freetype/internal/tttypes.h	/^    FT_ULong   totalSfntSize;$/;"	m	struct:WOFF_HeaderRec_
tottfcmap	inc/pdf.h	/^	pdf_cmap *tottfcmap;$/;"	m	struct:pdf_fontdesc_s
tounicode	inc/pdf.h	/^	pdf_cmap *tounicode;$/;"	m	struct:pdf_fontdesc_s
toxyz	inc/fitz.h	/^	void (*toxyz)(fz_colorspace *, float *src, float *xyz);$/;"	m	struct:fz_colorspace_s
trace_count	freetype/internal/ftdebug.h	/^    trace_count$/;"	e	enum:FT_Trace_
trailer	inc/pdf.h	/^	fz_obj *trailer;$/;"	m	struct:pdf_xref_s
transform	freetype/internal/ftgloadr.h	/^    FT_Matrix  transform;$/;"	m	struct:FT_SubGlyphRec_
transform_delta	freetype/internal/ftobjs.h	/^    FT_Vector  transform_delta;$/;"	m	struct:FT_Face_InternalRec_
transform_flags	freetype/internal/ftobjs.h	/^    FT_Int     transform_flags;$/;"	m	struct:FT_Face_InternalRec_
transform_glyph	freetype/ftrender.h	/^    FT_Renderer_TransformFunc  transform_glyph;$/;"	m	struct:FT_Renderer_Class_
transform_matrix	freetype/internal/ftobjs.h	/^    FT_Matrix  transform_matrix;$/;"	m	struct:FT_Face_InternalRec_
transparency	inc/pdf.h	/^	int transparency;$/;"	m	struct:pdf_page_s
transparency	inc/pdf.h	/^	int transparency;$/;"	m	struct:pdf_xobject_s
trm	inc/fitz.h	/^	fz_matrix trm;$/;"	m	struct:fz_text_s
truetype	freetype/internal/ftpic.h	/^    void*  truetype;$/;"	m	struct:FT_PIC_Container_
ttc_header	freetype/internal/tttypes.h	/^    TTC_HeaderRec         ttc_header;$/;"	m	struct:TT_FaceRec_
type	freetype/freetype.h	/^    FT_Size_Request_Type  type;$/;"	m	struct:FT_Size_RequestRec_
type	freetype/ftbdf.h	/^    BDF_PropertyType  type;$/;"	m	struct:BDF_PropertyRec_
type	freetype/internal/ftrfork.h	/^    FT_RFork_Rule          type;$/;"	m	struct:ft_raccess_guess_rec_
type	freetype/internal/psaux.h	/^    T1_FieldType        type;         \/* type of field                  *\/$/;"	m	struct:T1_FieldRec_
type	freetype/internal/psaux.h	/^    T1_TokenType  type;    \/* type of token                            *\/$/;"	m	struct:T1_TokenRec_
type	inc/fitz.h	/^	int type; \/* linear, radial, mesh *\/$/;"	m	struct:fz_shade_s
type	inc/pdf.h	/^	int type;	\/* 0=unset (f)ree i(n)use (o)bjstm *\/$/;"	m	struct:pdf_xrefentry_s
type1	freetype/internal/t1types.h	/^    T1_FontRec      type1;$/;"	m	struct:T1_FaceRec_
u	freetype/ftbdf.h	/^    } u;$/;"	m	struct:BDF_PropertyRec_	typeref:union:BDF_PropertyRec_::__anon35
u	inc/fitz.h	/^	} u;$/;"	m	struct:fz_obj_s	typeref:union:fz_obj_s::__anon19
u	inc/pdf.h	/^	unsigned char u[48];$/;"	m	struct:pdf_crypt_s
u32	inc/fitz.h	/^		unsigned int u32[16];$/;"	m	union:fz_sha256_s::__anon18
u8	inc/fitz.h	/^		unsigned char u8[64];$/;"	m	union:fz_sha256_s::__anon18
ucs	inc/fitz.h	/^	int ucs; \/* -1 for one ucs to many gid mappings *\/$/;"	m	struct:fz_textel_s
ue	inc/pdf.h	/^	unsigned char ue[32];$/;"	m	struct:pdf_crypt_s
uid_base	freetype/t1tables.h	/^    FT_ULong        uid_base;$/;"	m	struct:CID_FaceInfoRec_
ulCodePageRange1	freetype/tttables.h	/^    FT_ULong   ulCodePageRange1;       \/* Bits 0-31   *\/$/;"	m	struct:TT_OS2_
ulCodePageRange2	freetype/tttables.h	/^    FT_ULong   ulCodePageRange2;       \/* Bits 32-63  *\/$/;"	m	struct:TT_OS2_
ulUnicodeRange1	freetype/tttables.h	/^    FT_ULong   ulUnicodeRange1;        \/* Bits 0-31   *\/$/;"	m	struct:TT_OS2_
ulUnicodeRange2	freetype/tttables.h	/^    FT_ULong   ulUnicodeRange2;        \/* Bits 32-63  *\/$/;"	m	struct:TT_OS2_
ulUnicodeRange3	freetype/tttables.h	/^    FT_ULong   ulUnicodeRange3;        \/* Bits 64-95  *\/$/;"	m	struct:TT_OS2_
ulUnicodeRange4	freetype/tttables.h	/^    FT_ULong   ulUnicodeRange4;        \/* Bits 96-127 *\/$/;"	m	struct:TT_OS2_
underline	freetype/ftwinfnt.h	/^    FT_Byte    underline;$/;"	m	struct:FT_WinFNT_HeaderRec_
underlinePosition	freetype/tttables.h	/^    FT_Short  underlinePosition;$/;"	m	struct:TT_Postscript_
underlineThickness	freetype/tttables.h	/^    FT_Short  underlineThickness;$/;"	m	struct:TT_Postscript_
underline_position	freetype/freetype.h	/^    FT_Short          underline_position;$/;"	m	struct:FT_FaceRec_
underline_position	freetype/t1tables.h	/^    FT_Short    underline_position;$/;"	m	struct:PS_FontInfoRec_
underline_thickness	freetype/freetype.h	/^    FT_Short          underline_thickness;$/;"	m	struct:FT_FaceRec_
underline_thickness	freetype/t1tables.h	/^    FT_UShort   underline_thickness;$/;"	m	struct:PS_FontInfoRec_
unicode	freetype/internal/psaux.h	/^    FT_CMap_Class  unicode;$/;"	m	struct:T1_CMap_ClassesRec_
unicode	freetype/internal/services/svpscmap.h	/^    FT_UInt32  unicode;      \/* bit 31 set: is glyph variant *\/$/;"	m	struct:PS_UniMap_
unique_id	freetype/t1tables.h	/^    FT_Int     unique_id;$/;"	m	struct:PS_PrivateRec_
units_per_EM	freetype/freetype.h	/^    FT_UShort         units_per_EM;$/;"	m	struct:FT_FaceRec_
usBreakChar	freetype/tttables.h	/^    FT_UShort  usBreakChar;$/;"	m	struct:TT_OS2_
usDefaultChar	freetype/tttables.h	/^    FT_UShort  usDefaultChar;$/;"	m	struct:TT_OS2_
usFirstCharIndex	freetype/tttables.h	/^    FT_UShort  usFirstCharIndex;$/;"	m	struct:TT_OS2_
usLastCharIndex	freetype/tttables.h	/^    FT_UShort  usLastCharIndex;$/;"	m	struct:TT_OS2_
usLowerOpticalPointSize	freetype/tttables.h	/^    FT_UShort  usLowerOpticalPointSize;       \/* in twips (1\/20th points) *\/$/;"	m	struct:TT_OS2_
usMaxContext	freetype/tttables.h	/^    FT_UShort  usMaxContext;$/;"	m	struct:TT_OS2_
usUpperOpticalPointSize	freetype/tttables.h	/^    FT_UShort  usUpperOpticalPointSize;       \/* in twips (1\/20th points) *\/$/;"	m	struct:TT_OS2_
usWeightClass	freetype/tttables.h	/^    FT_UShort  usWeightClass;$/;"	m	struct:TT_OS2_
usWidthClass	freetype/tttables.h	/^    FT_UShort  usWidthClass;$/;"	m	struct:TT_OS2_
usWinAscent	freetype/tttables.h	/^    FT_UShort  usWinAscent;$/;"	m	struct:TT_OS2_
usWinDescent	freetype/tttables.h	/^    FT_UShort  usWinDescent;$/;"	m	struct:TT_OS2_
use_extra	freetype/internal/ftgloadr.h	/^    FT_Bool          use_extra;$/;"	m	struct:FT_GlyphLoaderRec_
usebackground	inc/fitz.h	/^	int usebackground;	\/* background color for fills but not 'sh' *\/$/;"	m	struct:fz_shade_s
usecmap	inc/pdf.h	/^	pdf_cmap *usecmap;$/;"	m	struct:pdf_cmap_s
usecmapname	inc/pdf.h	/^	char usecmapname[32];$/;"	m	struct:pdf_cmap_s
used	freetype/internal/fthash.h	/^    FT_UInt  used;$/;"	m	struct:FT_HashRec_
usefunction	inc/fitz.h	/^	int usefunction;$/;"	m	struct:fz_shade_s
user	freetype/ftimage.h	/^    void*                   user;$/;"	m	struct:FT_Raster_Params_
user	freetype/ftsystem.h	/^    void*            user;$/;"	m	struct:FT_MemoryRec_
user	inc/fitz.h	/^	void *user;$/;"	m	struct:fz_device_s
user_data	freetype/internal/psaux.h	/^    void*         user_data;$/;"	m	struct:AFM_ParserRec_
userdata	inc/mypdf.h	/^	void *userdata;$/;"	m	struct:mypdf_s
v	inc/fitz.h	/^	float v;$/;"	m	union:fz_pathel_s
v	inc/fitz.h	/^	fz_obj *v;$/;"	m	struct:fz_keyval_s
v	inc/pdf.h	/^	float v[32];$/;"	m	struct:pdf_material_s
v	inc/pdf.h	/^	int v;$/;"	m	struct:pdf_crypt_s
vadvance	freetype/internal/tttypes.h	/^    FT_Int           vadvance;$/;"	m	struct:TT_LoaderRec_
val	src/base_hash.c	/^	void *val;$/;"	m	struct:fz_hashentry_s	file:
val	src/filt_faxd.c	/^	short val;$/;"	m	struct:cfd_node_s	file:
val	src/pdf_store.c	/^	void *val;$/;"	m	struct:pdf_item_s	file:
valid	freetype/internal/ftvalid.h	/^  ft_validator_run( FT_Validator  valid );$/;"	v
value	freetype/ftsystem.h	/^    long   value;$/;"	m	union:FT_StreamDesc_
value	freetype/internal/ftstream.h	/^    FT_Byte    value;$/;"	m	struct:FT_Frame_Field_
value	src/filt_lzwd.c	/^	unsigned char value;		\/* data value *\/$/;"	m	struct:lzw_code_s	file:
var	freetype/internal/tttypes.h	/^    void*                 var;$/;"	m	struct:TT_FaceRec_
var_postscript_prefix	freetype/internal/tttypes.h	/^    const char*           var_postscript_prefix;     \/* since 2.7.2 *\/$/;"	m	struct:TT_FaceRec_
var_postscript_prefix_len	freetype/internal/tttypes.h	/^    FT_UInt               var_postscript_prefix_len; \/* since 2.7.2 *\/$/;"	m	struct:TT_FaceRec_
variant_list	freetype/internal/ftobjs.h	/^    FT_CMap_VariantListFunc       variant_list;$/;"	m	struct:FT_CMap_ClassRec_
variantchar_list	freetype/internal/ftobjs.h	/^    FT_CMap_VariantCharListFunc   variantchar_list;$/;"	m	struct:FT_CMap_ClassRec_
variation_support	freetype/internal/tttypes.h	/^    FT_UInt32             variation_support;     \/* since 2.7.1 *\/$/;"	m	struct:TT_FaceRec_
vec	freetype/fttrigon.h	/^  FT_Vector_Length( FT_Vector*  vec );$/;"	v
vector	freetype/internal/ftcalc.h	/^  FT_Vector_NormLen( FT_Vector*  vector );$/;"	v
version	freetype/ftwinfnt.h	/^    FT_UShort  version;$/;"	m	struct:FT_WinFNT_HeaderRec_
version	freetype/internal/tttypes.h	/^    FT_Fixed   version;$/;"	m	struct:TTC_HeaderRec_
version	freetype/internal/tttypes.h	/^    FT_UShort     version;$/;"	m	struct:TT_Gasp_
version	freetype/t1tables.h	/^    FT_String*  version;$/;"	m	struct:PS_FontInfoRec_
version	freetype/tttables.h	/^    FT_Fixed   version;$/;"	m	struct:TT_MaxProfile_
version	freetype/tttables.h	/^    FT_UShort  version;                \/* 0x0001 - more or 0xFFFF *\/$/;"	m	struct:TT_OS2_
version	inc/pdf.h	/^	int version;$/;"	m	struct:pdf_xref_s
version_major	freetype/internal/ftobjs.h	/^    FT_Int             version_major;$/;"	m	struct:FT_LibraryRec_
version_minor	freetype/internal/ftobjs.h	/^    FT_Int             version_minor;$/;"	m	struct:FT_LibraryRec_
version_patch	freetype/internal/ftobjs.h	/^    FT_Int             version_patch;$/;"	m	struct:FT_LibraryRec_
vert	freetype/internal/tttypes.h	/^    TT_SBit_LineMetricsRec  vert;$/;"	m	struct:TT_SBit_ScaleRec_
vert	freetype/internal/tttypes.h	/^    TT_SBit_LineMetricsRec  vert;$/;"	m	struct:TT_SBit_StrikeRec_
vertAdvance	freetype/freetype.h	/^    FT_Pos  vertAdvance;$/;"	m	struct:FT_Glyph_Metrics_
vertAdvance	freetype/internal/tttypes.h	/^    FT_UShort  vertAdvance;$/;"	m	struct:TT_SBit_MetricsRec_
vertBearingX	freetype/freetype.h	/^    FT_Pos  vertBearingX;$/;"	m	struct:FT_Glyph_Metrics_
vertBearingX	freetype/internal/tttypes.h	/^    FT_Short   vertBearingX;$/;"	m	struct:TT_SBit_MetricsRec_
vertBearingY	freetype/freetype.h	/^    FT_Pos  vertBearingY;$/;"	m	struct:FT_Glyph_Metrics_
vertBearingY	freetype/internal/tttypes.h	/^    FT_Short   vertBearingY;$/;"	m	struct:TT_SBit_MetricsRec_
vertResolution	freetype/freetype.h	/^    FT_UInt               vertResolution;$/;"	m	struct:FT_Size_RequestRec_
vert_metrics_offset	freetype/internal/tttypes.h	/^    FT_ULong              vert_metrics_offset;$/;"	m	struct:TT_FaceRec_
vert_metrics_size	freetype/internal/tttypes.h	/^    FT_ULong              vert_metrics_size;$/;"	m	struct:TT_FaceRec_
vertical	freetype/internal/tttypes.h	/^    TT_VertHeader         vertical;     \/* TT Vertical header, if present *\/$/;"	m	struct:TT_FaceRec_
vertical_info	freetype/internal/tttypes.h	/^    FT_Bool               vertical_info;$/;"	m	struct:TT_FaceRec_
vertical_resolution	freetype/ftwinfnt.h	/^    FT_UShort  vertical_resolution;$/;"	m	struct:FT_WinFNT_HeaderRec_
vmtx	inc/pdf.h	/^	pdf_vmtx *vmtx;$/;"	m	struct:pdf_fontdesc_s
vmtxcap	inc/pdf.h	/^	int nvmtx, vmtxcap;$/;"	m	struct:pdf_fontdesc_s
w	inc/fitz.h	/^	int x, y, w, h, n;$/;"	m	struct:fz_pixmap_s
w	inc/pdf.h	/^	int w;	\/* type3 fonts can be big! *\/$/;"	m	struct:pdf_hmtx_s
w	inc/pdf.h	/^	short w;$/;"	m	struct:pdf_vmtx_s
weight	freetype/ftwinfnt.h	/^    FT_UShort  weight;$/;"	m	struct:FT_WinFNT_HeaderRec_
weight	freetype/t1tables.h	/^    FT_String*  weight;$/;"	m	struct:PS_FontInfoRec_
weight_vector	freetype/t1tables.h	/^    FT_Fixed*        weight_vector;$/;"	m	struct:PS_BlendRec_
width	freetype/freetype.h	/^    FT_Long               width;$/;"	m	struct:FT_Size_RequestRec_
width	freetype/freetype.h	/^    FT_Pos  width;$/;"	m	struct:FT_Glyph_Metrics_
width	freetype/freetype.h	/^    FT_Short  width;$/;"	m	struct:FT_Bitmap_Size_
width	freetype/ftcache.h	/^    FT_Byte   width;$/;"	m	struct:FTC_SBitRec_
width	freetype/ftcache.h	/^    FT_UInt     width;$/;"	m	struct:FTC_ImageTypeRec_
width	freetype/ftcache.h	/^    FT_UInt     width;$/;"	m	struct:FTC_ScalerRec_
width	freetype/ftimage.h	/^    unsigned int    width;$/;"	m	struct:FT_Bitmap_
width	freetype/internal/tttypes.h	/^    FT_Byte  width;$/;"	m	struct:TT_SBit_Small_Metrics_
width	freetype/internal/tttypes.h	/^    FT_UShort  width;$/;"	m	struct:TT_SBit_MetricsRec_
widthcount	inc/fitz.h	/^	int widthcount;$/;"	m	struct:fz_font_s
widthtable	inc/fitz.h	/^	int *widthtable;$/;"	m	struct:fz_font_s
winh	inc/mypdf.h	/^	int winw, winh;$/;"	m	struct:mypdf_s
winw	inc/mypdf.h	/^	int winw, winh;$/;"	m	struct:mypdf_s
wmode	inc/fitz.h	/^	int wmode;$/;"	m	struct:fz_text_s
wmode	inc/fitz.h	/^	int wmode;$/;"	m	struct:fz_textspan_s
wmode	inc/pdf.h	/^	int wmode;$/;"	m	struct:pdf_cmap_s
wmode	inc/pdf.h	/^	int wmode;$/;"	m	struct:pdf_fontdesc_s
word	src/filt_faxd.c	/^	unsigned int word;$/;"	m	struct:fz_faxd_s	file:
wordspace	inc/pdf.h	/^	float wordspace;$/;"	m	struct:pdf_gstate_s
wp	inc/fitz.h	/^	unsigned char *bp, *rp, *wp, *ep;$/;"	m	struct:fz_stream_s
wp	src/filt_basic.c	/^	unsigned char *rp, *wp;$/;"	m	struct:fz_a85d_s	file:
wp	src/filt_faxd.c	/^	unsigned char *rp, *wp;$/;"	m	struct:fz_faxd_s	file:
wp	src/filt_lzwd.c	/^	unsigned char *rp, *wp;$/;"	m	struct:fz_lzwd_s	file:
wp	src/filt_predict.c	/^	unsigned char *rp, *wp;$/;"	m	struct:fz_predict_s	file:
x	freetype/ftimage.h	/^    FT_Pos  x;$/;"	m	struct:FT_Vector_
x	freetype/ftimage.h	/^    short           x;$/;"	m	struct:FT_Span_
x	freetype/fttypes.h	/^    FT_F2Dot14  x;$/;"	m	struct:FT_UnitVector_
x	freetype/internal/t1types.h	/^    FT_Int   x;$/;"	m	struct:AFM_KernPairRec_
x	inc/fitz.h	/^	float x, y;$/;"	m	struct:fz_point_s
x	inc/fitz.h	/^	float x, y;$/;"	m	struct:fz_textel_s
x	inc/fitz.h	/^	int x, e, h, y;$/;"	m	struct:fz_edge_s
x	inc/fitz.h	/^	int x, y, w, h, n;$/;"	m	struct:fz_pixmap_s
x	inc/fitz.h	/^	unsigned x;$/;"	m	struct:fz_arc4_s
x	inc/pdf.h	/^	short x;$/;"	m	struct:pdf_vmtx_s
x0	inc/fitz.h	/^	float x0, y0;$/;"	m	struct:fz_rect_s
x0	inc/fitz.h	/^	int x0, y0;$/;"	m	struct:fz_bbox_s
x1	inc/fitz.h	/^	float x1, y1;$/;"	m	struct:fz_rect_s
x1	inc/fitz.h	/^	int x1, y1;$/;"	m	struct:fz_bbox_s
xAvgCharWidth	freetype/tttables.h	/^    FT_Short   xAvgCharWidth;$/;"	m	struct:TT_OS2_
xHeight	freetype/tttables.h	/^    FT_UShort  xHeight;$/;"	m	struct:TT_PCLT_
xMax	freetype/ftimage.h	/^    FT_Pos  xMax, yMax;$/;"	m	struct:FT_BBox_
xMax	freetype/tttables.h	/^    FT_Short   xMax;$/;"	m	struct:TT_Header_
xMax_Extent	freetype/tttables.h	/^    FT_Short   xMax_Extent;            \/* xmax extents          *\/$/;"	m	struct:TT_HoriHeader_
xMin	freetype/ftimage.h	/^    FT_Pos  xMin, yMin;$/;"	m	struct:FT_BBox_
xMin	freetype/tttables.h	/^    FT_Short   xMin;$/;"	m	struct:TT_Header_
x_offset	freetype/internal/tttypes.h	/^    FT_Char    x_offset;$/;"	m	struct:TT_SBit_ComponentRec_
x_ppem	freetype/freetype.h	/^    FT_Pos    x_ppem;$/;"	m	struct:FT_Bitmap_Size_
x_ppem	freetype/freetype.h	/^    FT_UShort  x_ppem;      \/* horizontal pixels per EM               *\/$/;"	m	struct:FT_Size_Metrics_
x_ppem	freetype/internal/tttypes.h	/^    FT_Byte                 x_ppem;$/;"	m	struct:TT_SBit_ScaleRec_
x_ppem	freetype/internal/tttypes.h	/^    FT_Byte                 x_ppem;$/;"	m	struct:TT_SBit_StrikeRec_
x_ppem_substitute	freetype/internal/tttypes.h	/^    FT_Byte                 x_ppem_substitute;$/;"	m	struct:TT_SBit_ScaleRec_
x_res	freetype/ftcache.h	/^    FT_UInt     x_res;$/;"	m	struct:FTC_ScalerRec_
x_scale	freetype/freetype.h	/^    FT_Fixed   x_scale;     \/* scaling values used to convert font    *\/$/;"	m	struct:FT_Size_Metrics_
xadvance	freetype/ftcache.h	/^    FT_Char   xadvance;$/;"	m	struct:FTC_SBitRec_
xbalance	inc/pdf.h	/^	int xbalance;$/;"	m	struct:pdf_csi_s
xdir	inc/fitz.h	/^	int xdir, ydir; \/* -1 or +1 *\/$/;"	m	struct:fz_edge_s
xheight	inc/pdf.h	/^	float xheight;$/;"	m	struct:pdf_fontdesc_s
xmove	inc/fitz.h	/^	int xmove;$/;"	m	struct:fz_edge_s
xref	inc/fitz.h	/^			struct pdf_xref_s *xref;$/;"	m	struct:fz_obj_s::__anon19::__anon23	typeref:struct:fz_obj_s::__anon19::__anon23::pdf_xref_s
xref	inc/pdf.h	/^	pdf_xref *xref;$/;"	m	struct:pdf_csi_s
xref	inc/mypdf.h	/^	pdf_xref *xref;$/;"	m	struct:mypdf_s
xref	src/pdfshow.c	/^static pdf_xref *xref = nil;$/;"	v	file:
xstep	inc/pdf.h	/^	float xstep;$/;"	m	struct:pdf_pattern_s
xuid	freetype/t1tables.h	/^    FT_ULong        xuid[16];$/;"	m	struct:CID_FaceInfoRec_
xx	freetype/fttypes.h	/^    FT_Fixed  xx, xy;$/;"	m	struct:FT_Matrix_
xy	freetype/fttypes.h	/^    FT_Fixed  xx, xy;$/;"	m	struct:FT_Matrix_
y	freetype/ftimage.h	/^    FT_Pos  y;$/;"	m	struct:FT_Vector_
y	freetype/fttypes.h	/^    FT_F2Dot14  y;$/;"	m	struct:FT_UnitVector_
y	freetype/internal/t1types.h	/^    FT_Int   y;$/;"	m	struct:AFM_KernPairRec_
y	inc/fitz.h	/^	float x, y;$/;"	m	struct:fz_point_s
y	inc/fitz.h	/^	float x, y;$/;"	m	struct:fz_textel_s
y	inc/fitz.h	/^	int x, e, h, y;$/;"	m	struct:fz_edge_s
y	inc/fitz.h	/^	int x, y, w, h, n;$/;"	m	struct:fz_pixmap_s
y	inc/fitz.h	/^	unsigned y;$/;"	m	struct:fz_arc4_s
y	inc/pdf.h	/^	short y;$/;"	m	struct:pdf_vmtx_s
y0	inc/fitz.h	/^	float x0, y0;$/;"	m	struct:fz_rect_s
y0	inc/fitz.h	/^	int x0, y0;$/;"	m	struct:fz_bbox_s
y1	inc/fitz.h	/^	float x1, y1;$/;"	m	struct:fz_rect_s
y1	inc/fitz.h	/^	int x1, y1;$/;"	m	struct:fz_bbox_s
yMax	freetype/ftimage.h	/^    FT_Pos  xMax, yMax;$/;"	m	struct:FT_BBox_
yMax	freetype/tttables.h	/^    FT_Short   yMax;$/;"	m	struct:TT_Header_
yMax_Extent	freetype/tttables.h	/^    FT_Short   yMax_Extent;             \/* ymax extents            *\/$/;"	m	struct:TT_VertHeader_
yMin	freetype/ftimage.h	/^    FT_Pos  xMin, yMin;$/;"	m	struct:FT_BBox_
yMin	freetype/tttables.h	/^    FT_Short   yMin;$/;"	m	struct:TT_Header_
yStrikeoutPosition	freetype/tttables.h	/^    FT_Short   yStrikeoutPosition;$/;"	m	struct:TT_OS2_
yStrikeoutSize	freetype/tttables.h	/^    FT_Short   yStrikeoutSize;$/;"	m	struct:TT_OS2_
ySubscriptXOffset	freetype/tttables.h	/^    FT_Short   ySubscriptXOffset;$/;"	m	struct:TT_OS2_
ySubscriptXSize	freetype/tttables.h	/^    FT_Short   ySubscriptXSize;$/;"	m	struct:TT_OS2_
ySubscriptYOffset	freetype/tttables.h	/^    FT_Short   ySubscriptYOffset;$/;"	m	struct:TT_OS2_
ySubscriptYSize	freetype/tttables.h	/^    FT_Short   ySubscriptYSize;$/;"	m	struct:TT_OS2_
ySuperscriptXOffset	freetype/tttables.h	/^    FT_Short   ySuperscriptXOffset;$/;"	m	struct:TT_OS2_
ySuperscriptXSize	freetype/tttables.h	/^    FT_Short   ySuperscriptXSize;$/;"	m	struct:TT_OS2_
ySuperscriptYOffset	freetype/tttables.h	/^    FT_Short   ySuperscriptYOffset;$/;"	m	struct:TT_OS2_
ySuperscriptYSize	freetype/tttables.h	/^    FT_Short   ySuperscriptYSize;$/;"	m	struct:TT_OS2_
y_offset	freetype/internal/tttypes.h	/^    FT_Char    y_offset;$/;"	m	struct:TT_SBit_ComponentRec_
y_ppem	freetype/freetype.h	/^    FT_Pos    y_ppem;$/;"	m	struct:FT_Bitmap_Size_
y_ppem	freetype/freetype.h	/^    FT_UShort  y_ppem;      \/* vertical pixels per EM                 *\/$/;"	m	struct:FT_Size_Metrics_
y_ppem	freetype/internal/tttypes.h	/^    FT_Byte                 y_ppem;$/;"	m	struct:TT_SBit_ScaleRec_
y_ppem	freetype/internal/tttypes.h	/^    FT_Byte                 y_ppem;$/;"	m	struct:TT_SBit_StrikeRec_
y_ppem_substitute	freetype/internal/tttypes.h	/^    FT_Byte                 y_ppem_substitute;$/;"	m	struct:TT_SBit_ScaleRec_
y_res	freetype/ftcache.h	/^    FT_UInt     y_res;$/;"	m	struct:FTC_ScalerRec_
y_scale	freetype/freetype.h	/^    FT_Fixed   y_scale;     \/* units to 26.6 fractional pixels        *\/$/;"	m	struct:FT_Size_Metrics_
yadvance	freetype/ftcache.h	/^    FT_Char   yadvance;$/;"	m	struct:FTC_SBitRec_
ydir	inc/fitz.h	/^	int xdir, ydir; \/* -1 or +1 *\/$/;"	m	struct:fz_edge_s
ystep	inc/pdf.h	/^	float ystep;$/;"	m	struct:pdf_pattern_s
yx	freetype/fttypes.h	/^    FT_Fixed  yx, yy;$/;"	m	struct:FT_Matrix_
yy	freetype/fttypes.h	/^    FT_Fixed  yx, yy;$/;"	m	struct:FT_Matrix_
z	freetype/internal/ftcalc.h	/^  FT_MSB( FT_UInt32  z );$/;"	v
z	src/filt_flate.c	/^	z_stream z;$/;"	m	struct:fz_flate_s	file:
zalloc	src/filt_flate.c	/^static void *zalloc(void *opaque, unsigned int items, unsigned int size)$/;"	f	file:
zfree	src/filt_flate.c	/^static void zfree(void *opaque, void *ptr)$/;"	f	file:
zone	freetype/internal/psaux.h	/^    T1_Decoder_Zone      zone;$/;"	m	struct:T1_DecoderRec_
zone	freetype/internal/tttypes.h	/^    TT_GlyphZoneRec  zone;$/;"	m	struct:TT_LoaderRec_
zones	freetype/internal/psaux.h	/^    T1_Decoder_ZoneRec   zones[T1_MAX_SUBRS_CALLS + 1];$/;"	m	struct:T1_DecoderRec_
